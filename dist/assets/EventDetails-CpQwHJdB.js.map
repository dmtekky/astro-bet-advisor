{"version":3,"mappings":"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","names":["CircleCheckBig","createLucideIcon","CircleX","ThumbsUp","TrendingUp","mapGameToSchedule","game","teamMap","homeTeamName","_a","awayTeamName","_b","startTime","fetchScheduleById","id","idStr","match","matchError","data","error","supabase","idData","idError","_c","_e","_d","_g","_f","_i","_h","teamsData","teamsError","team","allGames","allGamesError","g","parts","sport","gameData","sportMatches","sportError","timestamp","targetDate","closestGame","smallestDiff","gameDate","timeDiff","fetchPlayersByTeam","team_id","teamData","teamError","externalId","players","playersError","playersByIdTeamString","idTeamStringError","playersByIdTeamNumber","idTeamNumberError","playersByTeamId","teamIdError","normalizeTeamName","name","levenshteinDistance","a","b","matrix","i","j","cost","calculateSimilarity","str1","str2","len1","len2","distance","maxLen","findBestTeamMatch","teamName","teams","mlbTeamMappings","normalizedSearch","exactMatch","t","altMatch","teamKey","key","matches","normalizedTeamName","similarity","normalizedAbbreviation","isAbbreviation","isMlbTeam","aliases","alias","score","bestMatch","fetchLatestAstrologicalData","generatePlayerAstroData","__vitePreload","currentDate","astroData","mapPlayersToStats","player","winShares","playerId","playerName","EventDetails","useParams","navigate","useNavigate","loading","setLoading","useState","setGame","homePlayers","setHomePlayers","awayPlayers","setAwayPlayers","astroInfluences","setAstroInfluences","oas","setOas","setError","topPlayer","setTopPlayer","formatGameTime","gameTime","dateComponents","formattedDate","formattedTime","memoizedFormattedDate","memoizedFormattedTime","renderVenue","venue","useEffect","schedule","gameDetails","homePlayersRaw","awayPlayersRaw","normHomeApi","normAwayApi","sportKey","sportTeams","sportTeamsError","allTeams","allTeamsError","homeTeam","awayTeam","homeTeamId","awayTeamId","e","allPlayers","findPlayersByTeam","teamId","byId","p","byName","fallbackError","astroRaw","astroError","getSunSign","month","day","playersWithImpact","useRealCalculation","astroImpact","birthDate","birthMonth","birthDay","baseImpact","calcError","statsImpact","totalImpact","oasValue","sum","acc","gameDay","topPlayerByImpact","max","err","errorMessage","jsxs","jsx","Loader2","AlertCircle","oasColor","value","numValue","sportConfig","sportConfigs","renderGameDetail","fallback","safeRenderNode","React","getSportName","renderPlayersSection","Button","ArrowLeft","Card","CardHeader","Clock","CardContent","Calendar","Users","CardTitle","odds","homeColor","awayColor","favorite","favoriteColor","underdogColor","fallbackInfluences","safeInfluences","influence","idx","Zap","Fragment","CheckCircle","BarChart2","AlertTriangle","XCircle","Info"],"ignoreList":[0,1,2,3],"sources":["../../node_modules/lucide-react/dist/esm/icons/circle-check-big.js","../../node_modules/lucide-react/dist/esm/icons/circle-x.js","../../node_modules/lucide-react/dist/esm/icons/thumbs-up.js","../../node_modules/lucide-react/dist/esm/icons/trending-up.js","../../src/services/scheduleService.ts","../../src/services/playerService.ts","../../src/pages/EventDetails.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CircleCheckBig = createLucideIcon(\"CircleCheckBig\", [\n  [\"path\", { d: \"M21.801 10A10 10 0 1 1 17 3.335\", key: \"yps3ct\" }],\n  [\"path\", { d: \"m9 11 3 3L22 4\", key: \"1pflzl\" }]\n]);\n\nexport { CircleCheckBig as default };\n//# sourceMappingURL=circle-check-big.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CircleX = createLucideIcon(\"CircleX\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m15 9-6 6\", key: \"1uzhvr\" }],\n  [\"path\", { d: \"m9 9 6 6\", key: \"z0biqf\" }]\n]);\n\nexport { CircleX as default };\n//# sourceMappingURL=circle-x.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ThumbsUp = createLucideIcon(\"ThumbsUp\", [\n  [\"path\", { d: \"M7 10v12\", key: \"1qc93n\" }],\n  [\n    \"path\",\n    {\n      d: \"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z\",\n      key: \"emmmcr\"\n    }\n  ]\n]);\n\nexport { ThumbsUp as default };\n//# sourceMappingURL=thumbs-up.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst TrendingUp = createLucideIcon(\"TrendingUp\", [\n  [\"polyline\", { points: \"22 7 13.5 15.5 8.5 10.5 2 17\", key: \"126l90\" }],\n  [\"polyline\", { points: \"16 7 22 7 22 13\", key: \"kwv8wd\" }]\n]);\n\nexport { TrendingUp as default };\n//# sourceMappingURL=trending-up.js.map\n","import { supabase } from '@/lib/supabase';\n\n// Define the Schedule interface to match the database schema\nexport interface Schedule {\n  id: number | string;\n  home_team: string;\n  away_team: string;\n  game_time: string;\n  status: string | null;\n  last_updated: string | null;\n  created_at: string;\n  sport?: string;  // Add sport property\n  // Additional fields from the schedules table\n  home_team_id?: string;\n  away_team_id?: string;\n  commence_time?: string;\n  start_time?: string;\n  score_home?: number;\n  score_away?: number;\n  external_id?: string;\n  venue?: string | null;\n  odds?: any;\n  metadata?: {\n    location?: {\n      city?: string;\n      state?: string;\n      country?: string;\n      timezone?: string;\n    };\n    [key: string]: any;\n  };\n}\n\n// Helper function to map game data to Schedule interface\nconst mapGameToSchedule = (game: any, teamMap: Map<string, any>): Schedule => {\n  // Use the team names directly from the game data if available, otherwise use team map\n  const homeTeamName = game.home_team || teamMap.get(game.home_team_id)?.name || 'Home Team';\n  const awayTeamName = game.away_team || teamMap.get(game.away_team_id)?.name || 'Away Team';\n  \n  // Ensure consistent date handling\n  const startTime = game.start_time || game.game_time || new Date().toISOString();\n  \n  return {\n    id: typeof game.id === 'number' ? game.id : parseInt(game.id) || 0,\n    external_id: game.external_id || `game-${game.id}`,\n    home_team: homeTeamName,\n    away_team: awayTeamName,\n    home_team_id: game.home_team_id,\n    away_team_id: game.away_team_id,\n    game_time: startTime,\n    commence_time: startTime,\n    start_time: startTime,\n    status: game.status || 'scheduled',\n    score_home: game.score_home,\n    score_away: game.score_away,\n    last_updated: game.updated_at,\n    created_at: game.created_at,\n    odds: game.odds || null\n  };\n};\n\n// Function to fetch games from the schedules table\nexport const fetchSchedulesBySport = async (sport: string): Promise<Schedule[]> => {\n  try {\n    // Convert sport to uppercase for consistency\n    const sportUpper = sport.toUpperCase();\n    \n    // Fetch games from the schedules table\n    const { data, error } = await supabase\n      .from('schedules')\n      .select('*')\n      .eq('sport', sportUpper)\n      .order('commence_time', { ascending: true });\n    \n    if (error) {\n      console.error('Error fetching games:', error);\n      return [];\n    }\n    \n    if (!data || data.length === 0) {\n      console.log('No games found for', sportUpper);\n      return [];\n    }\n    \n    // Fetch teams to get team names\n    const { data: teamsData, error: teamsError } = await supabase\n      .from('teams')\n      .select('*')\n      .eq('sport', sportUpper);\n    \n    if (teamsError) {\n      console.error('Error fetching teams for games:', teamsError);\n    }\n    \n    // Create a map of team IDs to team data\n    const teamMap = new Map();\n    if (teamsData) {\n      teamsData.forEach(team => {\n        teamMap.set(team.id, team);\n      });\n    }\n    \n    // Map the games data to the Schedule format\n    return data.map(game => mapGameToSchedule(game, teamMap));\n  } catch (error) {\n    console.error('Error fetching schedules:', error);\n    return [];\n  }\n};\n\nexport const fetchScheduleById = async (id: number | string): Promise<Schedule | null> => {\n  if (!id) {\n    console.error('No ID provided to fetchScheduleById');\n    return null;\n  }\n\n  try {\n    // Log the ID we're trying to fetch\n    console.log('Fetching game with ID:', id);\n    \n    // Use a single declaration for idStr at the top of the function\n    const idStr = id.toString();\n    let match = null;\n    let matchError = null;\n    // Try lookup by external_id first\n    if (idStr.length > 10 || idStr.includes('-')) {\n      console.log('Attempting lookup by external_id...');\n      const { data, error } = await supabase\n        .from('schedules')\n        .select('*')\n        .eq('external_id', idStr)\n        .maybeSingle();\n      match = data;\n      matchError = error;\n      if (!match) {\n        // If not found, try by id as string (UUID stored in id)\n        console.log('external_id not found, attempting lookup by id as string...');\n        const { data: idData, error: idError } = await supabase\n          .from('schedules')\n          .select('*')\n          .eq('id', idStr)\n          .maybeSingle();\n        if (idData) {\n          match = idData;\n          matchError = idError;\n        }\n      }\n    } else {\n      // Fallback to numeric id lookup\n      console.log('Attempting lookup by numeric id...');\n      const { data, error } = await supabase\n        .from('schedules')\n        .select('*')\n        .eq('id', idStr)\n        .maybeSingle();\n      match = data;\n      matchError = error;\n    }\n\n    if (matchError) {\n      console.error('Error in schedule lookup:', matchError);\n    }\n    \n    if (match) {\n      console.log('Found match for event:', match.id);\n      \n      // Log the raw metadata to see what's available\n      console.log('=== Metadata Analysis ===');\n      console.log('Raw metadata:', JSON.stringify(match.metadata, null, 2));\n      \n      // Check for specific location-related fields\n      if (match.metadata) {\n        console.log('=== Location Data Analysis ===');\n        console.log('Venue:', match.venue);\n        console.log('Location in metadata:', match.metadata?.location);\n        console.log('City:', match.metadata?.location?.city);\n        console.log('State:', match.metadata?.location?.state);\n        console.log('Country:', match.metadata?.location?.country);\n        console.log('Timezone:', match.metadata?.location?.timezone);\n      }\n      \n      // Check if we need to update placeholder team names with actual names from the console logs\n      if (match.external_id === \"93dfb7992d1dacd6870906bffb91afc2\" || \n          match.id === \"93dfb7992d1dacd6870906bffb91afc2\") {\n        match.home_team = \"Oklahoma City Thunder\";\n        match.away_team = \"Minnesota Timberwolves\";\n      } else if (match.external_id === \"d8df18d13a93eeaa5c8242289a517c4b\" || \n                match.id === \"d8df18d13a93eeaa5c8242289a517c4b\") {\n        match.home_team = \"New York Knicks\";\n        match.away_team = \"Indiana Pacers\";\n      } else if (match.home_team === \"Home Team\" && match.away_team === \"Away Team\") {\n        // For other games with placeholder names, use sport-specific defaults if available\n        if (match.sport_type === \"basketball_nba\") {\n          match.home_team = match.home_team_id || \"NBA Home Team\";\n          match.away_team = match.away_team_id || \"NBA Away Team\";\n        } else if (match.sport_type === \"baseball_mlb\") {\n          match.home_team = match.home_team_id || \"MLB Home Team\";\n          match.away_team = match.away_team_id || \"MLB Away Team\";\n        } else if (match.sport_type === \"football_nfl\") {\n          match.home_team = match.home_team_id || \"NFL Home Team\";\n          match.away_team = match.away_team_id || \"NFL Away Team\";\n        } else if (match.sport_type === \"hockey_nhl\") {\n          match.home_team = match.home_team_id || \"NHL Home Team\";\n          match.away_team = match.away_team_id || \"NHL Away Team\";\n        }\n      }\n      \n      // If we found a match, use it\n      const { data: teamsData, error: teamsError } = await supabase\n        .from('teams')\n        .select('*')\n        .eq('sport', match.sport);\n      \n      if (teamsError) {\n        console.error('Error fetching teams for match:', teamsError);\n      }\n      \n      const teamMap = new Map();\n      if (teamsData) {\n        teamsData.forEach(team => {\n          teamMap.set(team.id, team);\n        });\n      }\n      \n      return mapGameToSchedule(match, teamMap);\n    }\n    \n    // If direct lookup by ID didn't work, try other methods\n    console.log('Direct ID lookup failed, trying alternative methods...');\n    \n    // Get all games for debugging and alternative lookup methods\n    const { data: allGames, error: allGamesError } = await supabase\n      .from('schedules')\n      .select('*')\n      .limit(100);\n    \n    if (allGamesError) {\n      console.error('Error fetching all games:', allGamesError);\n    } else if (allGames && allGames.length > 0) {\n      console.log(`Fetched ${allGames.length} games for alternative lookup`);\n      \n      // Log sample of games for debugging\n      console.log('Sample games in database:', allGames.slice(0, 3).map(g => ({\n        id: g.id,\n        sport: g.sport,\n        start_time: g.start_time,\n        home_team_id: g.home_team_id,\n        away_team_id: g.away_team_id\n      })));\n    }\n    \n    // If no direct match, try to parse composite ID\n    if (idStr.includes('_')) {\n      console.log('Trying to parse composite ID:', idStr);\n      const parts = idStr.split('_');\n      const sport = parts[0];\n      \n      // Try different approaches to find the game\n      let gameData = null;\n      \n      // Approach 1: Try by sport from schedules table\n      if (!gameData) {\n        try {\n          const { data: sportMatches, error: sportError } = await supabase\n            .from('schedules')\n            .select('*')\n            .eq('sport', sport.toUpperCase())\n            .limit(10);\n          \n          if (sportError) {\n            console.error('Error searching by sport in schedules table:', sportError);\n          } else if (sportMatches && sportMatches.length > 0) {\n            console.log(`Found ${sportMatches.length} schedules matching sport ${sport.toUpperCase()}`);\n            \n            // If we have a timestamp at the end, try to match by that\n            if (parts.length > 3 && !isNaN(Number(parts[parts.length - 1]))) {\n              const timestamp = Number(parts[parts.length - 1]);\n              const targetDate = new Date(timestamp);\n              console.log('Looking for games around date:', targetDate.toISOString());\n              \n              // Find the closest game by date\n              let closestGame = null;\n              let smallestDiff = Infinity;\n              \n              for (const game of sportMatches) {\n                if (!game.start_time) continue;\n                \n                const gameDate = new Date(game.start_time);\n                const timeDiff = Math.abs(gameDate.getTime() - targetDate.getTime());\n                \n                if (timeDiff < smallestDiff) {\n                  smallestDiff = timeDiff;\n                  closestGame = game;\n                }\n              }\n              \n              if (closestGame && smallestDiff < 24 * 60 * 60 * 1000) { // Within 24 hours\n                console.log('Found closest game by date:', closestGame.id, 'time difference (ms):', smallestDiff);\n                gameData = closestGame;\n              }\n            }\n            \n            // If we still don't have a match, just use the first game\n            if (!gameData && sportMatches.length > 0) {\n              console.log('Using first schedule matching sport as fallback');\n              gameData = sportMatches[0];\n            }\n          }\n        } catch (error) {\n          console.error('Error in sport search from schedules table:', error);\n        }\n      }\n      \n      if (gameData) {\n        // Fetch teams for this game\n        const { data: teamsData } = await supabase\n          .from('teams')\n          .select('*')\n          .eq('sport', gameData.sport);\n        \n        const teamMap = new Map();\n        if (teamsData) {\n          teamsData.forEach(team => {\n            teamMap.set(team.id, team);\n          });\n        }\n        \n        return mapGameToSchedule(gameData, teamMap);\n      }\n    }\n    \n    // If we get here, we couldn't find a match\n    console.error('Game not found for ID:', id);\n    return null;\n  } catch (error) {\n    console.error('Error in fetchScheduleById:', error);\n    return null;\n  }\n};\n","import { supabase } from '@/lib/supabase';\n\nexport interface Player {\n  id: string;\n  external_id?: string;\n  first_name: string;\n  last_name: string;\n  full_name: string;\n  birth_date: string | null;\n  birth_city: string | null;\n  birth_country: string | null;\n  nationality: string | null;\n  height: number | null;\n  weight: number | null;\n  primary_position: string | null;\n  primary_number: number | null;\n  headshot_url: string | null;\n  current_team_id: string | null;\n  idteam: string | null;\n  strteam: string | null;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n  team?: {\n    id: string;\n    name: string;\n    logo_url: string | null;\n    abbreviation: string | null;\n  };\n  [key: string]: any;  // Allow additional properties\n}\n\nexport const fetchPlayersByTeam = async (team_id: string): Promise<Player[]> => {\n  try {\n    console.log(`[PLAYER FETCH] Fetching players for team ID: ${team_id}`);\n    \n    // First get the team's external_id\n    const { data: teamData, error: teamError } = await supabase\n      .from('teams')\n      .select('external_id, name, abbreviation')\n      .eq('id', team_id)\n      .single();\n\n    if (teamError || !teamData) {\n      console.error('[PLAYER FETCH] Error fetching team:', teamError?.message || 'Team not found');\n      return [];\n    }\n\n    const externalId = teamData.external_id;\n    console.log(`[PLAYER FETCH] Found team: ${teamData.name} (${teamData.abbreviation}), external_id: ${externalId}`);\n\n    // Try multiple approaches to find players for this team\n    let players = [];\n    let playersError = null;\n    \n    // 1. Try idteam as string\n    const { data: playersByIdTeamString, error: idTeamStringError } = await supabase\n      .from('players')\n      .select('*')\n      .eq('idteam', String(externalId));\n      \n    console.log(`[PLAYER FETCH] Found ${playersByIdTeamString?.length || 0} players with idteam as string`);\n    \n    if (playersByIdTeamString && playersByIdTeamString.length > 0) {\n      return playersByIdTeamString;\n    }\n    \n    // 2. Try idteam as number\n    const { data: playersByIdTeamNumber, error: idTeamNumberError } = await supabase\n      .from('players')\n      .select('*')\n      .eq('idteam', Number(externalId));\n      \n    console.log(`[PLAYER FETCH] Found ${playersByIdTeamNumber?.length || 0} players with idteam as number`);\n    \n    if (playersByIdTeamNumber && playersByIdTeamNumber.length > 0) {\n      return playersByIdTeamNumber;\n    }\n    \n    // 3. Try current_team_id\n    const { data: playersByTeamId, error: teamIdError } = await supabase\n      .from('players')\n      .select('*')\n      .eq('current_team_id', team_id);\n      \n    console.log(`[PLAYER FETCH] Found ${playersByTeamId?.length || 0} players with current_team_id`);\n    \n    if (playersByTeamId && playersByTeamId.length > 0) {\n      return playersByTeamId;\n    }\n    \n    // If we get here, we couldn't find any players\n    console.error('[PLAYER FETCH] No players found for this team using any method');\n    return [];\n  } catch (error) {\n    console.error('[PLAYER FETCH] Error in fetchPlayersByTeam:', error);\n    return [];\n  }\n};\n\nexport const fetchPlayerById = async (id: string): Promise<Player | null> => {\n  try {\n    const { data, error } = await supabase\n      .from('players')\n      .select('*')\n      .eq('id', id)\n      .single();\n    if (error) throw error;\n    return data;\n  } catch (error) {\n    console.error('Error fetching player:', error);\n    return null;\n  }\n};\n\nexport const searchPlayers = async (query: string): Promise<Player[]> => {\n  try {\n    const { data, error } = await supabase\n      .from('players')\n      .select('*')\n      .ilike('name', `%${query}%`)\n      .limit(10);\n    if (error) throw error;\n    return data || [];\n  } catch (error) {\n    console.error('Error searching players:', error);\n    return [];\n  }\n};\n","import React, { useEffect, useState, ReactNode } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  ArrowLeft, \n  BarChart2, \n  Calendar, \n  Clock, \n  Users, \n  Zap, \n  AlertCircle, \n  Loader2, \n  ThumbsUp, \n  CheckCircle, \n  TrendingUp, \n  AlertTriangle, \n  XCircle, \n  Info \n} from 'lucide-react';\n\n// Import services and utilities\nimport { fetchScheduleById } from '@/services/scheduleService';\nimport { fetchPlayersByTeam, type Player as DBPlayer } from '@/services/playerService';\nimport { \n  calculateAstrologicalImpact, \n  type AstroData, \n  type PlayerStats \n} from '@/lib/astroFormula';\nimport { fetchTeamById } from '@/services/teamService';\n\n// ===== TYPE DEFINITIONS =====\ninterface AstroInfluence {\n  aspect: string;\n  influence: number;\n  description: string;\n}\n\n// Extend the Schedule type to include all necessary fields\ninterface GameDetails {\n  id: string | number;\n  home_team: string;\n  away_team: string;\n  home_team_id?: string;\n  away_team_id?: string;\n  game_time?: string | null;\n  start_time?: string | null;\n  status?: string;\n  sport?: string;\n  venue?: string | null;\n  // Allow any additional properties that might come from the API\n  [key: string]: unknown;\n}\n\n// Extend the PlayerStats interface from astroFormula\ninterface PlayerStatsUI {\n  id: string;\n  stats?: Record<string, unknown>;\n  team: string;\n  team_id?: string;\n  astro_influence: number;\n  win_shares: number; // Required to match PlayerStats\n  name: string;\n  position: string;\n  image_url?: string;\n  jersey_number?: number;\n  sport?: string;\n  birth_date?: string;\n}\n\n// ===== UTILITY FUNCTIONS =====\n/**\n * Normalizes a team name for comparison by removing common variations and special characters\n */\nfunction normalizeTeamName(name: string): string {\n  if (!name) return '';\n  \n  return name\n    .toLowerCase()\n    .replace(/[^a-z0-9\\s]/g, '')  // Remove special characters\n    .replace(/\\b(?:basketball|football|baseball|hockey|team|club|fc|united|city|state|athletic|athletics|sports)\\b/gi, '') // Remove common sports terms\n    .replace(/\\s+/g, ' ')  // Replace multiple spaces with single space\n    .trim();\n}\n\n/**\n * Calculates the Levenshtein distance between two strings\n */\nfunction levenshteinDistance(a: string, b: string): number {\n  if (a.length === 0) return b.length;\n  if (b.length === 0) return a.length;\n\n  const matrix = Array(b.length + 1).fill(null).map(() => Array(a.length + 1).fill(null));\n\n  for (let i = 0; i <= a.length; i++) {\n    matrix[0][i] = i;\n  }\n\n  for (let j = 0; j <= b.length; j++) {\n    matrix[j][0] = j;\n  }\n\n  for (let j = 1; j <= b.length; j++) {\n    for (let i = 1; i <= a.length; i++) {\n      const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n      matrix[j][i] = Math.min(\n        matrix[j][i - 1] + 1,\n        matrix[j - 1][i] + 1,\n        matrix[j - 1][i - 1] + cost\n      );\n    }\n  }\n\n  return matrix[b.length][a.length];\n}\n\n/**\n * Calculates string similarity score (0-1)\n */\nfunction calculateSimilarity(str1: string, str2: string): number {\n  // Simple Levenshtein distance based similarity\n  const len1 = str1.length;\n  const len2 = str2.length;\n  \n  if (len1 === 0) return len2 === 0 ? 1 : 0;\n  if (len2 === 0) return 0;\n  \n  const distance = levenshteinDistance(str1, str2);\n  const maxLen = Math.max(len1, len2);\n  return 1 - (distance / maxLen);\n}\n\n/**\n * Finds the best matching team from a list using fuzzy matching\n */\nfunction findBestTeamMatch(teamName: string, teams: any[]): any | null {\n  if (!teamName || !teams?.length) return null;\n  \n  // Common team name mappings for MLB\n  const mlbTeamMappings: Record<string, string[]> = {\n    'dodgers': ['la', 'losangeles', 'ladodgers'],\n    'yankees': ['ny', 'newyork', 'nyy'],\n    'redsox': ['boston', 'bos', 'redsox'],\n    'cubs': ['chicago', 'chc'],\n    'whitesox': ['chicago', 'chw', 'whitesox'],\n    'mets': ['nym', 'newyork'],\n    'phillies': ['phi', 'philadelphia'],\n    'nationals': ['was', 'wsh', 'washington'],\n    'marlins': ['mia', 'miami', 'fla', 'florida'],\n    'braves': ['atl', 'atlanta'],\n    'cardinals': ['stl', 'stlouis'],\n    'brewers': ['mil', 'milwaukee'],\n    'reds': ['cin', 'cincinnati'],\n    'pirates': ['pit', 'pittsburgh'],\n    'giants': ['sf', 'sanfrancisco', 'sfg'],\n    'padres': ['sd', 'sandiego'],\n    'diamondbacks': ['ari', 'arizona', 'dbacks'],\n    'rockies': ['col', 'colorado'],\n    'astros': ['hou', 'houston', 'astros'],\n    'rangers': ['tex', 'texas'],\n    'athletics': ['oak', 'oakland', 'as'],\n    'angels': ['laa', 'losangeles', 'anaheim'],\n    'mariners': ['sea', 'seattle'],\n    'bluejays': ['tor', 'toronto'],\n    'orioles': ['bal', 'baltimore'],\n    'rays': ['tb', 'tampabay'],\n    'royals': ['kc', 'kansascity'],\n    'tigers': ['det', 'detroit'],\n    'twins': ['min', 'minnesota'],\n    'guardians': ['cle', 'cleveland'],\n    'indians': ['cle', 'cleveland']\n  };\n\n  const normalizedSearch = normalizeTeamName(teamName);\n  console.log(`[TEAM MATCH] Searching for team: '${teamName}' (normalized: '${normalizedSearch}')`);\n  \n  // First try exact match on normalized names\n  let exactMatch = teams.find(t => \n    t.name && normalizeTeamName(t.name) === normalizedSearch\n  );\n  \n  if (exactMatch) {\n    console.log(`[TEAM MATCH] Found exact match: '${exactMatch.name}'`);\n    return exactMatch;\n  }\n  \n  // Try matching against display_name, abbreviation, and alternate names\n  const altMatch = teams.find(t => {\n    // Check display name\n    if (t.display_name && normalizeTeamName(t.display_name) === normalizedSearch) {\n      return true;\n    }\n    \n    // Check abbreviation\n    if (t.abbreviation && normalizeTeamName(t.abbreviation) === normalizedSearch) {\n      return true;\n    }\n    \n    // Check MLB team mappings\n    const teamKey = Object.keys(mlbTeamMappings).find(key => \n      mlbTeamMappings[key].includes(normalizedSearch)\n    );\n    \n    if (teamKey && t.name && normalizeTeamName(t.name).includes(teamKey)) {\n      return true;\n    }\n    \n    return false;\n  });\n  \n  if (altMatch) {\n    console.log(`[TEAM MATCH] Found alternate field match: '${altMatch.name}'`);\n    return altMatch;\n  }\n  \n  // If no exact match, try fuzzy matching with improved scoring for MLB teams\n  const matches = teams.map(team => {\n    if (!team.name) return { team, score: 0 };\n    \n    const normalizedTeamName = normalizeTeamName(team.name);\n    let similarity = calculateSimilarity(normalizedSearch, normalizedTeamName);\n    \n    // Check for common abbreviations (e.g., \"LAD\" for \"Los Angeles Dodgers\")\n    const normalizedAbbreviation = team.abbreviation ? normalizeTeamName(team.abbreviation) : '';\n    const isAbbreviation = normalizedAbbreviation && \n      (normalizedSearch === normalizedAbbreviation ||\n       normalizedSearch.includes(normalizedAbbreviation) ||\n       normalizedAbbreviation.includes(normalizedSearch));\n    \n    // Check MLB team mappings\n    const isMlbTeam = Object.entries(mlbTeamMappings).some(([key, aliases]) => {\n      if (normalizedTeamName.includes(key)) {\n        return aliases.some(alias => normalizedSearch === alias);\n      }\n      return false;\n    });\n    \n    // Adjust score based on match type\n    let score = similarity;\n    if (isAbbreviation) score = Math.max(similarity, 0.8);\n    if (isMlbTeam) score = Math.max(similarity, 0.9);\n    \n    return { team, score };\n  }).filter(match => match.score > 0.5); // Lower threshold to catch more potential matches\n  \n  if (matches.length > 0) {\n    // Sort by score in descending order\n    matches.sort((a, b) => b.score - a.score);\n    const bestMatch = matches[0];\n    console.log(`[TEAM MATCH] Found fuzzy match: '${bestMatch.team.name}' (score: ${bestMatch.score.toFixed(2)})`);\n    return bestMatch.team;\n  }\n  \n  console.log(`[TEAM MATCH] No match found for '${teamName}'`);\n  return null;\n}\n\n/**\n * Fetches the latest astrological data using playerAstroService\n */\nasync function fetchLatestAstrologicalData() {\n  try {\n    // Import the playerAstroService\n    const { generatePlayerAstroData } = await import('@/lib/playerAstroService');\n    \n    // Use current date for the astrological data\n    const currentDate = new Date().toISOString().split('T')[0];\n    \n    // Generate the data using playerAstroService\n    const astroData = await generatePlayerAstroData(currentDate);\n    \n    // Return the data in the expected format\n    return {\n      moon_phase: astroData.moon.phase,\n      moon_sign: astroData.moon.sign,\n      mercury_sign: astroData.planets.mercury.sign,\n      venus_sign: astroData.planets.venus.sign,\n      mars_sign: astroData.planets.mars.sign,\n      jupiter_sign: astroData.planets.jupiter.sign,\n      saturn_sign: astroData.planets.saturn.sign,\n      uranus_sign: astroData.planets.uranus.sign,\n      neptune_sign: astroData.planets.neptune.sign,\n      pluto_sign: astroData.planets.pluto.sign,\n      sun_moon_aspect: astroData.aspects.sun_moon,\n      sun_mars_aspect: astroData.aspects.sun_mars,\n      sun_jupiter_aspect: astroData.aspects.sun_jupiter,\n      sun_saturn_aspect: astroData.aspects.sun_saturn,\n      moon_venus_aspect: astroData.aspects.moon_venus,\n      moon_mars_aspect: astroData.aspects.moon_mars,\n    };\n  } catch (error) {\n    console.error('Error generating astrological data:', error);\n    // Fallback to default values if there's an error\n    return {\n      moon_phase: 0.5,\n      moon_sign: 'Aries',\n      mercury_sign: 'Taurus',\n      venus_sign: 'Gemini',\n      mars_sign: 'Cancer',\n      jupiter_sign: 'Leo',\n      saturn_sign: 'Virgo',\n      uranus_sign: 'Libra',\n      neptune_sign: 'Scorpio',\n      pluto_sign: 'Sagittarius',\n      sun_moon_aspect: 'conjunction',\n      sun_mars_aspect: 'sextile',\n      sun_jupiter_aspect: 'trine',\n      sun_saturn_aspect: 'square',\n      moon_venus_aspect: 'sextile',\n      moon_mars_aspect: 'trine',\n    };\n  }\n}\n\n// Map database players to UI player stats with astrological influence\nfunction mapPlayersToStats(players: DBPlayer[]): PlayerStatsUI[] {\n  return players.map((player) => {\n    const winShares = typeof (player as any).win_shares === 'number' \n      ? (player as any).win_shares \n      : 5;\n    \n    // Ensure player ID is a string to match PlayerStats interface\n    const playerId = typeof player.id === 'number' ? String(player.id) : (player.id || '');\n    \n    // Safely get player name with fallback\n    const playerName = typeof player.name === 'string' ? player.name : 'Unknown Player';\n    \n    // Create a PlayerStats object that matches the expected interface\n    const playerStats: PlayerStats = {\n      id: playerId,\n      name: playerName,\n      birth_date: typeof player.birth_date === 'string' ? player.birth_date : '',\n      sport: typeof player.sport === 'string' ? player.sport : '',\n      win_shares: winShares,\n      stats: {},\n      position: typeof player.position === 'string' ? player.position : 'Player',\n    };\n    \n    // Create the extended PlayerStatsUI object\n    return {\n      ...playerStats,\n      team: typeof player.team_id === 'string' ? player.team_id : '',\n      team_id: typeof player.team_id === 'string' ? player.team_id : undefined,\n      astro_influence: Math.round(\n        Math.max(10, Math.min(100, winShares * 10 + Math.random() * 10))\n      ),\n      // Ensure position is always provided (required by PlayerStatsUI interface)\n      position: typeof player.position === 'string' && player.position ? player.position : 'Player',\n    };\n  });\n}\n\n// Generate position based on sport\nconst getPositionsForSport = (sport: string, count: number): string[] => {\n  const positions: Record<string, string[]> = {\n    nba: ['PG', 'SG', 'SF', 'PF', 'C'],\n    nfl: ['QB', 'RB', 'WR', 'TE', 'OL', 'DL', 'LB', 'CB', 'S'],\n    mlb: ['P', 'C', '1B', '2B', '3B', 'SS', 'LF', 'CF', 'RF'],\n    default: ['Player']\n  };\n  \n  const sportPositions = positions[sport] || positions.default;\n  return Array(count).fill(0).map((_, i) => sportPositions[i % sportPositions.length]);\n};\n\nconst EventDetails = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  \n  // State management\n  const [loading, setLoading] = useState(true);\n  const [game, setGame] = useState<GameDetails | null>(null);\n  const [homePlayers, setHomePlayers] = useState<PlayerStatsUI[]>([]);\n  const [awayPlayers, setAwayPlayers] = useState<PlayerStatsUI[]>([]);\n  const [astroInfluences, setAstroInfluences] = useState<AstroInfluence[]>([]);\n  const [oas, setOas] = useState<number>(0);\n  const [error, setError] = useState<string | null>(null);\n  const [topPlayer, setTopPlayer] = useState<PlayerStatsUI | null>(null);\n  \n  // Format game date and time for display - matching Dashboard's approach\n  const formatGameTime = (game: GameDetails | null) => {\n    if (!game) return { date: 'TBD', time: 'TBD' };\n    \n    const gameTime = game.start_time || game.game_time;\n    if (!gameTime) {\n      console.warn('No game time found in schedule');\n      return { date: 'TBD', time: 'TBD' };\n    }\n    \n    try {\n      const gameDate = new Date(gameTime);\n      if (isNaN(gameDate.getTime())) {\n        console.error('Invalid date:', gameTime);\n        return { date: 'TBD', time: 'TBD' };\n      }\n      \n      // Get the date components\n      const dateComponents = {\n        date: gameDate.toLocaleDateString('en-US', {\n          weekday: 'long',\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n        }),\n        time: gameDate.toLocaleTimeString('en-US', {\n          hour: '2-digit',\n          minute: '2-digit',\n          timeZoneName: 'short'\n        })\n      };\n      \n      // Add debug logging\n      console.log('Formatted game time:', {\n        raw: gameTime,\n        date: dateComponents.date,\n        time: dateComponents.time,\n        timestamp: gameDate.getTime()\n      });\n      \n      return dateComponents;\n    } catch (error) {\n      console.error('Error formatting game time:', error);\n      return { date: 'TBD', time: 'TBD' };\n    }\n  };\n  \n  const { date: formattedDate, time: formattedTime } = formatGameTime(game);\n\n  // Memoize the formatted date and time to prevent unnecessary recalculations\n  const memoizedFormattedDate = typeof formattedDate === 'string' ? formattedDate : 'TBD';\n  const memoizedFormattedTime = typeof formattedTime === 'string' ? formattedTime : 'TBD';\n  \n  // Safely render venue with fallback\n  const renderVenue = (venue: unknown): string => {\n    if (typeof venue === 'string' && venue.trim() !== '') return venue;\n    return 'Venue TBD';\n  };\n  \n  // Safely render date with fallback\n  const renderDate = (date: unknown): string => {\n    if (typeof date === 'string' && date.trim() !== '') return date;\n    return 'TBD';\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        if (!id) {\n          const errorMsg = 'No event ID provided. Please return to the dashboard and try again.';\n          setError(errorMsg);\n          setLoading(false);\n          return;\n        }\n        // Fetch game details\n        const schedule = await fetchScheduleById(id);\n        if (!schedule) {\n          setError('Game not found.');\n          setLoading(false);\n          return;\n        }\n        // Set game state\n        const gameDetails: GameDetails = {\n          id: schedule.id,\n          home_team: schedule.home_team,\n          away_team: schedule.away_team,\n          home_team_id: schedule.home_team_id,\n          away_team_id: schedule.away_team_id,\n          game_time: schedule.game_time,\n          start_time: schedule.start_time,\n          status: schedule.status,\n          sport: schedule.sport || 'unknown',\n          venue: schedule.venue,\n          ...schedule\n        };\n        setGame(gameDetails);\n        \n        // Fetch teams and players\n        let homePlayersRaw = [];\n        let awayPlayersRaw = [];\n        try {\n          // --- TEAM NAME MATCHING LOGIC ---\n          // Normalization utility\n          function normalizeTeamName(name: string): string {\n            return (name || '').toLowerCase().replace(/[^a-z0-9]/g, '').trim();\n          }\n\n          // Log API team names (raw and normalized)\n          const normHomeApi = normalizeTeamName(schedule.home_team);\n          const normAwayApi = normalizeTeamName(schedule.away_team);\n          console.log(`[TEAM MATCH DEBUG] Raw API home_team: '${schedule.home_team}', normalized: [${normHomeApi}]`);\n          console.log(`[TEAM MATCH DEBUG] Raw API away_team: '${schedule.away_team}', normalized: [${normAwayApi}]`);\n\n          // Fetch all teams for the sport (with fallback for type safety)\n          const sportKey = (schedule as any).sport?.toUpperCase() || 'BASKETBALL';\n          console.log(`[TEAM MATCH] Fetching teams for sport: ${sportKey}`);\n          \n          // First try to get teams for the specific sport\n          const { data: sportTeams, error: sportTeamsError } = await supabase\n            .from('teams')\n            .select('*')\n            .eq('sport', sportKey);\n            \n          // If no teams found for the sport or error, try getting all teams\n          const { data: allTeams, error: allTeamsError } = await supabase\n            .from('teams')\n            .select('*');\n            \n          const teams = sportTeams?.length ? sportTeams : (allTeams || []);\n          \n          if (sportTeamsError || allTeamsError) {\n            console.error('Error fetching teams:', sportTeamsError || allTeamsError);\n          }\n          \n          console.log(`[TEAM MATCH] Found ${teams.length} teams in database`);\n          \n          // Log sample of team names for debugging\n          if (teams.length > 0) {\n            console.log('[TEAM MATCH] Sample teams in database:', \n              teams.slice(0, 5).map((t: any) => ({\n                id: t.id,\n                name: t.name,\n                display_name: t.display_name,\n                abbreviation: t.abbreviation,\n                normalized: normalizeTeamName(t.name)\n              }))\n            );\n          }\n          \n          // Find the best matching teams using fuzzy matching\n          console.log(`[TEAM MATCH] Looking for home team: '${schedule.home_team}'`);\n          const homeTeam = findBestTeamMatch(schedule.home_team, teams);\n          \n          console.log(`[TEAM MATCH] Looking for away team: '${schedule.away_team}'`);\n          const awayTeam = findBestTeamMatch(schedule.away_team, teams);\n          \n          console.log('[TEAM MATCH] Matching result:', { \n            homeTeam: homeTeam ? { id: homeTeam.id, name: homeTeam.name } : 'Not found',\n            awayTeam: awayTeam ? { id: awayTeam.id, name: awayTeam.name } : 'Not found'\n          });\n          \n          // Use the matched team IDs or fall back to the schedule IDs\n          const homeTeamId = homeTeam?.id || schedule.home_team_id;\n          const awayTeamId = awayTeam?.id || schedule.away_team_id;\n          \n          console.log('Using team IDs for player fetch:', { homeTeamId, awayTeamId });\n\n          // First attempt: Fetch players using matched team IDs\n          try {\n            console.log('[PLAYER FETCH] Attempting to fetch players by team IDs...');\n            [homePlayersRaw, awayPlayersRaw] = await Promise.all([\n              homeTeamId ? fetchPlayersByTeam(homeTeamId).catch(e => {\n                console.error(`Error fetching home players for team ${homeTeamId}:`, e);\n                return [];\n              }) : Promise.resolve([]),\n              awayTeamId ? fetchPlayersByTeam(awayTeamId).catch(e => {\n                console.error(`Error fetching away players for team ${awayTeamId}:`, e);\n                return [];\n              }) : Promise.resolve([])\n            ]);\n            \n            console.log(`[PLAYER FETCH] Initial fetch - Home: ${homePlayersRaw.length}, Away: ${awayPlayersRaw.length}`);\n            \n            // If no players found, try alternative approaches\n            if (homePlayersRaw.length === 0 || awayPlayersRaw.length === 0) {\n              console.log('[PLAYER FETCH] Some teams have no players, trying alternative fetch methods...');\n              \n              // Try to get all players and filter by team name as fallback\n              try {\n                const { data: allPlayers, error: playersError } = await supabase\n                  .from('players')\n                  .select('*');\n                  \n                if (playersError) throw playersError;\n                \n                console.log(`[PLAYER FETCH] Fetched ${allPlayers.length} total players for fallback matching`);\n                \n                // Helper function to find players by team name or ID\n                const findPlayersByTeam = (teamId: string | null, teamName: string) => {\n                  if (!allPlayers?.length) return [];\n                  \n                  // First try by team_id\n                  if (teamId) {\n                    const byId = allPlayers.filter((p: any) => p.team_id === teamId);\n                    if (byId.length > 0) {\n                      console.log(`[PLAYER FETCH] Found ${byId.length} players by team ID ${teamId}`);\n                      return byId;\n                    }\n                  }\n                  \n                  // Then try by team name if we have a team object\n                  if (teamName) {\n                    const normalizedTeamName = normalizeTeamName(teamName);\n                    const byName = allPlayers.filter((p: any) => \n                      p.team && normalizeTeamName(p.team) === normalizedTeamName\n                    );\n                    \n                    if (byName.length > 0) {\n                      console.log(`[PLAYER FETCH] Found ${byName.length} players by team name '${teamName}'`);\n                      return byName;\n                    }\n                  }\n                  \n                  return [];\n                };\n                \n                // Refetch home players if needed\n                if (homePlayersRaw.length === 0 && (homeTeamId || schedule.home_team)) {\n                  console.log(`[PLAYER FETCH] Attempting fallback fetch for home team: ${homeTeam?.name || schedule.home_team}`);\n                  homePlayersRaw = findPlayersByTeam(homeTeamId, homeTeam?.name || schedule.home_team);\n                }\n                \n                // Refetch away players if needed\n                if (awayPlayersRaw.length === 0 && (awayTeamId || schedule.away_team)) {\n                  console.log(`[PLAYER FETCH] Attempting fallback fetch for away team: ${awayTeam?.name || schedule.away_team}`);\n                  awayPlayersRaw = findPlayersByTeam(awayTeamId, awayTeam?.name || schedule.away_team);\n                }\n                \n                console.log(`[PLAYER FETCH] After fallback - Home: ${homePlayersRaw.length}, Away: ${awayPlayersRaw.length}`);\n                \n              } catch (fallbackError) {\n                console.error('[PLAYER FETCH] Error in fallback player fetch:', fallbackError);\n              }\n            }\n            \n            // Final check - if still no players, log a warning\n            if (homePlayersRaw.length === 0 && awayPlayersRaw.length === 0) {\n              console.warn('[PLAYER FETCH] No players found for either team after all fallback attempts');\n            } else {\n              console.log(`[PLAYER FETCH] Final player counts - Home: ${homePlayersRaw.length}, Away: ${awayPlayersRaw.length}`);\n            }\n            \n          } catch (error) {\n            console.error('[PLAYER FETCH] Error in player fetching process:', error);\n            homePlayersRaw = [];\n            awayPlayersRaw = [];\n          }\n        } catch (teamError) {\n          console.error('Error fetching teams or players:', teamError);\n          // Continue with empty arrays if fetch fails\n        }\n        \n        // Map to PlayerStatsUI\n        const homePlayers = mapPlayersToStats(homePlayersRaw);\n        const awayPlayers = mapPlayersToStats(awayPlayersRaw);\n        console.log('[FINAL DEBUG] homePlayers:', homePlayers);\n        console.log('[FINAL DEBUG] awayPlayers:', awayPlayers);\n        setHomePlayers(homePlayers);\n        setAwayPlayers(awayPlayers);\n        const allPlayers = [...homePlayers, ...awayPlayers];\n        \n        // Fetch latest astrological data\n        let astroData = null;\n        try {\n          const astroRaw = await fetchLatestAstrologicalData();\n          if (astroRaw) {\n            astroData = {\n              moon_phase: typeof astroRaw.moon_phase === 'string' ? parseFloat(astroRaw.moon_phase) : (astroRaw.moon_phase as number),\n              moon_sign: astroRaw.moon_sign || 'unknown',\n              sun_sign: astroRaw.sun_sign || '',\n              mercury_sign: astroRaw.mercury_sign || 'unknown',\n              venus_sign: astroRaw.venus_sign || 'unknown',\n              mars_sign: astroRaw.mars_sign || 'unknown',\n              jupiter_sign: astroRaw.jupiter_sign || 'unknown',\n              saturn_sign: astroRaw.saturn_sign || '',\n              mercury_retrograde: astroRaw.mercury_retrograde || false,\n              sun_mars_transit: astroRaw.sun_mars_transit || null,\n              sun_saturn_transit: astroRaw.sun_saturn_transit || null,\n              sun_jupiter_transit: astroRaw.sun_jupiter_transit || null,\n            };\n          }\n        } catch (astroError) {\n          console.error('Error fetching astrological data:', astroError);\n          // Continue with null astroData if fetch fails\n        }\n        \n        // Default astro data if none fetched\n        if (!astroData) {\n          astroData = {\n            moon_phase: 0.5,\n            moon_sign: 'Aries',\n            mercury_sign: 'Taurus',\n            venus_sign: 'Gemini',\n            mars_sign: 'Cancer',\n            jupiter_sign: 'Leo',\n            saturn_sign: '',\n            sun_sign: '',\n            mercury_retrograde: false,\n            sun_mars_transit: 'conjunction',\n            sun_saturn_transit: 'trine',\n            sun_jupiter_transit: 'sextile'\n          };\n        }\n        \n        // Helper function to determine sun sign from birth month and day\n        const getSunSign = (month: number, day: number): string => {\n          // Simple mapping of birth date to sun sign\n          if ((month === 3 && day >= 21) || (month === 4 && day <= 19)) return 'Aries';\n          if ((month === 4 && day >= 20) || (month === 5 && day <= 20)) return 'Taurus';\n          if ((month === 5 && day >= 21) || (month === 6 && day <= 20)) return 'Gemini';\n          if ((month === 6 && day >= 21) || (month === 7 && day <= 22)) return 'Cancer';\n          if ((month === 7 && day >= 23) || (month === 8 && day <= 22)) return 'Leo';\n          if ((month === 8 && day >= 23) || (month === 9 && day <= 22)) return 'Virgo';\n          if ((month === 9 && day >= 23) || (month === 10 && day <= 22)) return 'Libra';\n          if ((month === 10 && day >= 23) || (month === 11 && day <= 21)) return 'Scorpio';\n          if ((month === 11 && day >= 22) || (month === 12 && day <= 21)) return 'Sagittarius';\n          if ((month === 12 && day >= 22) || (month === 1 && day <= 19)) return 'Capricorn';\n          if ((month === 1 && day >= 20) || (month === 2 && day <= 18)) return 'Aquarius';\n          if ((month === 2 && day >= 19) || (month === 3 && day <= 20)) return 'Pisces';\n          return 'Unknown';\n        };\n        \n        // Calculate astro influence for each player\n        console.log('Calculating astro influence for players:', allPlayers.length);\n        const playersWithImpact = [];\n        \n        // Use real data calculation, not random values\n        const useRealCalculation = true;\n        \n        for (const player of allPlayers) {\n          let astroImpact = 0;\n          \n          if (useRealCalculation) {\n            try {\n              // Real calculation based on player data\n              // This uses a deterministic algorithm based on player's birth date and current astro data\n              \n              // Get player birth date and convert to Date object\n              const birthDate = player.birth_date ? new Date(player.birth_date) : null;\n              \n              if (birthDate && !isNaN(birthDate.getTime())) {\n                // Calculate based on birth month and day relative to current astro positions\n                const birthMonth = birthDate.getMonth() + 1; // 1-12\n                const birthDay = birthDate.getDate(); // 1-31\n                \n                // Base impact from birth date (deterministic)\n                let baseImpact = ((birthMonth * 7 + birthDay * 3) % 30) + 40; // 40-70 range\n                \n                // Adjust based on astrological factors (also deterministic)\n                if (astroData.mercury_retrograde) {\n                  // Mercury retrograde affects players born in certain months more\n                  if (birthMonth === 3 || birthMonth === 7 || birthMonth === 11) {\n                    baseImpact += 10;\n                  } else {\n                    baseImpact -= 5;\n                  }\n                }\n                \n                // Moon phase affects all players\n                if (astroData.moon_phase > 0.8) { // Full moon\n                  baseImpact += 8;\n                } else if (astroData.moon_phase < 0.2) { // New moon\n                  baseImpact -= 5;\n                }\n                \n                // Sun sign compatibility\n                const playerSunSign = getSunSign(birthMonth, birthDay);\n                if (playerSunSign === astroData.sun_sign) {\n                  baseImpact += 15; // Strong compatibility\n                }\n                \n                // Ensure impact is in reasonable range\n                astroImpact = Math.max(30, Math.min(95, baseImpact));\n              } else {\n                // Fallback if no valid birth date\n                astroImpact = 50;\n              }\n              \n              console.log(`Calculated real impact for ${player.name}: ${astroImpact}%`);\n            } catch (calcError) {\n              console.error(`Error calculating astro influence for player ${player.id}:`, calcError);\n              // Deterministic fallback based on player ID\n              astroImpact = (player.id.charCodeAt(0) % 30) + 40; // 40-70 range\n            }\n          } else {\n            // Fallback to a deterministic value based on player ID if we can't use real calculation\n            astroImpact = (player.id.charCodeAt(0) % 30) + 40; // 40-70 range\n            console.log(`Using deterministic impact for ${player.name}: ${astroImpact}%`);\n          }\n          \n          const statsImpact = typeof player.win_shares === 'number' ? player.win_shares : 0;\n          const totalImpact = astroImpact + statsImpact;\n          \n          playersWithImpact.push({\n            ...player,\n            astro_influence: astroImpact,\n            total_impact: totalImpact\n          });\n          \n          console.log(`Player ${player.name} - Astro: ${astroImpact}, Stats: ${statsImpact}, Total: ${totalImpact}`);\n        }\n        \n        // Calculate OAS as average astro_influence - deterministic calculation\n        let oasValue = 0;\n        if (playersWithImpact.length > 0) {\n          const sum = playersWithImpact.reduce((acc, p) => acc + (p.astro_influence ?? 0), 0);\n          oasValue = Math.round(sum / playersWithImpact.length);\n          console.log(`OAS calculated: ${oasValue}% from ${playersWithImpact.length} players`);\n        } else {\n          // If no players with impact, calculate based on game date (deterministic)\n          const gameDate = new Date(schedule.game_time || schedule.start_time || new Date().toISOString());\n          const gameDay = gameDate.getDate();\n          const gameMonth = gameDate.getMonth() + 1;\n          oasValue = ((gameMonth * 5 + gameDay * 2) % 25) + 50; // 50-75 range\n          console.log(`Using deterministic OAS based on game date: ${oasValue}%`);\n        }\n        setOas(oasValue);\n        \n        // Find top player by total impact\n        let topPlayerByImpact = null;\n        if (playersWithImpact.length > 0) {\n          topPlayerByImpact = playersWithImpact.reduce(\n            (max, p) => (p.total_impact > (max?.total_impact ?? 0) ? p : max), \n            playersWithImpact[0]\n          );\n          console.log('Top player by impact:', topPlayerByImpact?.name, 'with score:', topPlayerByImpact?.total_impact);\n        }\n        \n        // Ensure the top player has all required fields\n        if (topPlayerByImpact) {\n          topPlayerByImpact = {\n            ...topPlayerByImpact,\n            position: topPlayerByImpact.position || 'Player',\n            team: topPlayerByImpact.team || (topPlayerByImpact.team_id === schedule.home_team_id ? schedule.home_team : schedule.away_team)\n          };\n        }\n        \n        setTopPlayer(topPlayerByImpact);\n        \n        console.log('Data loading completed successfully');\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'An unknown error occurred';\n        console.error('Error in fetchData:', errorMessage, err);\n        setError(errorMessage);\n      } finally {\n        setLoading(false);\n        console.log('Loading state set to false');\n      }\n  };\n  fetchData();\n// eslint-disable-next-line react-hooks/exhaustive-deps\n}, [id]);\n  \n  if (loading) {\n  return (\n    <div className=\"min-h-screen bg-background flex items-center justify-center\">\n      <div className=\"flex flex-col items-center space-y-4\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n        <p className=\"text-lg text-muted-foreground\">Loading astrological insights...</p>\n      </div>\n    </div>\n  );\n}\nif (error) {\n  return (\n    <div className=\"min-h-screen bg-background flex items-center justify-center\">\n      <div className=\"flex flex-col items-center space-y-4\">\n        <AlertCircle className=\"h-12 w-12 text-destructive\" />\n        <p className=\"text-lg text-destructive\">{error}</p>\n      </div>\n    </div>\n  );\n}\nif (!game) return null;\n\n  // Use the already formatted date and time from formatGameTime\n  // These are already defined above: const { date: formattedDate, time: formattedTime } = formatGameTime(game);\n  \n  // Calculate player with highest astro influence\n// Now handled in useEffect and stored in topPlayer\n\n  \n  // Format the OAS (Overall Astro Score) color with proper type safety\n  const oasValue = typeof oas === 'number' ? oas : 0;\n  // Safely calculate OAS color with proper type checking\n  const getOasColor = (value: unknown): string => {\n    const numValue = typeof value === 'number' ? value : 0;\n    return numValue >= 70 \n      ? 'text-green-500' \n      : numValue >= 40 \n        ? 'text-yellow-500' \n        : 'text-red-500';\n  };\n  \n  const oasColor = getOasColor(oasValue);\n      \n  // Ensure astroInfluences is always an array\n  const safeAstroInfluences: AstroInfluence[] = Array.isArray(astroInfluences) \n    ? astroInfluences \n    : [];\n    \n  // Ensure topPlayer is properly typed\n  const safeTopPlayer: PlayerStatsUI | null = topPlayer || null;\n\n  // Determine the sport icon and color with proper type safety\n  const getSportConfig = (sport: unknown): { color: string; icon: string } => {\n    // Ensure we have a string value or default to empty string\n    const sportKey = typeof sport === 'string' ? sport.toLowerCase() : '';\n    \n    // Define a type-safe mapping of sport keys to their configs\n    const sportConfigs: Record<string, { color: string; icon: string }> = {\n      nba: { color: 'from-orange-500 to-red-600', icon: '🏀' },\n      nfl: { color: 'from-green-600 to-green-800', icon: '🏈' },\n      mlb: { color: 'from-blue-500 to-blue-700', icon: '⚾' },\n      ncaa: { color: 'from-purple-500 to-indigo-600', icon: '🏈' },\n      default: { color: 'from-gray-600 to-gray-800', icon: '🏆' }\n    };\n    \n    // Return the config for the sport or the default if not found\n    return sportConfigs[sportKey] || sportConfigs.default;\n  };\n\n  // Safely get sport config with fallback\n  const sportConfig = getSportConfig(\n    typeof game.sport === 'string' ? game.sport : undefined\n  );\n  \n  // Safely render game details with proper type checking\n  const renderGameDetail = (value: unknown, fallback: string = 'N/A'): string => {\n    if (value === null || value === undefined) return fallback;\n    return String(value);\n  };\n  \n  // Safely compare numbers with unknown types\n  const safeNumberCompare = (a: unknown, b: number, operator: '>' | '<' | '>=' | '<=' | '===' | '!='): boolean => {\n    const numA = typeof a === 'number' ? a : 0;\n    switch (operator) {\n      case '>': return numA > b;\n      case '<': return numA < b;\n      case '>=': return numA >= b;\n      case '<=': return numA <= b;\n      case '===': return numA === b;\n      case '!=': return numA !== b;\n      default: return false;\n    }\n  };\n  \n  // Safely get a value from an object with fallback\n  const safeGet = <T,>(obj: unknown, key: string, fallback: T): T => {\n    if (obj && typeof obj === 'object' && key in obj) {\n      const value = (obj as Record<string, unknown>)[key];\n      return value as T;\n    }\n    return fallback;\n  };\n  \n  // Safely render a React node from an unknown value\n  const safeRenderNode = (value: unknown, fallback: React.ReactNode = 'N/A'): React.ReactNode => {\n    if (value === null || value === undefined) return fallback;\n    if (typeof value === 'string' || typeof value === 'number' || React.isValidElement(value)) {\n      return value;\n    }\n    return String(value);\n  };\n  \n  // Safely get sport name with fallback\n  const getSportName = (sport: unknown): string => {\n    if (typeof sport !== 'string') return 'SPORT';\n    return sport.toUpperCase();\n  };\n  \n  // Safely get team names with fallbacks\n  const homeTeamName = renderGameDetail(game.home_team, 'Home Team');\n  const awayTeamName = renderGameDetail(game.away_team, 'Away Team');\n\n  // === PLAYER DISPLAY SECTION ===\n  // Render players for each team below the main event details\n  const renderPlayersSection = (teamName: string, players: PlayerStatsUI[]) => (\n    <div className=\"my-6 bg-gray-800/50 p-4 rounded-xl\">\n      <h3 className=\"font-semibold text-lg mb-3\">{teamName} Players</h3>\n      <div className=\"flex flex-wrap gap-4\">\n        {players.length === 0 ? (\n          <span className=\"text-gray-400\">No players found for this team.</span>\n        ) : (\n          players.map(player => (\n            <div key={player.id} className=\"border border-gray-700 rounded-lg p-3 bg-gray-800/70 w-[140px]\">\n              {player.image_url && (\n                <img src={player.image_url} alt={player.name} className=\"w-14 h-14 rounded-full object-cover mx-auto mb-2\" />\n              )}\n              <div className=\"font-medium text-center\">{player.name}</div>\n              <div className=\"text-xs text-gray-400 text-center\">{player.position}</div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen bg-background p-4 md:p-8\">\n      <div className=\"max-w-6xl mx-auto space-y-6\">\n        <Button \n          variant=\"ghost\" \n          className=\"mb-2 hover:bg-accent/50 transition-colors text-foreground\"\n          onClick={() => navigate(-1)}\n        >\n          <ArrowLeft className=\"h-4 w-4 mr-2 text-primary\" /> \n          <span className=\"font-medium\">\n            Back to {getSportName(game.sport)}\n          </span>\n        </Button>\n        <Card>\n          <CardHeader>\n              <div className=\"flex items-center bg-blue-800/50 px-3 py-1 rounded-full border border-blue-700/50\">\n                <Clock className=\"h-4 w-4 mr-1.5 text-blue-200\" />\n                <span className=\"text-sm font-medium text-blue-100\">\n                  {memoizedFormattedTime}\n                </span>\n              </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex items-center mb-2\">\n              <span className=\"text-4xl mr-3 text-blue-200\">\n                {typeof sportConfig.icon === 'string' ? sportConfig.icon : '🏆'}\n              </span>\n              <div>\n                <h1 className=\"text-2xl font-bold\">\n                  {homeTeamName} vs {awayTeamName}\n                </h1>\n                <div className=\"flex items-center text-muted-foreground mt-1 text-sm\">\n                  <Calendar className=\"h-4 w-4 mr-1.5\" />\n                  <span>{memoizedFormattedDate}</span>\n                  <span className=\"mx-2\">•</span>\n                  <Users className=\"h-4 w-4 mr-1.5\" />\n                  <span>{renderVenue(game.venue)}</span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {/* Left column: Game details */}\n              <div className=\"space-y-6\">\n                <Card>\n                  <CardHeader className=\"pb-2\">\n                    <CardTitle className=\"text-lg\">Sportsbook Outlook</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n  {game && game.odds && typeof game.odds === 'object' ? (\n    (() => {\n      // Assume odds object: { home: number, away: number, spread: number, over_under: number }\n      const odds = game.odds as {\n        home?: number;\n        away?: number;\n        spread?: number;\n        over_under?: number;\n      };\n      const homeTeam = game.home_team || 'Home';\n      const awayTeam = game.away_team || 'Away';\n      // Use team colors if available, fallback to blue/red\n      const homeColor = game.home_team_color || '#2563eb'; // blue-600\n      const awayColor = game.away_team_color || '#dc2626'; // red-600\n      // Determine favorite/underdog\n      let favorite = null, underdog = null;\n      let favoriteColor = homeColor, underdogColor = awayColor;\n      let favoriteTeam = homeTeam, underdogTeam = awayTeam;\n      let favoriteOdds = odds.home, underdogOdds = odds.away;\n      if (typeof odds.home === 'number' && typeof odds.away === 'number') {\n        if (odds.home < odds.away) {\n          favorite = homeTeam;\n          underdog = awayTeam;\n          favoriteColor = homeColor;\n          underdogColor = awayColor;\n          favoriteTeam = homeTeam;\n          underdogTeam = awayTeam;\n          favoriteOdds = odds.home;\n          underdogOdds = odds.away;\n        } else {\n          favorite = awayTeam;\n          underdog = homeTeam;\n          favoriteColor = awayColor;\n          underdogColor = homeColor;\n          favoriteTeam = awayTeam;\n          underdogTeam = homeTeam;\n          favoriteOdds = odds.away;\n          underdogOdds = odds.home;\n        }\n      }\n      return (\n        <div className=\"rounded-xl p-4 bg-gradient-to-r\" style={{background: `linear-gradient(90deg, ${favoriteColor} 70%, ${underdogColor} 100%)`}}>\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"flex-1 text-lg font-bold text-white flex items-center\">\n              <span className=\"mr-2\">{homeTeam}</span>\n              <span className={`px-2 py-1 rounded text-xs ml-1 font-semibold ${favorite === homeTeam ? 'bg-white/80 text-black' : 'bg-black/30 text-white/80'}`}>{odds.home > 0 ? `+${odds.home}` : odds.home}</span>\n              {favorite === homeTeam && <span className=\"ml-2 text-xs font-semibold bg-green-400/80 text-black px-2 py-0.5 rounded\">Favorite</span>}\n            </div>\n            <span className=\"mx-3 text-white font-bold\">vs</span>\n            <div className=\"flex-1 text-lg font-bold text-white flex items-center justify-end\">\n              <span className={`px-2 py-1 rounded text-xs mr-1 font-semibold ${favorite === awayTeam ? 'bg-white/80 text-black' : 'bg-black/30 text-white/80'}`}>{odds.away > 0 ? `+${odds.away}` : odds.away}</span>\n              <span>{awayTeam}</span>\n              {favorite === awayTeam && <span className=\"ml-2 text-xs font-semibold bg-green-400/80 text-black px-2 py-0.5 rounded\">Favorite</span>}\n            </div>\n          </div>\n          <div className=\"flex justify-between items-center mt-2\">\n            <div className=\"text-sm text-white/90\">\n              <span className=\"font-semibold\">Spread: </span>\n              <span>{typeof odds.spread === 'number' ? (odds.spread > 0 ? `+${odds.spread}` : odds.spread) : 'N/A'}</span>\n            </div>\n            <div className=\"text-sm text-white/90\">\n              <span className=\"font-semibold\">Over/Under: </span>\n              <span>{typeof odds.over_under === 'number' ? odds.over_under : 'N/A'}</span>\n            </div>\n          </div>\n        </div>\n      );\n    })()\n  ) : (\n    <div className=\"text-center text-gray-400\">Sportsbook odds not available.</div>\n  )}\n</CardContent>\n                </Card>\n                \n                <Card>\n                  <CardHeader className=\"pb-2\">\n                    <CardTitle className=\"text-lg\">Astrological Overview</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-muted-foreground\">Overall Astro Score:</span>\n                        <div className=\"flex items-center\">\n                          <div className=\"w-24 bg-gray-200 rounded-full h-2 mr-2\">\n                            <div \n                              className=\"h-2 rounded-full bg-gradient-to-r from-blue-500 to-violet-500\"\n                              style={{ width: `${oas}%` }}\n                            />\n                          </div>\n                          <span className={`font-semibold ${oasColor}`}>{oas}%</span>\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <h4 className=\"text-sm font-semibold mb-2\">Key Astrological Influences:</h4>\n                        <ul className=\"space-y-2\">\n  {(() => {\n    // Always display at least 3 influences for minimal UX\n    const fallbackInfluences: AstroInfluence[] = [\n      {\n        aspect: 'Mercury Retrograde',\n        influence: 0,\n        description: 'Communication and decision-making may be affected. Stay adaptable.'\n      },\n      {\n        aspect: 'Moon Phase',\n        influence: 0,\n        description: 'The current moon phase can impact player mood and energy.'\n      },\n      {\n        aspect: 'Sun-Mars Aspect',\n        influence: 0,\n        description: 'Sun-Mars alignments can boost assertiveness and drive.'\n      }\n    ];\n    // Use real influences if available, otherwise fill with fallback\n    const safeInfluences = Array.isArray(astroInfluences) && astroInfluences.length > 0\n      ? [...astroInfluences.slice(0, 3)]\n      : [];\n    while (safeInfluences.length < 3) {\n      safeInfluences.push(fallbackInfluences[safeInfluences.length]);\n    }\n    return safeInfluences.map((influence, idx) => (\n      <li key={idx} className=\"flex items-start\">\n        <Zap className=\"h-4 w-4 text-amber-500 mt-0.5 mr-1.5 flex-shrink-0\" />\n        <div>\n          <span className=\"text-sm font-medium\">{influence.aspect}</span>\n          <p className=\"text-xs text-muted-foreground\">{influence.description}</p>\n        </div>\n      </li>\n    ));\n  })()}\n                        </ul>\n                      </div>\n                      <div>\n                        <h4 className=\"text-sm font-semibold mb-2\">Player with Highest Astro Impact:</h4>\n                        <div className=\"flex items-center p-2 bg-accent/50 rounded-lg\">\n  {topPlayer ? (\n    <>\n      <div className=\"h-8 w-8 rounded-full bg-primary/20 flex items-center justify-center mr-2\">\n        <span className=\"text-xs font-bold\">{safeRenderNode(topPlayer?.position, '')}</span>\n      </div>\n      <div>\n        <div className=\"text-sm font-medium\">{safeRenderNode(topPlayer?.name, '')}</div>\n        <div className=\"text-xs text-muted-foreground\">{safeRenderNode(topPlayer?.team, '')}</div>\n      </div>\n      <div className=\"ml-auto flex items-center\">\n        <span className=\"text-xs font-semibold text-amber-500\">{safeRenderNode(Math.round(topPlayer?.astro_influence ?? 0), '')}%</span>\n        <Zap className=\"h-3 w-3 text-amber-500 ml-1\" />\n      </div>\n    </>\n  ) : (\n    <span className=\"text-xs text-muted-foreground\">No player data</span>\n  )}\n</div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n              \n              {/* Right column: Betting insights */}\n              <div className=\"space-y-6\">\n                {/* Recommended Bet */}\n                <div className=\"relative group\">\n                  <div className=\"absolute -inset-1 bg-gradient-to-r from-green-400 to-emerald-500 rounded-xl opacity-75 group-hover:opacity-100 transition duration-200 blur-sm\"></div>\n                  <Card className=\"relative bg-white rounded-xl shadow-lg overflow-hidden h-full\">\n                    <div className=\"absolute top-0 right-0 px-3 py-1 bg-green-100 text-green-800 text-xs font-bold rounded-bl-lg\">\n                      RECOMMENDED\n                    </div>\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <div className=\"p-2 rounded-full bg-green-100 text-green-600 mr-3\">\n                          <ThumbsUp className=\"h-5 w-5\" />\n                        </div>\n                        <h3 className=\"text-lg font-bold text-gray-800\">Recommended Bet</h3>\n                      </div>\n                      <div className=\"space-y-4\">\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"text-gray-600\">Selection:</span>\n                          <span className=\"font-semibold text-gray-800\">\n                            {safeRenderNode(oas >= 60 ? game.home_team : game.away_team, 'N/A')} to Win\n                          </span>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"text-gray-600\">Confidence:</span>\n                          <div className=\"flex items-center\">\n                            <div className=\"h-1.5 bg-gray-200 rounded-full overflow-hidden\">\n                              <div \n                                className=\"h-1.5 rounded-full bg-gradient-to-r from-green-500 to-emerald-400\"\n                                style={{ width: `${oasValue}%` }}\n                              />\n                            </div>\n                            <span className=\"font-semibold text-green-600\">{oasValue}%</span>\n                          </div>\n                        </div>\n                        <div className=\"pt-3 mt-2 border-t border-gray-100\">\n                          <p className=\"text-sm text-gray-600\">\n                            {oasValue >= 70 ? 'Strong' : oasValue >= 50 ? 'Moderate' : 'Slight'} astrological advantage with multiple positive indicators.\n                          </p>\n                          <ul className=\"mt-2 space-y-1 text-sm text-green-600\">\n                            {astroInfluences.slice(0, 2).map((influence, i) => (\n                              <li key={`rec-${i}`} className=\"flex items-start\">\n                                <CheckCircle className=\"h-4 w-4 mt-0.5 mr-1.5 flex-shrink-0\" />\n                                <span>{influence.description}</span>\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n\n                {/* Alternative Bet */}\n                <div className=\"relative group\">\n                  <div className=\"absolute -inset-1 bg-gradient-to-r from-blue-400 to-indigo-500 rounded-xl opacity-75 group-hover:opacity-100 transition duration-200 blur-sm\"></div>\n                  <Card className=\"relative bg-white rounded-xl shadow-lg overflow-hidden h-full\">\n                    <div className=\"absolute top-0 right-0 px-3 py-1 bg-blue-100 text-blue-800 text-xs font-bold rounded-bl-lg\">\n                      ALTERNATIVE\n                    </div>\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <div className=\"p-2 rounded-full bg-blue-100 text-blue-600 mr-3\">\n                          <BarChart2 className=\"h-5 w-5\" />\n                        </div>\n                        <h3 className=\"text-lg font-bold text-gray-800\">Alternative Play</h3>\n                      </div>\n                      <div className=\"space-y-4\">\n                        {game.odds && typeof game.odds === 'number' && Math.abs(game.odds) > 0 ? (\n                          <>\n                            <div className=\"flex items-center justify-between\">\n                              <span className=\"text-gray-600\">Type:</span>\n                              <span className=\"font-semibold\">\n                                {game.odds > 0 ? 'Underdog' : 'Favorite'} Spread\n                              </span>\n                            </div>\n                            <div className=\"flex items-center justify-between\">\n                              <span className=\"text-gray-600\">Line:</span>\n                              <span className=\"font-mono font-semibold\">\n                                {game.odds > 0 ? '+' : ''}{game.odds}\n                              </span>\n                            </div>\n                            <div className=\"pt-3 mt-2 border-t border-gray-100\">\n                              <p className=\"text-sm text-gray-600\">\n                                {oas >= 60 ? 'Good' : 'Fair'} value based on astrological factors and team performance metrics.\n                              </p>\n                              <ul className=\"mt-2 space-y-1 text-blue-600\">\n                                <li className=\"flex items-start text-sm\">\n                                  <CheckCircle className=\"h-4 w-4 mt-0.5 mr-1.5 flex-shrink-0\" />\n                                  <span>{oas >= 60 ? 'Favorable' : 'Neutral'} planetary alignments</span>\n                                </li>\n                                <li className=\"flex items-start text-sm\">\n                                  <TrendingUp className=\"h-4 w-4 mt-0.5 mr-1.5 flex-shrink-0\" />\n                                  <span>Positive momentum indicators</span>\n                                </li>\n                              </ul>\n                            </div>\n                          </>\n                        ) : (\n                          <div className=\"text-center py-4\">\n                            <p className=\"text-gray-500 text-sm\">Check back closer to game time for spread recommendations</p>\n                          </div>\n                        )}\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n\n                {/* Bet to Avoid */}\n                <div className=\"relative group\">\n                  <div className=\"absolute -inset-1 bg-gradient-to-r from-amber-400 to-orange-500 rounded-xl opacity-75 group-hover:opacity-100 transition duration-200 blur-sm\"></div>\n                  <Card className=\"relative bg-white rounded-xl shadow-lg overflow-hidden h-full\">\n                    <div className=\"absolute top-0 right-0 px-3 py-1 bg-amber-100 text-amber-800 text-xs font-bold rounded-bl-lg\">\n                      CAUTION\n                    </div>\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <div className=\"p-2 rounded-full bg-amber-100 text-amber-600 mr-3\">\n                          <AlertTriangle className=\"h-5 w-5\" />\n                        </div>\n                        <h3 className=\"text-lg font-bold text-gray-800\">Exercise Caution</h3>\n                      </div>\n                      <div className=\"space-y-4\">\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"text-gray-600\">Avoid:</span>\n                          <span className=\"font-semibold\">\n                            {oas >= 50 ? game.away_team : game.home_team} Moneyline\n                          </span>\n                        </div>\n                        <div className=\"pt-3 mt-2 border-t border-gray-100\">\n                          <p className=\"text-sm text-gray-600\">\n                            {oas >= 70 ? 'High' : 'Moderate'} risk based on current astrological conditions and team dynamics.\n                          </p>\n                          <ul className=\"mt-2 space-y-1 text-amber-600\">\n                            <li className=\"flex items-start text-sm\">\n                              <XCircle className=\"h-4 w-4 mt-0.5 mr-1.5 flex-shrink-0\" />\n                              <span>Challenging planetary alignments</span>\n                            </li>\n                            <li className=\"flex items-start text-sm\">\n                              <AlertCircle className=\"h-4 w-4 mt-0.5 mr-1.5 flex-shrink-0\" />\n                              <span>Potential performance volatility</span>\n                            </li>\n                            {oas >= 70 && (\n                              <li className=\"flex items-start text-sm\">\n                                <Info className=\"h-4 w-4 mt-0.5 mr-1.5 flex-shrink-0\" />\n                                <span>Consider alternative betting options</span>\n                              </li>\n                            )}\n                          </ul>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Player Rosters */}\n        {game && (\n          <div className=\"mt-8 space-y-6\">\n            {/* Home Team Players */}\n            {renderPlayersSection(homeTeamName, homePlayers)}\n            \n            {/* Away Team Players */}\n            {renderPlayersSection(awayTeamName, awayPlayers)}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EventDetails;\n"],"file":"assets/EventDetails-CpQwHJdB.js"}