{"version":3,"file":"BasketballPlayerPage-DxiQXYdQ.js","sources":["../../src/components/players/PlayerHeader.tsx","../../src/utils/elementUtils.ts","../../src/components/players/PlayerInfluenceCard.tsx","../../src/components/players/AstroProfile.tsx","../../src/components/players/PerformancePrediction.tsx","../../src/components/players/PlayerStatsTable.tsx","../../src/pages/players/BasketballPlayerPage.tsx"],"sourcesContent":["import React from 'react';\n\ninterface PlayerHeaderProps {\n  player: {\n    full_name: string | null;\n    headshot_url: string | null;\n    number?: string | number | null;\n    position: string | null;\n    team_name?: string | null;\n    birth_date: string | null;\n    birth_location?: string | null;\n  };\n}\n\nconst PlayerHeader: React.FC<PlayerHeaderProps> = ({ player }) => {\n  return (\n    <section className=\"flex flex-col items-center text-center gap-4 bg-white p-8 rounded-lg shadow-md\">\n      <div className=\"w-32 h-32 rounded-full overflow-hidden border-4 border-blue-600 bg-gray-100 flex items-center justify-center\">\n        {player.headshot_url ? (\n          <img \n            src={player.headshot_url}\n            alt={`${player.full_name} headshot`}\n            className=\"w-full h-full object-cover\"\n            onError={(e) => {\n              // Fallback to placeholder if image fails to load\n              (e.target as HTMLImageElement).src = 'https://via.placeholder.com/150/cccccc/666666?text=No+Image';\n            }}\n            loading=\"lazy\"\n          />\n        ) : (\n          <div className=\"w-full h-full flex items-center justify-center bg-blue-100 text-blue-800 text-xl font-bold\">\n            {player.full_name?.split(' ').map(n => n[0]).join('')}\n          </div>\n        )}\n      </div>\n      <h1 className=\"text-4xl font-bold text-gray-800\">{player.full_name}</h1>\n      <div className=\"flex items-center gap-2\">\n        <span className=\"px-3 py-1 bg-blue-100 text-blue-800 rounded-full font-semibold\">#{player.number || 'N/A'}</span>\n        <span className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full font-semibold\">{player.position || 'N/A'}</span>\n        {player.team_name && (\n          <span className=\"px-3 py-1 bg-purple-100 text-purple-800 rounded-full font-semibold\">\n            {player.team_name}\n          </span>\n        )}\n      </div>\n      {player.birth_date && (\n        <p className=\"text-gray-600 mt-2\">\n          Born: {new Date(player.birth_date).toLocaleDateString('en-US', { \n            year: 'numeric', \n            month: 'long', \n            day: 'numeric' \n          })}\n        </p>\n      )}\n      {player.birth_location && (\n        <p className=\"text-gray-600\">From: {player.birth_location}</p>\n      )}\n    </section>\n  );\n};\n\nexport default PlayerHeader;\n","// src/utils/elementUtils.ts\n\nimport { AstroData } from '../types/app.types';\n\nexport interface ElementComposition {\n  name: string;\n  percentage: number;\n}\n\nexport interface ElementInfluence {\n  element: string;\n  percentage: number;\n  strength: string;\n  description: string;\n}\n\nexport const getElementForSign = (sign: string): string => {\n  const elementMap: Record<string, string> = {\n    'Aries': 'Fire',\n    'Taurus': 'Earth',\n    'Gemini': 'Air',\n    'Cancer': 'Water',\n    'Leo': 'Fire',\n    'Virgo': 'Earth',\n    'Libra': 'Air',\n    'Scorpio': 'Water',\n    'Sagittarius': 'Fire',\n    'Capricorn': 'Earth',\n    'Aquarius': 'Air',\n    'Pisces': 'Water'\n  };\n  return elementMap[sign] || 'Earth'; // Default to Earth if sign not found\n};\n\nexport const calculateElementalComposition = (astro: AstroData): ElementComposition[] => {\n  const elements = ['Fire', 'Earth', 'Air', 'Water'];\n  const elementCounts: Record<string, number> = {\n    'Fire': 0,\n    'Earth': 0,\n    'Air': 0,\n    'Water': 0\n  };\n\n  // Count elements from sun, moon, and ascendant signs\n  elementCounts[getElementForSign(astro.sunSign.sign)] += 1.5; // Sun has more weight\n  elementCounts[getElementForSign(astro.moonSign.sign)] += 1.2; // Moon has medium weight\n  elementCounts[getElementForSign(astro.ascendant.sign)] += 1.0; // Ascendant has base weight\n\n  // Calculate raw percentages\n  const total = Object.values(elementCounts).reduce((sum, count) => sum + count, 0);\n  \n  // Calculate raw percentages and keep track of the sum for adjustment\n  let sum = 0;\n  const rawPercentages = elements.map(element => {\n    const percentage = (elementCounts[element] / total) * 100;\n    sum += percentage;\n    return { name: element, raw: percentage };\n  });\n\n  // Calculate rounded values and track the difference\n  const rounded = rawPercentages.map(item => ({\n    name: item.name,\n    value: Math.round(item.raw),\n    diff: Math.round(item.raw) - item.raw\n  }));\n\n  // Sort by the difference to distribute rounding errors fairly\n  rounded.sort((a, b) => a.diff - b.diff);\n  \n  // Calculate the total of rounded values\n  const totalRounded = rounded.reduce((sum, item) => sum + item.value, 0);\n  \n  // Distribute the rounding error (100 - totalRounded) to the elements with the largest differences\n  const error = 100 - totalRounded;\n  for (let i = 0; i < Math.abs(error); i++) {\n    const index = error > 0 ? i : rounded.length - 1 - i;\n    rounded[index].value += error > 0 ? 1 : -1;\n  }\n  \n  // Return the final percentages\n  return rounded.map(item => ({\n    name: item.name,\n    percentage: item.value\n  }));\n};\n\nexport const getElementColor = (element: string): string => {\n  const colors: Record<string, string> = {\n    'Fire': '#ef4444',    // Red\n    'Earth': '#22c55e',   // Green\n    'Air': '#3b82f6',     // Blue\n    'Water': '#8b5cf6'    // Purple\n  };\n  return colors[element] || '#6b7280'; // Default to gray\n};\n\nexport const getElementColorClass = (element: string): string => {\n  const classes: Record<string, string> = {\n    'Fire': 'bg-red-500',\n    'Earth': 'bg-green-500',\n    'Air': 'bg-blue-500',\n    'Water': 'bg-purple-500'\n  };\n  return classes[element] || 'bg-gray-400';\n};\n\nexport const getElementEmoji = (element: string): string => {\n  const emojis: Record<string, string> = {\n    'Fire': '🔥',\n    'Earth': '🌍',\n    'Air': '💨',\n    'Water': '💧'\n  };\n  return emojis[element] || '✨';\n};\n\nexport const getElementStrength = (percentage: number): string => {\n  if (percentage >= 35) return 'Strong Influence';\n  if (percentage >= 20) return 'Moderate Influence';\n  return 'Minimal Influence';\n};\n\nexport const getElementDescription = (element: string, percentage: number, playerName: string): string => {\n  const descriptions: Record<string, Record<string, string>> = {\n    'Fire': {\n      strong: `${playerName} has a powerful Fire presence (${percentage}%), bringing intense energy, passion, and competitive drive to the game. This makes ${playerName} a natural leader with a strong will to win.`,\n      moderate: `A balanced Fire presence (${percentage}%) gives ${playerName} good energy and motivation, though they may need to be mindful of maintaining consistency.`,\n      minimal: `With minimal Fire (${percentage}%), ${playerName} may need to work on bringing more energy and assertiveness to their game.`\n    },\n    'Earth': {\n      strong: `A strong Earth presence (${percentage}%) gives ${playerName} exceptional reliability, consistency, and practical skills. They're the rock of the team, always delivering solid performances.`,\n      moderate: `A balanced Earth presence (${percentage}%) helps ${playerName} stay grounded and focused, though they may need to work on being more adaptable.`,\n      minimal: `With minimal Earth (${percentage}%), ${playerName} may need to focus on developing more consistency and reliability in their performance.`\n    },\n    'Air': {\n      strong: `A dominant Air presence (${percentage}%) gives ${playerName} excellent mental agility, communication skills, and the ability to understand complex plays and strategies.`,\n      moderate: `A good balance of Air (${percentage}%) gives ${playerName} solid mental agility and the ability to understand complex plays.`,\n      minimal: `With minimal Air (${percentage}%), ${playerName} may need to work on their strategic thinking and communication on the field.`\n    },\n    'Water': {\n      strong: `A strong Water presence (${percentage}%) gives ${playerName} exceptional emotional intelligence, intuition, and team chemistry. They're able to read the game and their teammates with ease.`,\n      moderate: `A balanced Water presence (${percentage}%) helps ${playerName} connect with teammates and understand the flow of the game.`,\n      minimal: `Minimal Water (${percentage}%) suggests ${playerName} may need to work on emotional awareness and team chemistry.`\n    }\n  };\n\n  const strength = percentage >= 35 ? 'strong' : percentage >= 20 ? 'moderate' : 'minimal';\n  return descriptions[element]?.[strength] || `${playerName}'s ${element} influence is ${strength}.`;\n};\n\nexport const getInfluenceStrength = (score: number): string => {\n  if (score >= 90) return 'exceptionally influenced';\n  if (score >= 70) return 'strongly influenced';\n  if (score >= 50) return 'moderately influenced';\n  if (score >= 30) return 'slightly influenced';\n  return 'minimally influenced';\n};\n\nexport const getElementalInfluences = (astro: AstroData, playerName: string): ElementInfluence[] => {\n  const elements = calculateElementalComposition(astro);\n  \n  return elements.map(element => ({\n    element: element.name,\n    percentage: element.percentage,\n    strength: getElementStrength(element.percentage),\n    description: getElementDescription(element.name, element.percentage, playerName)\n  }));\n};\n","import React from 'react';\nimport CircularProgress from '../CircularProgress';\n\n// Import types and utilities\nimport { AstroData } from '../../types/app.types';\nimport { calculateElementalComposition } from '../../utils/elementUtils';\n\n// Define interfaces for the component props\ninterface PlayerInfluenceCardProps {\n  player: {\n    full_name: string | null;\n    astro_influence?: number | null;\n    impact_score?: number | string | null;\n    [key: string]: any; // Allow additional properties\n  };\n  astro?: AstroData | null;\n}\n\n// Helper function to get influence strength text\nconst getInfluenceStrength = (score: number): string => {\n  if (score >= 80) return 'greatly enhanced';\n  if (score >= 60) return 'significantly boosted';\n  if (score >= 40) return 'moderately affected';\n  if (score >= 20) return 'slightly influenced';\n  return 'minimally affected';\n};\n\n// Helper function to get element color class\nconst getElementColorClass = (element: string): string => {\n  switch (element) {\n    case 'Fire': return 'bg-red-500';\n    case 'Earth': return 'bg-yellow-600';\n    case 'Air': return 'bg-blue-400';\n    case 'Water': return 'bg-blue-600';\n    default: return 'bg-gray-400';\n  }\n};\n\n// Helper function to get element color\nconst getElementColor = (element: string): string => {\n  switch (element) {\n    case 'Fire': return '#EF4444';\n    case 'Earth': return '#D97706';\n    case 'Air': return '#60A5FA';\n    case 'Water': return '#2563EB';\n    default: return '#9CA3AF';\n  }\n};\n\nconst PlayerInfluenceCard: React.FC<PlayerInfluenceCardProps> = ({ player, astro }) => {\n  // Calculate elemental composition using the utility function\n  const elementalComposition = astro ? calculateElementalComposition(astro) : [];\n  return (\n    <section className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n      {/* Astrological Influence Card */}\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h2 className=\"text-2xl font-semibold mb-6 text-gray-800 border-b pb-2\">Astrological Influence</h2>\n        <div className=\"flex flex-col items-center\">\n          {player.astro_influence !== undefined && player.astro_influence !== null ? (\n            <>\n              <CircularProgress \n                value={player.astro_influence} \n                size={160}\n                strokeWidth={12}\n                showDescription={true}\n              >\n                <span className=\"text-3xl font-bold\">\n                  {Math.round(player.astro_influence)}%\n                </span>\n                <span className=\"text-sm text-gray-500 mt-1\">Astro Influence</span>\n              </CircularProgress>\n              <p className=\"mt-2 text-sm text-gray-600 max-w-xs text-center\">\n                {player.full_name?.split(' ')[0]}'s performance may be {getInfluenceStrength(player.astro_influence)} by today's celestial alignments.\n              </p>\n            </>\n          ) : (\n            <div className=\"text-center p-4 bg-yellow-50 rounded-lg border border-yellow-200\">\n              <p className=\"text-yellow-700\">Astrological influence data not available</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Player Impact Card */}\n      <div className=\"bg-white p-6 rounded-lg shadow-md border-l-4 border-blue-500\">\n        <h2 className=\"text-2xl font-semibold mb-3 text-gray-800\">Player Impact</h2>\n        <div className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <p className=\"text-lg\">Overall Impact:</p>\n            {player.impact_score !== undefined && player.impact_score !== null ? (\n              <span className=\"font-bold text-blue-600 text-xl\">\n                {typeof player.impact_score === 'number' ? player.impact_score.toFixed(1) : player.impact_score}\n              </span>\n            ) : (\n              <span className=\"text-gray-500\">N/A</span>\n            )}\n          </div>\n          {player.impact_score !== undefined && player.impact_score !== null && (\n            <div className=\"w-full bg-gray-200 rounded-full h-2.5 mt-2\">\n              <div \n                className=\"bg-blue-600 h-2.5 rounded-full\" \n                style={{ \n                  width: `${Math.min(\n                    (typeof player.impact_score === 'number' \n                      ? player.impact_score \n                      : parseFloat(player.impact_score) || 0) * 10, \n                    100\n                  )}%` \n                }}\n              ></div>\n            </div>\n          )}\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Impact score represents the player's overall contribution based on statistical performance and astrological alignment.\n          </p>\n\n          {/* Elemental Composition Section */}\n          {elementalComposition.length > 0 && (\n            <div className=\"mt-8 pt-6 border-t border-gray-100\">\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Elemental Composition</h3>\n              <div className=\"relative h-6 rounded-full bg-gray-100 shadow-inner overflow-hidden\">\n                <div className=\"absolute inset-0 flex\">\n                  {elementalComposition.map((element, index, array) => (\n                    <div \n                      key={element.name}\n                      className={`h-full relative ${getElementColorClass(element.name)}`}\n                      style={{\n                        width: `${element.percentage}%`,\n                        marginLeft: index === 0 ? '0' : '-1px',\n                        zIndex: array.length - index\n                      }}\n                    >\n                      <div className=\"absolute inset-0 bg-gradient-to-b from-white/20 to-transparent\"></div>\n                      {element.percentage > 12 && (\n                        <span className=\"absolute inset-0 flex items-center justify-center text-xs font-medium text-white mix-blend-overlay\">\n                          {element.percentage}% {element.name}\n                        </span>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Legend */}\n              <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-3 mt-4\">\n                {elementalComposition.map(element => (\n                  <div key={element.name} className=\"flex items-center\">\n                    <div \n                      className=\"w-3 h-3 rounded-sm mr-2 shadow-sm\"\n                      style={{ backgroundColor: getElementColor(element.name) }}\n                    />\n                    <span className=\"text-xs font-medium text-gray-700\">\n                      {element.name} <span className=\"text-gray-500\">{element.percentage}%</span>\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PlayerInfluenceCard;\n","import React from 'react';\nimport { AstroData } from '../../types/app.types';\nimport BigThreeAstroCards from '../../pages/BigThreeAstroCards';\nimport AstroPeakDay from '../../pages/AstroPeakDay';\n\n// Import Player interface\nimport { Player } from '../../types/app.types';\n\n// Define interfaces for the component props\ninterface AstroProfileProps {\n  player: Player & {\n    full_name: string | null;\n    birth_date?: string | null;\n  };\n  astro: AstroData;\n}\n\n// Helper function to calculate elemental composition\nconst calculateElementalComposition = (astro: AstroData) => {\n  const elements = ['Fire', 'Earth', 'Air', 'Water'] as const;\n  return elements.map(element => ({\n    name: element,\n    percentage: Math.round(Math.random() * 30 + 10) // Replace with actual calculation\n  }));\n};\n\n// Element-specific skills for performance prediction\nconst elementalSkills = {\n  'Fire': ['power hitting', 'aggressive base running', 'fastball velocity', 'competitive drive'],\n  'Earth': ['defensive consistency', 'plate discipline', 'ground ball pitching', 'endurance'],\n  'Air': ['pitch recognition', 'bat speed', 'breaking ball movement', 'strategic thinking'],\n  'Water': ['adaptability', 'clutch performance', 'changeup effectiveness', 'team chemistry']\n};\n\n// Moon phases for prediction\nconst moonPhases = [\n  'New Moon', 'Waxing Crescent', 'First Quarter', 'Waxing Gibbous', \n  'Full Moon', 'Waning Gibbous', 'Last Quarter', 'Waning Crescent'\n];\n\nconst AstroProfile: React.FC<AstroProfileProps> = ({ player, astro }) => {\n  // Calculate elemental composition for prediction basis\n  const elementalComposition = calculateElementalComposition(astro);\n  const sortedElements = [...elementalComposition].sort((a, b) => b.percentage - a.percentage);\n  const dominantElement = sortedElements[0].name;\n  const secondaryElement = sortedElements[1].name;\n  \n  // Calculate deterministic values based on birth date and current date\n  const playerBirthDate = new Date(player.birth_date || new Date());\n  const birthDay = playerBirthDate.getDate();\n  const currentDate = new Date();\n  const dayOfYear = Math.floor((currentDate.getTime() - new Date(currentDate.getFullYear(), 0, 0).getTime()) / 86400000);\n  \n  const favorabilityValue = ((birthDay + dayOfYear) % 100) / 100;\n  const isFavorable = favorabilityValue > 0.4;\n  const moonPhase = moonPhases[dayOfYear % 8];\n  \n  // Generate prediction statement based on planetary status\n  const getOutlookStatement = () => {\n    if (isFavorable) {\n      const statements = [\n        `Planetary alignments are currently enhancing ${player.full_name}'s ${elementalSkills[dominantElement][0]} and ${elementalSkills[secondaryElement][1]}.`,\n        `${astro.sunSign.sign}'s energy is currently boosting ${player.full_name}'s natural ${dominantElement.toLowerCase()} element attributes.`,\n        `The current ${moonPhase} phase aligns well with ${player.full_name}'s ${astro.moonSign.sign} moon sign, suggesting peak performance potential.`,\n        `${player.full_name}'s ${dominantElement} dominant nature is being positively activated by current planetary transits.`\n      ];\n      return statements[dayOfYear % statements.length];\n    } else {\n      const statements = [\n        `Current planetary alignments may challenge ${player.full_name}'s natural ${dominantElement.toLowerCase()} element strengths.`,\n        `${player.full_name}'s ${astro.sunSign.sign} energy is currently experiencing resistance from planetary transits.`,\n        `The current ${moonPhase} phase creates tension with ${player.full_name}'s ${astro.moonSign.sign} moon sign.`,\n        `Planetary positions suggest ${player.full_name} may need to work harder to access their natural ${dominantElement} element talents.`\n      ];\n      return statements[dayOfYear % statements.length];\n    }\n  };\n  \n  // Generate specific performance impacts based on dominant element\n  const getPerformanceImpacts = () => {\n    const impacts = [];\n    \n    // Add element-specific impacts\n    if (dominantElement === 'Fire') {\n      impacts.push(isFavorable \n        ? `Strong power hitting potential, especially against ${['left-handed', 'right-handed'][dayOfYear % 2]} pitchers`\n        : `May struggle with timing on breaking balls, affecting power numbers`);\n      impacts.push(isFavorable\n        ? `Increased aggression on the basepaths could lead to extra bases`\n        : `Risk of overaggression could lead to baserunning errors`);\n    } \n    else if (dominantElement === 'Earth') {\n      impacts.push(isFavorable\n        ? `Exceptional defensive positioning and fielding consistency expected`\n        : `May play too conservatively in high-pressure defensive situations`);\n      impacts.push(isFavorable\n        ? `Excellent pitch selection and plate discipline likely`\n        : `Could be overly patient at the plate, missing hittable pitches`);\n    }\n    else if (dominantElement === 'Air') {\n      impacts.push(isFavorable\n        ? `Enhanced ability to read and react to complex pitch sequences`\n        : `May overthink at-bats, leading to mental fatigue late in games`);\n      impacts.push(isFavorable\n        ? `Quick adjustments to opposing pitchers' strategies`\n        : `Could struggle against pitchers with unpredictable patterns`);\n    }\n    else if (dominantElement === 'Water') {\n      impacts.push(isFavorable\n        ? `Exceptional performance in high-pressure, clutch situations`\n        : `Emotional fluctuations might affect consistency`);\n      impacts.push(isFavorable\n        ? `Adaptive approach allows quick recovery from slumps`\n        : `Might be overly influenced by team momentum swings`);\n    }\n    \n    // Add moon sign specific impact\n    impacts.push(isFavorable\n      ? `${astro.moonSign.sign} moon sign suggests peak performance during ${['night games', 'day games', 'home stands', 'road trips'][dayOfYear % 4]}`\n      : `${astro.moonSign.sign} moon sign suggests caution during ${['night games', 'day games', 'home stands', 'road trips'][dayOfYear % 4]}`);\n    \n    return impacts;\n  };\n  \n  // Get next favorable date based on moon sign\n  const getNextFavorablePeriod = () => {\n    const moonSigns = ['Aries', 'Taurus', 'Gemini', 'Cancer', 'Leo', 'Virgo', 'Libra', 'Scorpio', 'Sagittarius', 'Capricorn', 'Aquarius', 'Pisces'];\n    const favorableSigns = [\n      astro.sunSign.sign,\n      astro.moonSign.sign,\n      moonSigns[(moonSigns.indexOf(astro.sunSign.sign) + 4) % 12], // Trine aspect\n      moonSigns[(moonSigns.indexOf(astro.sunSign.sign) + 8) % 12]  // Trine aspect\n    ];\n    \n    const randomFavorableSign = favorableSigns[dayOfYear % favorableSigns.length];\n    return `Moon in ${randomFavorableSign} (${['early', 'mid', 'late'][dayOfYear % 3]} ${['June', 'July', 'August', 'September', 'October'][dayOfYear % 5]} is optimal)`;\n  };\n\n  // Get compatibility text\n  const getCompatibilityText = () => {\n    const elementToCompatibles: Record<string, string[]> = {\n      Fire: ['Aries', 'Leo', 'Sagittarius'],\n      Earth: ['Taurus', 'Virgo', 'Capricorn'],\n      Air: ['Gemini', 'Libra', 'Aquarius'],\n      Water: ['Cancer', 'Scorpio', 'Pisces'],\n    };\n    const sunElement = astro.sunSign.element;\n    const compatibleSigns = elementToCompatibles[sunElement] || [];\n    return `${player.full_name}'s astrological profile suggests strongest team chemistry with players born under ${compatibleSigns.join(', ')} signs.`;\n  };\n\n  return (\n    <>\n      {/* Performance Prediction Card */}\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\n        <div className=\"flex items-start\">\n          <div \n            className={`flex-shrink-0 h-6 w-1 rounded-full ${\n              isFavorable ? 'bg-green-500' : 'bg-yellow-500'\n            }`}\n          ></div>\n          <div className=\"ml-4 w-full\">\n            <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\n              {isFavorable ? 'Favorable Outlook' : 'Challenging Period'}\n            </h3>\n            <p className=\"text-gray-700 mb-3\">{getOutlookStatement()}</p>\n            \n            <div className=\"mb-3\">\n              <h4 className=\"text-md font-medium text-gray-700 mb-2\">Astrological Impacts on Performance:</h4>\n              <ul className=\"list-disc pl-5 space-y-1\">\n                {getPerformanceImpacts().map((impact, index) => (\n                  <li key={index} className=\"text-sm text-gray-600\">{impact}</li>\n                ))}\n              </ul>\n            </div>\n            \n            <div className=\"mt-4 pt-3 border-t border-gray-100\">\n              <p className=\"text-sm text-indigo-600 font-medium\">\n                Next favorable period: {getNextFavorablePeriod()}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Astrological Profile */}\n      <section className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h2 className=\"text-2xl font-semibold mb-4 text-gray-800 border-b pb-2\">Astrological Profile</h2>\n        <div className=\"mt-4\">\n          <BigThreeAstroCards astro={astro} playerName={player.full_name || ''} />\n        </div>\n        \n        <div className=\"mt-6 p-4 bg-indigo-50 rounded-lg border border-indigo-100\">\n          <h3 className=\"font-semibold text-indigo-800 mb-2\">Astrological Interpretation</h3>\n          <AstroPeakDay\n            player={player}\n            astro={astro}\n          />\n        </div>\n        \n        <div className=\"mt-6\">\n          <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\n            <h3 className=\"font-semibold text-orange-800 mb-2\">Compatibility</h3>\n            <p className=\"text-gray-700\">\n              {getCompatibilityText()}\n            </p>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default AstroProfile;\n","import React from 'react';\nimport { Player } from '../../types/app.types';\nimport { AstroData } from '../../types/app.types';\n\ninterface PerformancePredictionProps {\n  player: Player;\n  astro: AstroData;\n}\nconst PerformancePrediction: React.FC<PerformancePredictionProps> = ({ player, astro }) => {\n  // Calculate elemental composition for prediction basis\n  const elementalComposition = [\n    { name: 'Fire', percentage: 30 },\n    { name: 'Earth', percentage: 25 },\n    { name: 'Air', percentage: 25 },\n    { name: 'Water', percentage: 20 }\n  ];\n  \n  // Sort elements by percentage to find dominant elements\n  const sortedElements = [...elementalComposition].sort((a, b) => b.percentage - a.percentage);\n  const dominantElement = sortedElements[0].name;\n  const secondaryElement = sortedElements[1].name;\n  \n  // Calculate overall favorability based on planetary alignments\n  const playerBirthDate = new Date(player.birth_date || new Date());\n  const birthDay = playerBirthDate.getDate();\n  const currentDate = new Date();\n  const dayOfYear = Math.floor((currentDate.getTime() - new Date(currentDate.getFullYear(), 0, 0).getTime()) / 86400000);\n  \n  const favorabilityValue = ((birthDay + dayOfYear) % 100) / 100;\n  const isFavorable = favorabilityValue > 0.4; // Slightly bias toward favorable predictions\n  \n  // Get moon phase information\n  const moonPhase = ['New Moon', 'Waxing Crescent', 'First Quarter', 'Waxing Gibbous', \n                     'Full Moon', 'Waning Gibbous', 'Last Quarter', 'Waning Crescent'][dayOfYear % 8];\n  \n  // Element-specific skills\n  const elementalSkills = {\n    'Fire': ['scoring', 'aggressive drives', 'fast breaks', 'competitive drive'],\n    'Earth': ['defensive consistency', 'rebounding', 'post moves', 'endurance'],\n    'Air': ['court vision', 'shooting', 'ball handling', 'basketball IQ'],\n    'Water': ['clutch performance', 'team chemistry', 'adaptability', 'emotional control']\n  };\n  \n  // Generate prediction statement based on planetary status\n  const getOutlookStatement = () => {\n    if (isFavorable) {\n      const statements = [\n        `Planetary alignments are currently enhancing ${player.full_name}'s ${elementalSkills[dominantElement][0]} and ${elementalSkills[secondaryElement][1]}.`,\n        `${astro.sunSign.sign}'s energy is currently boosting ${player.full_name}'s natural ${dominantElement.toLowerCase()} element attributes.`,\n        `The current ${moonPhase} phase aligns well with ${player.full_name}'s ${astro.moonSign.sign} moon sign, suggesting peak performance potential.`,\n        `${player.full_name}'s ${dominantElement} dominant nature is being positively activated by current planetary transits.`\n      ];\n      return statements[dayOfYear % statements.length];\n    } else {\n      const statements = [\n        `Current planetary alignments may challenge ${player.full_name}'s natural ${dominantElement.toLowerCase()} element strengths.`,\n        `${player.full_name}'s ${astro.sunSign.sign} energy is currently experiencing resistance from planetary transits.`,\n        `The current ${moonPhase} phase creates tension with ${player.full_name}'s ${astro.moonSign.sign} moon sign.`,\n        `Planetary positions suggest ${player.full_name} may need to work harder to access their natural ${dominantElement} element talents.`\n      ];\n      return statements[dayOfYear % statements.length];\n    }\n  };\n  \n  // Generate specific performance impacts based on dominant element\n  const getPerformanceImpacts = () => {\n    const impacts = [];\n    \n    // Add element-specific impacts\n    if (dominantElement === 'Fire') {\n      impacts.push(isFavorable \n        ? `Strong scoring potential, especially in transition and fast break situations`\n        : `May struggle with shot selection and forcing plays`);\n      impacts.push(isFavorable\n        ? `Increased aggression driving to the basket could lead to more free throw attempts`\n        : `Risk of foul trouble due to over-aggressive defense`);\n    } \n    else if (dominantElement === 'Earth') {\n      impacts.push(isFavorable\n        ? `Exceptional defensive positioning and rebounding expected`\n        : `May be less mobile on defense against quicker opponents`);\n      impacts.push(isFavorable\n        ? `Strong post presence and efficient scoring in the paint`\n        : `Could struggle against more physical defenders`);\n    }\n    else if (dominantElement === 'Air') {\n      impacts.push(isFavorable\n        ? `Enhanced court vision and playmaking ability`\n        : `May overthink plays, leading to turnovers`);\n      impacts.push(isFavorable\n        ? `Excellent three-point shooting and spacing`\n        : `Could struggle against aggressive on-ball defense`);\n    }\n    else if (dominantElement === 'Water') {\n      impacts.push(isFavorable\n        ? `Exceptional performance in clutch situations`\n        : `Emotions might affect consistency`);\n      impacts.push(isFavorable\n        ? `Adaptive playstyle creates opportunities for teammates`\n        : `Might be overly affected by team momentum swings`);\n    }\n    \n    // Add moon sign specific impact\n    impacts.push(isFavorable\n      ? `${astro.moonSign.sign} moon sign suggests peak performance during ${['night games', 'afternoon games', 'home games', 'road games'][dayOfYear % 4]}`\n      : `${astro.moonSign.sign} moon sign suggests caution during ${['night games', 'afternoon games', 'home games', 'road games'][dayOfYear % 4]}`);\n    \n    return impacts;\n  };\n  \n  // Get next favorable date based on moon sign\n  const getNextFavorablePeriod = () => {\n    const moonSigns = ['Aries', 'Taurus', 'Gemini', 'Cancer', 'Leo', 'Virgo', 'Libra', 'Scorpio', 'Sagittarius', 'Capricorn', 'Aquarius', 'Pisces'];\n    const favorableSigns = [\n      astro.sunSign.sign,\n      astro.moonSign.sign,\n      moonSigns[(moonSigns.indexOf(astro.sunSign.sign) + 4) % 12], // Trine aspect\n      moonSigns[(moonSigns.indexOf(astro.sunSign.sign) + 8) % 12]  // Trine aspect\n    ];\n    \n    const randomFavorableSign = favorableSigns[dayOfYear % favorableSigns.length];\n    return `Moon in ${randomFavorableSign} (${['early', 'mid', 'late'][dayOfYear % 3]} ${['November', 'December', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October'][currentDate.getMonth()]} is optimal)`;\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\n      <div className=\"flex items-start\">\n        <div \n          className={`flex-shrink-0 h-6 w-1 rounded-full ${\n            isFavorable ? 'bg-green-500' : 'bg-yellow-500'\n          }`}\n        ></div>\n        <div className=\"ml-4 w-full\">\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\n            {isFavorable ? 'Favorable Outlook' : 'Challenging Period'}\n          </h3>\n          <p className=\"text-gray-700 mb-3\">{getOutlookStatement()}</p>\n          \n          <div className=\"mb-3\">\n            <h4 className=\"text-md font-medium text-gray-700 mb-2\">Astrological Impacts on Performance:</h4>\n            <ul className=\"list-disc pl-5 space-y-1\">\n              {getPerformanceImpacts().map((impact, index) => (\n                <li key={index} className=\"text-sm text-gray-600\">{impact}</li>\n              ))}\n            </ul>\n          </div>\n          \n          <div className=\"mt-4 pt-3 border-t border-gray-100\">\n            <p className=\"text-sm text-indigo-600 font-medium\">\n              Next favorable period: {getNextFavorablePeriod()}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PerformancePrediction;\n","import React from 'react';\nimport { Player } from '../../types/app.types';\n\ninterface PlayerStatsTableProps {\n  player: Player;\n  league?: 'NBA' | string;\n}\n\nconst PlayerStatsTable: React.FC<PlayerStatsTableProps> = ({ player, league = 'NBA' }) => {\n  // Helper function to format percentage values\n  const formatPercentage = (value: number | string | null | undefined): string => {\n    if (value === null || value === undefined) return 'N/A';\n    \n    let num = typeof value === 'number' ? value : parseFloat(String(value));\n    if (isNaN(num)) return 'N/A';\n    \n    // If the number is between 0 and 1, assume it's a decimal and convert to percentage\n    if (num > 0 && num < 1) num *= 100;\n    // If the number is between 0 and 100, use as is\n    else if (num < 0 || num > 100) return 'N/A';\n    \n    return num.toFixed(1) + '%';\n  };\n\n  // Helper function to format numeric stats\n  const formatStat = (value: number | string | null | undefined, decimals: number = 1): string => {\n    if (value === null || value === undefined) return 'N/A';\n    \n    const num = typeof value === 'number' ? value : parseFloat(String(value));\n    if (isNaN(num)) return 'N/A';\n    \n    return decimals === 0 ? num.toLocaleString() : num.toFixed(decimals);\n  };\n\n  // Render NBA stats table\n  const renderNbaStats = () => (\n    <div className=\"overflow-x-auto\">\n      <table className=\"min-w-full text-sm border border-gray-200\">\n        <thead>\n          <tr className=\"bg-gray-100\">\n            {['GP', 'MIN', 'PTS', 'REB', 'AST', 'STL', 'BLK', 'FG%', '3P%', 'FT%'].map((header) => (\n              <th key={header} className=\"px-3 py-2\">\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td className=\"px-3 py-2\">{formatStat(player.stats_games_played, 0)}</td>\n            <td className=\"px-3 py-2\">{formatStat(player.stats_minutes_per_game)}</td>\n            <td className=\"px-3 py-2\">{formatStat(player.stats_points_per_game)}</td>\n            <td className=\"px-3 py-2\">{formatStat(player.stats_rebounds_per_game)}</td>\n            <td className=\"px-3 py-2\">{formatStat(player.stats_assists_per_game)}</td>\n            <td className=\"px-3 py-2\">{formatStat(player.stats_steals_per_game)}</td>\n            <td className=\"px-3 py-2\">{formatStat(player.stats_blocks_per_game)}</td>\n            <td className=\"px-3 py-2\">{formatPercentage(player.stats_field_goal_pct)}</td>\n            <td className=\"px-3 py-2\">{formatPercentage(player.stats_three_point_pct)}</td>\n            <td className=\"px-3 py-2\">{formatPercentage(player.stats_free_throw_pct)}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n\n  // Render non-NBA stats table (placeholder - can be expanded as needed)\n  const renderDefaultStats = () => (\n    <div className=\"overflow-x-auto\">\n      <table className=\"min-w-full text-sm border border-gray-200\">\n        <thead>\n          <tr className=\"bg-gray-100\">\n            {['GP', 'MIN', 'PTS', 'REB', 'AST', 'STL', 'BLK', 'FG%', '3P%', 'FT%'].map((header) => (\n              <th key={header} className=\"px-3 py-2\">\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td colSpan={10} className=\"px-3 py-4 text-center text-gray-500\">\n              No statistics available for this league\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n\n  return (\n    <section className=\"mt-8 bg-white p-6 rounded-lg shadow-md\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800 border-b pb-3\">\n        Basketball Statistics\n      </h2>\n      {league === 'NBA' ? renderNbaStats() : renderDefaultStats()}\n    </section>\n  );\n};\n\nexport default PlayerStatsTable;\n","// src/pages/players/BasketballPlayerPage.tsx\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { getPlayerByApiId } from '../../lib/supabase';\nimport { generatePlayerAstroData as getAstroData, BirthLocation } from '../../lib/playerAstroService';\nimport PlayerHeader from '../../components/players/PlayerHeader';\nimport PlayerInfluenceCard from '../../components/players/PlayerInfluenceCard';\nimport AstroProfile from '../../components/players/AstroProfile';\nimport PerformancePrediction from '../../components/players/PerformancePrediction';\nimport PlayerStatsTable from '../../components/players/PlayerStatsTable';\nimport { AstroData, AstroSignInfo, ZodiacSign } from '../../types/app.types';\nimport { Player } from '../../types/nba.types';\nimport { \n  getElementalInfluences,\n  ElementInfluence,\n  getElementColor,\n  getElementColorClass,\n  getElementEmoji\n} from '../../utils/elementUtils';\nimport { getZodiacIllustration } from '../../utils/zodiacIllustrations';\n\nimport CircularProgress from '../../components/CircularProgress';\nimport AstroPeakDay from '../AstroPeakDay';\nimport BigThreeAstroCards from '../BigThreeAstroCards';\n\n\n\n// Helper to get detailed sign information (element, modality, keywords)\n// This is a simplified version. In a real app, this might come from a more robust service or data source.\nconst zodiacDetailsMap: Record<ZodiacSign, Omit<AstroSignInfo, 'sign' | 'house'>> = {\n  Aries: { element: 'Fire', modality: 'Cardinal', keywords: ['energetic', 'pioneering'] },\n  Taurus: { element: 'Earth', modality: 'Fixed', keywords: ['grounded', 'sensual'] },\n  Gemini: { element: 'Air', modality: 'Mutable', keywords: ['communicative', 'curious'] },\n  Cancer: { element: 'Water', modality: 'Cardinal', keywords: ['nurturing', 'protective'] },\n  Leo: { element: 'Fire', modality: 'Fixed', keywords: ['charismatic', 'expressive'] },\n  Virgo: { element: 'Earth', modality: 'Mutable', keywords: ['analytical', 'practical'] },\n  Libra: { element: 'Air', modality: 'Cardinal', keywords: ['harmonious', 'diplomatic'] },\n  Scorpio: { element: 'Water', modality: 'Fixed', keywords: ['intense', 'transformative'] },\n  Sagittarius: { element: 'Fire', modality: 'Mutable', keywords: ['adventurous', 'optimistic'] },\n  Capricorn: { element: 'Earth', modality: 'Cardinal', keywords: ['disciplined', 'ambitious'] },\n  Aquarius: { element: 'Air', modality: 'Fixed', keywords: ['innovative', 'humanitarian'] },\n  Pisces: { element: 'Water', modality: 'Mutable', keywords: ['compassionate', 'imaginative'] },\n};\n\nconst getFullAstroSignInfo = (signName: ZodiacSign): AstroSignInfo => {\n  const details = zodiacDetailsMap[signName] || { element: 'Unknown', modality: 'Unknown', keywords: [] };\n  return {\n    sign: signName,\n    ...details,\n  };\n};\n\nconst PlayerDetailPage: React.FC = () => {\n  const { teamId, playerId } = useParams<{ teamId: string; playerId: string }>();\n  const location = useLocation();\n  const [player, setPlayer] = useState<Player | null>(null); // Player type from app.types.ts should align with data structure\n  const [astro, setAstro] = useState<AstroData | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        if (!playerId) {\n          setError('No player ID provided.');\n          setLoading(false);\n          return;\n        }\n\n        console.log(`[PlayerDetailPage] Fetching NBA player with ID: ${playerId}`);\n        const fetchedPlayer = await getPlayerByApiId(playerId, 'nba');\n        console.log('[PlayerDetailPage] Fetched player data:', fetchedPlayer);\n\n        if (!fetchedPlayer) {\n          setError('Player not found.');\n          setPlayer(null);\n        } else {\n          const nbaPlayer = fetchedPlayer as any;\n          console.log('NBA Player Data:', nbaPlayer);\n          console.log('Impact Score Raw:', nbaPlayer.impact_score, 'Type:', typeof nbaPlayer.impact_score);\n          console.log('Player Stats:', {\n            points_per_game: nbaPlayer.points_per_game,\n            rebounds_per_game: nbaPlayer.rebounds_per_game,\n            assists_per_game: nbaPlayer.assists_per_game,\n            stats_points_per_game: nbaPlayer.stats_points_per_game,\n            stats_rebounds_per_game: nbaPlayer.stats_rebounds_per_game,\n            stats_assists_per_game: nbaPlayer.stats_assists_per_game\n          });\n          // Helper function to safely parse and convert values\n          const safeParseFloat = (value: string | number | null | undefined, fallback: number | null = null): number | null => {\n            if (value === null || value === undefined) return fallback;\n            const num = typeof value === 'string' ? parseFloat(value) : Number(value);\n            return isNaN(num) ? fallback : num;\n          };\n\n          // Helper function to calculate per game stats\n          const getPerGameStat = (total: string | number | null | undefined, \n                                games: string | number | null | undefined, \n                                fallback: number | null = null): number | null => {\n            const totalNum = safeParseFloat(total, null);\n            const gamesNum = safeParseFloat(games, 1);\n            if (totalNum === null || gamesNum === null || gamesNum === 0) return fallback;\n            return totalNum / gamesNum;\n          };\n\n          // Helper function to calculate percentage\n          const getPercentage = (made: string | number | null | undefined, \n                              attempted: string | number | null | undefined, \n                              fallback: number | null = null): number | null => {\n            const madeNum = safeParseFloat(made, 0);\n            const attemptedNum = safeParseFloat(attempted, 0);\n            if (attemptedNum === 0) return fallback;\n            return madeNum / attemptedNum;\n          };\n\n          // Map the player data to the formatted player object\n          const formattedPlayer: Player = {\n            id: nbaPlayer.id?.toString() || '',\n            player_id: nbaPlayer.external_player_id || nbaPlayer.id?.toString() || '',\n            full_name: `${nbaPlayer.first_name || ''} ${nbaPlayer.last_name || ''}`.trim(),\n            position: nbaPlayer.primary_position || 'N/A',\n            headshot_url: nbaPlayer.photo_url || nbaPlayer.player_official_image_src || undefined,\n            birth_date: nbaPlayer.birth_date || nbaPlayer.player_birth_date || undefined,\n            number: nbaPlayer.jersey_number || nbaPlayer.player_jersey_number || undefined,\n            team_name: nbaPlayer.team_abbreviation || nbaPlayer.player_current_team_abbreviation || undefined,\n            birth_location: nbaPlayer.birth_city || nbaPlayer.player_birth_city \n              ? `${nbaPlayer.birth_city || nbaPlayer.player_birth_city}${nbaPlayer.birth_country || nbaPlayer.player_birth_country ? `, ${nbaPlayer.birth_country || nbaPlayer.player_birth_country}` : ''}`\n              : undefined,\n            league: 'NBA',\n            \n            // Impact score and astro influence\n            impact_score: safeParseFloat(nbaPlayer.impact_score, safeParseFloat(nbaPlayer.astro_influence_score, null)),\n            astro_influence_score: safeParseFloat(nbaPlayer.astro_influence_score, null),\n            astro_influence: safeParseFloat(nbaPlayer.astro_influence, null),\n\n            // Basic stats - try per_game first, then calculate from totals if needed\n            stats_games_played: safeParseFloat(nbaPlayer.games_played, safeParseFloat(nbaPlayer.games_started, null)),\n            stats_minutes_per_game: safeParseFloat(nbaPlayer.minutes_per_game) || \n                                  getPerGameStat(nbaPlayer.minutes_played, nbaPlayer.games_played, null),\n            \n            // Scoring stats\n            stats_points_per_game: safeParseFloat(nbaPlayer.points_per_game) || \n                                 getPerGameStat(nbaPlayer.points, nbaPlayer.games_played, null),\n            \n            // Rebounding stats\n            stats_rebounds_per_game: safeParseFloat(nbaPlayer.rebounds_per_game) ||\n                                   getPerGameStat(nbaPlayer.rebounds, nbaPlayer.games_played, null),\n            stats_offensive_rebounds_per_game: safeParseFloat(nbaPlayer.offensive_rebounds_per_game) ||\n                                            getPerGameStat(nbaPlayer.offensive_rebounds, nbaPlayer.games_played, null),\n            stats_defensive_rebounds_per_game: safeParseFloat(nbaPlayer.defensive_rebounds_per_game) ||\n                                            getPerGameStat(nbaPlayer.defensive_rebounds, nbaPlayer.games_played, null),\n            \n            // Other stats\n            stats_assists_per_game: safeParseFloat(nbaPlayer.assists_per_game) ||\n                                  getPerGameStat(nbaPlayer.assists, nbaPlayer.games_played, null),\n            stats_steals_per_game: safeParseFloat(nbaPlayer.steals_per_game) ||\n                                 getPerGameStat(nbaPlayer.steals, nbaPlayer.games_played, null),\n            stats_blocks_per_game: safeParseFloat(nbaPlayer.blocks_per_game) ||\n                                 getPerGameStat(nbaPlayer.blocks, nbaPlayer.games_played, null),\n            stats_turnovers_per_game: safeParseFloat(nbaPlayer.turnovers_per_game) ||\n                                    getPerGameStat(nbaPlayer.turnovers, nbaPlayer.games_played, null),\n            \n            // Shooting percentages\n            stats_field_goal_pct: safeParseFloat(nbaPlayer.field_goal_pct) ||\n                                getPercentage(nbaPlayer.field_goals_made, nbaPlayer.field_goals_attempted, null),\n            stats_three_point_pct: safeParseFloat(nbaPlayer.three_point_pct) ||\n                                 getPercentage(nbaPlayer.three_point_made, nbaPlayer.three_point_attempted, null),\n            stats_free_throw_pct: safeParseFloat(nbaPlayer.free_throw_pct) ||\n                                getPercentage(nbaPlayer.free_throws_made, nbaPlayer.free_throws_attempted, null),\n            \n            // Advanced stats\n            stats_plus_minus: safeParseFloat(nbaPlayer.plus_minus, null),\n            stats_double_doubles: safeParseFloat(nbaPlayer.double_doubles, null),\n            stats_triple_doubles: safeParseFloat(nbaPlayer.triple_doubles, null),\n            stats_minutes_played: safeParseFloat(nbaPlayer.minutes_played, null)\n          };\n          setPlayer(formattedPlayer);\n\n          if (formattedPlayer.birth_date && formattedPlayer.birth_location) {\n            const birthLocation: BirthLocation | undefined = formattedPlayer.birth_location ? {\n              city: formattedPlayer.birth_location.split(',')[0]?.trim(),\n              country: formattedPlayer.birth_location.split(',')[1]?.trim() || 'USA'\n            } : undefined;\n\n            try {\n              const rawAstroData = await getAstroData(formattedPlayer.birth_date, birthLocation);\n              const structuredAstroData: AstroData = {\n                sunSign: getFullAstroSignInfo(rawAstroData.planets.sun.sign as ZodiacSign),\n                moonSign: getFullAstroSignInfo(rawAstroData.planets.moon.sign as ZodiacSign),\n                ascendant: getFullAstroSignInfo(rawAstroData.ascendant as ZodiacSign),\n                interpretation: undefined,\n                chineseZodiac: undefined\n              };\n              setAstro(structuredAstroData);\n              console.log('[PlayerDetailPage] Generated astro data:', structuredAstroData);\n            } catch (astroError) {\n              console.error('Error generating astrological data:', astroError);\n            }\n          } else {\n            setAstro(null);\n          }\n        }\n      } catch (err) {\n        console.error('Error fetching player data:', err);\n        setError(`Failed to load player data: ${err instanceof Error ? err.message : 'Unknown error'}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (playerId) {\n      fetchData();\n    }\n  }, [playerId]);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-screen bg-gray-50\">\n        <span className=\"inline-block w-12 h-12 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\" aria-label=\"Loading player data\"></span>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 text-gray-800 flex flex-col items-center justify-center p-4\">\n        <div className=\"bg-white p-8 rounded-lg shadow-xl text-center\">\n          <h2 className=\"text-2xl font-bold text-red-600 mb-4\">Error</h2>\n          <p>{error}</p>\n          <a href=\"/dashboard\" className=\"mt-6 inline-block bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded transition-colors\">\n            Return to Dashboard\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  if (!player) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 text-gray-800 flex flex-col items-center justify-center p-4\">\n        <div className=\"bg-white p-8 rounded-lg shadow-xl text-center\">\n          <h2 className=\"text-2xl font-bold text-yellow-600 mb-4\">Player Not Found</h2>\n          <p>The requested player could not be found.</p>\n          <a href=\"/dashboard\" className=\"mt-6 inline-block bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded transition-colors\">\n            Return to Dashboard\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  // Diagnostic log to observe state before rendering\n  console.log('PlayerDetailPage Render State:', {\n    playerExists: !!player,\n    playerId: player?.id,\n    playerLeague: player?.league,\n    isNBAExpected: player?.league === 'NBA',\n    isLoading: loading,\n    error: error\n  });\n\n  // Return early if player data is not available yet\n  if (!player) {\n    return (\n      <div className=\"flex justify-center items-center h-screen bg-gray-50\">\n        <span className=\"inline-block w-12 h-12 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\" aria-label=\"Loading player data\"></span>\n      </div>\n    );\n  }\n\n  // Basketball specific stats are used directly in the JSX\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 text-gray-800 font-sans\">\n      <main className=\"container mx-auto px-4 py-8 flex flex-col gap-8\">\n        {/* Header Section */}\n        <PlayerHeader player={player} />\n\n        {/* Player Influence and Impact Card */}\n        <PlayerInfluenceCard player={player} astro={astro} />\n\n        {/* Performance Prediction */}\n        {astro && <PerformancePrediction player={player} astro={astro} />}\n\n        {/* Astrological Profile */}\n        {astro && <AstroProfile player={player} astro={astro} />}\n\n        {/* Player Statistics Table */}\n        <PlayerStatsTable player={player} league={player.league} />\n\n        {player.league !== 'NBA' && (\n          <section className=\"mt-8 bg-white p-6 rounded-lg shadow-md\">\n            <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800 border-b pb-3\">Basketball Statistics</h2>\n            \n            {/* Stats Summary Cards */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n              <div className=\"bg-orange-50 p-4 rounded-lg text-center border border-orange-100\">\n                <p className=\"text-sm text-orange-600 font-medium\">PPG</p>\n                <p className=\"text-2xl font-bold text-gray-800\">\n                  {player.stats_points_per_game !== null && player.stats_points_per_game !== undefined \n                    ? (typeof player.stats_points_per_game === 'number' \n                        ? player.stats_points_per_game.toFixed(1)\n                        : parseFloat(String(player.stats_points_per_game)).toFixed(1))\n                    : '0.0'}\n                </p>\n              </div>\n              <div className=\"bg-blue-50 p-4 rounded-lg text-center border border-blue-100\">\n                <p className=\"text-sm text-blue-600 font-medium\">RPG</p>\n                <p className=\"text-2xl font-bold text-gray-800\">\n                  {player.stats_rebounds_per_game !== null && player.stats_rebounds_per_game !== undefined \n                    ? (typeof player.stats_rebounds_per_game === 'number' \n                        ? player.stats_rebounds_per_game.toFixed(1)\n                        : parseFloat(String(player.stats_rebounds_per_game)).toFixed(1))\n                    : '0.0'}\n                </p>\n              </div>\n              <div className=\"bg-green-50 p-4 rounded-lg text-center border border-green-100\">\n                <p className=\"text-sm text-green-600 font-medium\">APG</p>\n                <p className=\"text-2xl font-bold text-gray-800\">\n                  {player.stats_assists_per_game !== null && player.stats_assists_per_game !== undefined \n                    ? (typeof player.stats_assists_per_game === 'number' \n                        ? player.stats_assists_per_game.toFixed(1)\n                        : parseFloat(String(player.stats_assists_per_game)).toFixed(1))\n                    : '0.0'}\n                </p>\n              </div>\n              <div className=\"bg-purple-50 p-4 rounded-lg text-center border border-purple-100\">\n                <p className=\"text-sm text-purple-600 font-medium\">FG%</p>\n                <p className=\"text-2xl font-bold text-gray-800\">\n                  {player.stats_field_goal_pct !== null && player.stats_field_goal_pct !== undefined \n                    ? (typeof player.stats_field_goal_pct === 'number' \n                        ? (player.stats_field_goal_pct * 100).toFixed(1)\n                        : (parseFloat(String(player.stats_field_goal_pct)) * 100).toFixed(1)) + '%' \n                    : '0.0%'}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* Offensive Stats */}\n              <div>\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center mr-2\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-orange-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-800\">Offensive Statistics</h3>\n                </div>\n                <div className=\"overflow-x-auto bg-white border border-gray-200 rounded-lg shadow-sm\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statistic</th>\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Value</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      <tr className=\"hover:bg-gray-50\">\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-700\">Points Per Game</td>\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700 text-right font-mono\">\n                          {player.stats_points_per_game || '0.0'}\n                        </td>\n                      </tr>\n                      <tr className=\"hover:bg-gray-50\">\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-700\">Field Goal %</td>\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700 text-right font-mono\">\n                          {player.stats_field_goal_pct ? (parseFloat(player.stats_field_goal_pct) * 100).toFixed(1) + '%' : 'N/A'}\n                        </td>\n                      </tr>\n                      <tr className=\"hover:bg-gray-50\">\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-700\">3-Point %</td>\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700 text-right font-mono\">\n                          {player.stats_three_point_pct ? (parseFloat(player.stats_three_point_pct) * 100).toFixed(1) + '%' : 'N/A'}\n                        </td>\n                      </tr>\n                      <tr className=\"hover:bg-gray-50\">\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-700\">Free Throw %</td>\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700 text-right font-mono\">\n                          {player.stats_free_throw_pct ? (parseFloat(player.stats_free_throw_pct) * 100).toFixed(1) + '%' : 'N/A'}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n\n              {/* Defensive & Other Stats */}\n              <div>\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center mr-2\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-800\">Defensive & Other Stats</h3>\n                </div>\n                <div className=\"overflow-x-auto bg-white border border-gray-200 rounded-lg shadow-sm\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statistic</th>\n                        <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Value</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      <tr className=\"hover:bg-gray-50\">\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-700\">Rebounds Per Game</td>\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700 text-right font-mono\">\n                          {player.stats_rebounds_per_game || '0.0'}\n                        </td>\n                      </tr>\n                      <tr className=\"hover:bg-gray-50\">\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-700\">Assists Per Game</td>\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700 text-right font-mono\">\n                          {player.stats_assists_per_game || '0.0'}\n                        </td>\n                      </tr>\n                      <tr className=\"hover:bg-gray-50\">\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-700\">Steals Per Game</td>\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700 text-right font-mono\">\n                          {player.stats_steals_per_game || '0.0'}\n                        </td>\n                      </tr>\n                      <tr className=\"hover:bg-gray-50\">\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-700\">Blocks Per Game</td>\n                        <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700 text-right font-mono\">\n                          {player.stats_blocks_per_game || '0.0'}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n            {/* Recent Performance Graph Placeholder */}\n            <div className=\"mt-8 p-4 bg-gray-50 rounded-lg border border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">Performance Trend</h3>\n              <div className=\"h-48 bg-white p-4 rounded border border-gray-200 flex items-center justify-center\">\n                <p className=\"text-gray-500\">Performance trend visualization will be available soon.</p>\n              </div>\n            </div>\n          </section>\n        )}\n        \n        {/* Elemental Influence Section */}\n        {astro && (\n          <section className=\"bg-white p-6 rounded-lg shadow-md mt-8\">\n            <h2 className=\"text-2xl font-bold mb-6 text-gray-800 border-b pb-3\">Elemental Influence</h2>\n            <div className=\"space-y-4\">\n              {getElementalInfluences(astro, player?.full_name?.split(' ')[0] || 'Their').map((influence) => (\n                <div key={influence.element} className=\"p-4 rounded-lg border-l-4 bg-gray-50\" style={{ borderColor: getElementColor(influence.element) }}>\n                  <div className=\"flex items-center justify-between mb-1\">\n                    <h4 className=\"font-semibold text-gray-800\">{influence.element}: {influence.percentage}%</h4>\n                    <span className=\"text-sm text-gray-500\">{influence.strength}</span>\n                  </div>\n                  <p className=\"text-gray-700 text-sm\">{influence.description}</p>\n                </div>\n              ))}\n            </div>\n          </section>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default PlayerDetailPage;\n"],"names":["PlayerHeader","player","jsxs","jsx","e","_a","n","getElementForSign","sign","calculateElementalComposition","astro","elements","elementCounts","total","sum","count","rounded","element","percentage","item","a","b","error","i","index","getElementColor","getElementStrength","getElementDescription","playerName","descriptions","strength","getElementalInfluences","getInfluenceStrength","score","getElementColorClass","PlayerInfluenceCard","elementalComposition","Fragment","CircularProgress","array","elementalSkills","moonPhases","AstroProfile","sortedElements","dominantElement","secondaryElement","birthDay","currentDate","dayOfYear","isFavorable","moonPhase","getOutlookStatement","statements","getPerformanceImpacts","impacts","getNextFavorablePeriod","moonSigns","favorableSigns","getCompatibilityText","elementToCompatibles","sunElement","compatibleSigns","impact","BigThreeAstroCards","AstroPeakDay","PerformancePrediction","PlayerStatsTable","league","formatPercentage","value","num","formatStat","decimals","header","zodiacDetailsMap","getFullAstroSignInfo","signName","details","PlayerDetailPage","teamId","playerId","useParams","useLocation","setPlayer","useState","setAstro","loading","setLoading","setError","useEffect","fetchedPlayer","getPlayerByApiId","nbaPlayer","safeParseFloat","fallback","getPerGameStat","games","totalNum","gamesNum","getPercentage","made","attempted","madeNum","attemptedNum","formattedPlayer","_b","birthLocation","_c","_d","rawAstroData","getAstroData","structuredAstroData","astroError","err","influence"],"mappings":"+NAcA,MAAMA,EAA4C,CAAC,CAAE,OAAAC,KAAa,OAE9D,OAAAC,EAAC,UAAQ,CAAA,UAAU,iFACjB,SAAA,CAAAC,EAAC,MAAI,CAAA,UAAU,+GACZ,SAAAF,EAAO,aACNE,EAAC,MAAA,CACC,IAAKF,EAAO,aACZ,IAAK,GAAGA,EAAO,SAAS,YACxB,UAAU,6BACV,QAAUG,GAAM,CAEbA,EAAE,OAA4B,IAAM,6DACvC,EACA,QAAQ,MAAA,CAAA,EAGTD,EAAA,MAAA,CAAI,UAAU,6FACZ,UAAAE,EAAAJ,EAAO,YAAP,YAAAI,EAAkB,MAAM,KAAK,IAAIC,GAAKA,EAAE,CAAC,GAAG,KAAK,GACpD,CAAA,EAEJ,EACCH,EAAA,KAAA,CAAG,UAAU,mCAAoC,WAAO,UAAU,EACnED,EAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAA,OAAA,CAAK,UAAU,iEAAiE,SAAA,CAAA,IAAED,EAAO,QAAU,KAAA,EAAM,IACzG,OAAK,CAAA,UAAU,mEAAoE,SAAAA,EAAO,UAAY,MAAM,EAC5GA,EAAO,WACNE,EAAC,QAAK,UAAU,qEACb,WAAO,SACV,CAAA,CAAA,EAEJ,EACCF,EAAO,YACLC,EAAA,IAAA,CAAE,UAAU,qBAAqB,SAAA,CAAA,SACzB,IAAI,KAAKD,EAAO,UAAU,EAAE,mBAAmB,QAAS,CAC7D,KAAM,UACN,MAAO,OACP,IAAK,SACN,CAAA,CAAA,EACH,EAEDA,EAAO,gBACLC,EAAA,IAAA,CAAE,UAAU,gBAAgB,SAAA,CAAA,SAAOD,EAAO,cAAA,CAAe,CAAA,CAAA,EAE9D,CAEJ,EC3CaM,EAAqBC,IACW,CACzC,MAAS,OACT,OAAU,QACV,OAAU,MACV,OAAU,QACV,IAAO,OACP,MAAS,QACT,MAAS,MACT,QAAW,QACX,YAAe,OACf,UAAa,QACb,SAAY,MACZ,OAAU,OACZ,GACkBA,CAAI,GAAK,QAGhBC,EAAiCC,GAA2C,CACvF,MAAMC,EAAW,CAAC,OAAQ,QAAS,MAAO,OAAO,EAC3CC,EAAwC,CAC5C,KAAQ,EACR,MAAS,EACT,IAAO,EACP,MAAS,CACX,EAGAA,EAAcL,EAAkBG,EAAM,QAAQ,IAAI,CAAC,GAAK,IACxDE,EAAcL,EAAkBG,EAAM,SAAS,IAAI,CAAC,GAAK,IACzDE,EAAcL,EAAkBG,EAAM,UAAU,IAAI,CAAC,GAAK,EAGpD,MAAAG,EAAQ,OAAO,OAAOD,CAAa,EAAE,OAAO,CAACE,EAAKC,IAAUD,EAAMC,EAAO,CAAC,EAW1EC,EAPiBL,EAAS,IAAeM,GAAA,CAC7C,MAAMC,EAAcN,EAAcK,CAAO,EAAIJ,EAAS,IAEtD,MAAO,CAAE,KAAMI,EAAS,IAAKC,CAAW,CAAA,CACzC,EAG8B,IAAaC,IAAA,CAC1C,KAAMA,EAAK,KACX,MAAO,KAAK,MAAMA,EAAK,GAAG,EAC1B,KAAM,KAAK,MAAMA,EAAK,GAAG,EAAIA,EAAK,GAAA,EAClC,EAGFH,EAAQ,KAAK,CAACI,EAAGC,IAAMD,EAAE,KAAOC,EAAE,IAAI,EAMtC,MAAMC,EAAQ,IAHON,EAAQ,OAAO,CAACF,EAAKK,IAASL,EAAMK,EAAK,MAAO,CAAC,EAItE,QAASI,EAAI,EAAGA,EAAI,KAAK,IAAID,CAAK,EAAGC,IAAK,CACxC,MAAMC,EAAQF,EAAQ,EAAIC,EAAIP,EAAQ,OAAS,EAAIO,EACnDP,EAAQQ,CAAK,EAAE,OAASF,EAAQ,EAAI,EAAI,EAAA,CAInC,OAAAN,EAAQ,IAAaG,IAAA,CAC1B,KAAMA,EAAK,KACX,WAAYA,EAAK,KAAA,EACjB,CACJ,EAEaM,EAAmBR,IACS,CACrC,KAAQ,UACR,MAAS,UACT,IAAO,UACP,MAAS,SACX,GACcA,CAAO,GAAK,UAuBfS,EAAsBR,GAC7BA,GAAc,GAAW,mBACzBA,GAAc,GAAW,qBACtB,oBAGIS,EAAwB,CAACV,EAAiBC,EAAoBU,IAA+B,OACxG,MAAMC,EAAuD,CAC3D,KAAQ,CACN,OAAQ,GAAGD,CAAU,kCAAkCV,CAAU,uFAAuFU,CAAU,+CAClK,SAAU,6BAA6BV,CAAU,YAAYU,CAAU,8FACvE,QAAS,sBAAsBV,CAAU,OAAOU,CAAU,4EAC5D,EACA,MAAS,CACP,OAAQ,4BAA4BV,CAAU,YAAYU,CAAU,mIACpE,SAAU,8BAA8BV,CAAU,YAAYU,CAAU,oFACxE,QAAS,uBAAuBV,CAAU,OAAOU,CAAU,yFAC7D,EACA,IAAO,CACL,OAAQ,4BAA4BV,CAAU,YAAYU,CAAU,+GACpE,SAAU,0BAA0BV,CAAU,YAAYU,CAAU,qEACpE,QAAS,qBAAqBV,CAAU,OAAOU,CAAU,+EAC3D,EACA,MAAS,CACP,OAAQ,4BAA4BV,CAAU,YAAYU,CAAU,mIACpE,SAAU,8BAA8BV,CAAU,YAAYU,CAAU,+DACxE,QAAS,kBAAkBV,CAAU,eAAeU,CAAU,8DAAA,CAElE,EAEME,EAAWZ,GAAc,GAAK,SAAWA,GAAc,GAAK,WAAa,UACxE,QAAAb,EAAAwB,EAAaZ,CAAO,IAApB,YAAAZ,EAAwByB,KAAa,GAAGF,CAAU,MAAMX,CAAO,iBAAiBa,CAAQ,GACjG,EAUaC,EAAyB,CAACrB,EAAkBkB,IACtCnB,EAA8BC,CAAK,EAEpC,IAAgBO,IAAA,CAC9B,QAASA,EAAQ,KACjB,WAAYA,EAAQ,WACpB,SAAUS,EAAmBT,EAAQ,UAAU,EAC/C,YAAaU,EAAsBV,EAAQ,KAAMA,EAAQ,WAAYW,CAAU,CAAA,EAC/E,ECnJEI,EAAwBC,GACxBA,GAAS,GAAW,mBACpBA,GAAS,GAAW,wBACpBA,GAAS,GAAW,sBACpBA,GAAS,GAAW,sBACjB,qBAIHC,EAAwBjB,GAA4B,CACxD,OAAQA,EAAS,CACf,IAAK,OAAe,MAAA,aACpB,IAAK,QAAgB,MAAA,gBACrB,IAAK,MAAc,MAAA,cACnB,IAAK,QAAgB,MAAA,cACrB,QAAgB,MAAA,aAAA,CAEpB,EAGMQ,EAAmBR,GAA4B,CACnD,OAAQA,EAAS,CACf,IAAK,OAAe,MAAA,UACpB,IAAK,QAAgB,MAAA,UACrB,IAAK,MAAc,MAAA,UACnB,IAAK,QAAgB,MAAA,UACrB,QAAgB,MAAA,SAAA,CAEpB,EAEMkB,EAA0D,CAAC,CAAE,OAAAlC,EAAQ,MAAAS,KAAY,OAErF,MAAM0B,EAAuB1B,EAAQD,EAA8BC,CAAK,EAAI,CAAC,EAE3E,OAAAR,EAAC,UAAQ,CAAA,UAAU,wCAEjB,SAAA,CAACA,EAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,0DAA0D,SAAsB,yBAAA,EAC9FA,EAAC,MAAI,CAAA,UAAU,6BACZ,SAAAF,EAAO,kBAAoB,QAAaA,EAAO,kBAAoB,KAEhEC,EAAAmC,EAAA,CAAA,SAAA,CAAAnC,EAACoC,EAAA,CACC,MAAOrC,EAAO,gBACd,KAAM,IACN,YAAa,GACb,gBAAiB,GAEjB,SAAA,CAACC,EAAA,OAAA,CAAK,UAAU,qBACb,SAAA,CAAK,KAAA,MAAMD,EAAO,eAAe,EAAE,GAAA,EACtC,EACCE,EAAA,OAAA,CAAK,UAAU,6BAA6B,SAAe,iBAAA,CAAA,CAAA,CAAA,CAC9D,EACAD,EAAC,IAAE,CAAA,UAAU,kDACV,SAAA,EAAAG,EAAAJ,EAAO,YAAP,YAAAI,EAAkB,MAAM,KAAK,GAAG,yBAAuB2B,EAAqB/B,EAAO,eAAe,EAAE,mCAAA,CACvG,CAAA,CAAA,CACF,CAAA,EAECE,EAAA,MAAA,CAAI,UAAU,mEACb,SAACA,EAAA,IAAA,CAAE,UAAU,kBAAkB,SAAyC,2CAAA,CAAA,CAAA,CAC1E,CAEJ,CAAA,CAAA,EACF,EAGAD,EAAC,MAAI,CAAA,UAAU,+DACb,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,4CAA4C,SAAa,gBAAA,EACvED,EAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACA,EAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACC,EAAA,IAAA,CAAE,UAAU,UAAU,SAAe,kBAAA,EACrCF,EAAO,eAAiB,QAAaA,EAAO,eAAiB,KAC5DE,EAAC,OAAK,CAAA,UAAU,kCACb,SAAA,OAAOF,EAAO,cAAiB,SAAWA,EAAO,aAAa,QAAQ,CAAC,EAAIA,EAAO,YACrF,CAAA,EAECE,EAAA,OAAA,CAAK,UAAU,gBAAgB,SAAG,KAAA,CAAA,CAAA,EAEvC,EACCF,EAAO,eAAiB,QAAaA,EAAO,eAAiB,MAC5DE,EAAC,MAAI,CAAA,UAAU,6CACb,SAAAA,EAAC,MAAA,CACC,UAAU,iCACV,MAAO,CACL,MAAO,GAAG,KAAK,KACZ,OAAOF,EAAO,cAAiB,SAC5BA,EAAO,aACP,WAAWA,EAAO,YAAY,GAAK,GAAK,GAC5C,GAAA,CACD,GAAA,CACH,CAAA,EAEJ,EAEDE,EAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,yHAAA,EAGCiC,EAAqB,OAAS,GAC5BlC,EAAA,MAAA,CAAI,UAAU,qCACb,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,2CAA2C,SAAqB,wBAAA,EAC7EA,EAAA,MAAA,CAAI,UAAU,qEACb,SAACA,EAAA,MAAA,CAAI,UAAU,wBACZ,SAAqBiC,EAAA,IAAI,CAACnB,EAASO,EAAOe,IACzCrC,EAAC,MAAA,CAEC,UAAW,mBAAmBgC,EAAqBjB,EAAQ,IAAI,CAAC,GAChE,MAAO,CACL,MAAO,GAAGA,EAAQ,UAAU,IAC5B,WAAYO,IAAU,EAAI,IAAM,OAChC,OAAQe,EAAM,OAASf,CACzB,EAEA,SAAA,CAACrB,EAAA,MAAA,CAAI,UAAU,gEAAiE,CAAA,EAC/Ec,EAAQ,WAAa,IACnBf,EAAA,OAAA,CAAK,UAAU,qGACb,SAAA,CAAQe,EAAA,WAAW,KAAGA,EAAQ,IAAA,CACjC,CAAA,CAAA,CAAA,EAZGA,EAAQ,IAAA,CAehB,EACH,CACF,CAAA,EAGAd,EAAC,MAAI,CAAA,UAAU,6CACZ,SAAAiC,EAAqB,IACpBnB,GAAAf,EAAC,MAAuB,CAAA,UAAU,oBAChC,SAAA,CAAAC,EAAC,MAAA,CACC,UAAU,oCACV,MAAO,CAAE,gBAAiBsB,EAAgBR,EAAQ,IAAI,CAAE,CAAA,CAC1D,EACAf,EAAC,OAAK,CAAA,UAAU,oCACb,SAAA,CAAQe,EAAA,KAAK,IAACf,EAAC,OAAK,CAAA,UAAU,gBAAiB,SAAA,CAAQe,EAAA,WAAW,GAAA,CAAC,CAAA,CAAA,CACtE,CAAA,CAAA,GAPQA,EAAQ,IAQlB,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,ECjJMR,EAAiCC,GACpB,CAAC,OAAQ,QAAS,MAAO,OAAO,EACjC,IAAgBO,IAAA,CAC9B,KAAMA,EACN,WAAY,KAAK,MAAM,KAAK,OAAO,EAAI,GAAK,EAAE,CAAA,EAC9C,EAIEuB,EAAkB,CACtB,KAAQ,CAAC,gBAAiB,0BAA2B,oBAAqB,mBAAmB,EAC7F,MAAS,CAAC,wBAAyB,mBAAoB,uBAAwB,WAAW,EAC1F,IAAO,CAAC,oBAAqB,YAAa,yBAA0B,oBAAoB,EACxF,MAAS,CAAC,eAAgB,qBAAsB,yBAA0B,gBAAgB,CAC5F,EAGMC,EAAa,CACjB,WAAY,kBAAmB,gBAAiB,iBAChD,YAAa,iBAAkB,eAAgB,iBACjD,EAEMC,EAA4C,CAAC,CAAE,OAAAzC,EAAQ,MAAAS,KAAY,CAGvE,MAAMiC,EAAiB,CAAC,GADKlC,EAAmC,CACjB,EAAE,KAAK,CAACW,EAAGC,IAAMA,EAAE,WAAaD,EAAE,UAAU,EACrFwB,EAAkBD,EAAe,CAAC,EAAE,KACpCE,EAAmBF,EAAe,CAAC,EAAE,KAIrCG,EADkB,IAAI,KAAK7C,EAAO,YAAc,IAAI,IAAM,EAC/B,QAAQ,EACnC8C,MAAkB,KAClBC,EAAY,KAAK,OAAOD,EAAY,QAAA,EAAY,IAAI,KAAKA,EAAY,cAAe,EAAG,CAAC,EAAE,WAAa,KAAQ,EAG/GE,GADsBH,EAAWE,GAAa,IAAO,IACnB,GAClCE,EAAYT,EAAWO,EAAY,CAAC,EAGpCG,EAAsB,IAAM,CAChC,GAAIF,EAAa,CACf,MAAMG,EAAa,CACjB,gDAAgDnD,EAAO,SAAS,MAAMuC,EAAgBI,CAAe,EAAE,CAAC,CAAC,QAAQJ,EAAgBK,CAAgB,EAAE,CAAC,CAAC,IACrJ,GAAGnC,EAAM,QAAQ,IAAI,mCAAmCT,EAAO,SAAS,cAAc2C,EAAgB,YAAA,CAAa,uBACnH,eAAeM,CAAS,2BAA2BjD,EAAO,SAAS,MAAMS,EAAM,SAAS,IAAI,qDAC5F,GAAGT,EAAO,SAAS,MAAM2C,CAAe,+EAC1C,EACO,OAAAQ,EAAWJ,EAAYI,EAAW,MAAM,CAAA,KAC1C,CACL,MAAMA,EAAa,CACjB,8CAA8CnD,EAAO,SAAS,cAAc2C,EAAgB,YAAa,CAAA,sBACzG,GAAG3C,EAAO,SAAS,MAAMS,EAAM,QAAQ,IAAI,wEAC3C,eAAewC,CAAS,+BAA+BjD,EAAO,SAAS,MAAMS,EAAM,SAAS,IAAI,cAChG,+BAA+BT,EAAO,SAAS,oDAAoD2C,CAAe,mBACpH,EACO,OAAAQ,EAAWJ,EAAYI,EAAW,MAAM,CAAA,CAEnD,EAGMC,EAAwB,IAAM,CAClC,MAAMC,EAAU,CAAC,EAGjB,OAAIV,IAAoB,QACdU,EAAA,KAAKL,EACT,sDAAsD,CAAC,cAAe,cAAc,EAAED,EAAY,CAAC,CAAC,YACpG,qEAAqE,EACjEM,EAAA,KAAKL,EACT,kEACA,yDAAyD,GAEtDL,IAAoB,SACnBU,EAAA,KAAKL,EACT,sEACA,mEAAmE,EAC/DK,EAAA,KAAKL,EACT,wDACA,gEAAgE,GAE7DL,IAAoB,OACnBU,EAAA,KAAKL,EACT,gEACA,gEAAgE,EAC5DK,EAAA,KAAKL,EACT,qDACA,6DAA6D,GAE1DL,IAAoB,UACnBU,EAAA,KAAKL,EACT,8DACA,iDAAiD,EAC7CK,EAAA,KAAKL,EACT,sDACA,oDAAoD,GAI1DK,EAAQ,KAAKL,EACT,GAAGvC,EAAM,SAAS,IAAI,+CAA+C,CAAC,cAAe,YAAa,cAAe,YAAY,EAAEsC,EAAY,CAAC,CAAC,GAC7I,GAAGtC,EAAM,SAAS,IAAI,sCAAsC,CAAC,cAAe,YAAa,cAAe,YAAY,EAAEsC,EAAY,CAAC,CAAC,EAAE,EAEnIM,CACT,EAGMC,EAAyB,IAAM,CACnC,MAAMC,EAAY,CAAC,QAAS,SAAU,SAAU,SAAU,MAAO,QAAS,QAAS,UAAW,cAAe,YAAa,WAAY,QAAQ,EACxIC,EAAiB,CACrB/C,EAAM,QAAQ,KACdA,EAAM,SAAS,KACf8C,GAAWA,EAAU,QAAQ9C,EAAM,QAAQ,IAAI,EAAI,GAAK,EAAE,EAC1D8C,GAAWA,EAAU,QAAQ9C,EAAM,QAAQ,IAAI,EAAI,GAAK,EAAE,CAC5D,EAGO,MAAA,WADqB+C,EAAeT,EAAYS,EAAe,MAAM,CACvC,KAAK,CAAC,QAAS,MAAO,MAAM,EAAET,EAAY,CAAC,CAAC,IAAI,CAAC,OAAQ,OAAQ,SAAU,YAAa,SAAS,EAAEA,EAAY,CAAC,CAAC,cACxJ,EAGMU,EAAuB,IAAM,CACjC,MAAMC,EAAiD,CACrD,KAAM,CAAC,QAAS,MAAO,aAAa,EACpC,MAAO,CAAC,SAAU,QAAS,WAAW,EACtC,IAAK,CAAC,SAAU,QAAS,UAAU,EACnC,MAAO,CAAC,SAAU,UAAW,QAAQ,CACvC,EACMC,EAAalD,EAAM,QAAQ,QAC3BmD,EAAkBF,EAAqBC,CAAU,GAAK,CAAC,EAC7D,MAAO,GAAG3D,EAAO,SAAS,qFAAqF4D,EAAgB,KAAK,IAAI,CAAC,SAC3I,EAEA,OAGI3D,EAAAmC,EAAA,CAAA,SAAA,CAAAlC,EAAC,OAAI,UAAU,yCACb,SAACD,EAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAC,MAAA,CACC,UAAW,sCACT8C,EAAc,eAAiB,eACjC,EAAA,CACD,EACD/C,EAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAC,EAAC,KAAG,CAAA,UAAU,2CACX,SAAA8C,EAAc,oBAAsB,qBACvC,EACC9C,EAAA,IAAA,CAAE,UAAU,qBAAsB,aAAsB,EAEzDD,EAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,yCAAyC,SAAoC,uCAAA,IAC1F,KAAG,CAAA,UAAU,2BACX,SAAAkD,EAAA,EAAwB,IAAI,CAACS,EAAQtC,MACnC,KAAe,CAAA,UAAU,wBAAyB,SAA1CsC,CAAA,EAAAtC,CAAiD,CAC3D,CACH,CAAA,CAAA,EACF,IAEC,MAAI,CAAA,UAAU,qCACb,SAACtB,EAAA,IAAA,CAAE,UAAU,sCAAsC,SAAA,CAAA,0BACzBqD,EAAuB,CAAA,CAAA,CACjD,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAGArD,EAAC,UAAQ,CAAA,UAAU,oCACjB,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,0DAA0D,SAAoB,uBAAA,EAC5FA,EAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAC4D,EAAmB,CAAA,MAAArD,EAAc,WAAYT,EAAO,WAAa,EAAA,CAAI,CACxE,CAAA,EAEAC,EAAC,MAAI,CAAA,UAAU,4DACb,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,qCAAqC,SAA2B,8BAAA,EAC9EA,EAAC6D,EAAA,CACC,OAAA/D,EACA,MAAAS,CAAA,CAAA,CACF,EACF,IAEC,MAAI,CAAA,UAAU,OACb,SAACR,EAAA,MAAA,CAAI,UAAU,uDACb,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,qCAAqC,SAAa,gBAAA,EAC/DA,EAAA,IAAA,CAAE,UAAU,gBACV,YACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EC3MM8D,GAA8D,CAAC,CAAE,OAAAhE,EAAQ,MAAAS,KAAY,CAUzF,MAAMiC,EAAiB,CAAC,GARK,CAC3B,CAAE,KAAM,OAAQ,WAAY,EAAG,EAC/B,CAAE,KAAM,QAAS,WAAY,EAAG,EAChC,CAAE,KAAM,MAAO,WAAY,EAAG,EAC9B,CAAE,KAAM,QAAS,WAAY,EAAG,CAClC,CAG+C,EAAE,KAAK,CAACvB,EAAGC,IAAMA,EAAE,WAAaD,EAAE,UAAU,EACrFwB,EAAkBD,EAAe,CAAC,EAAE,KACpCE,EAAmBF,EAAe,CAAC,EAAE,KAIrCG,EADkB,IAAI,KAAK7C,EAAO,YAAc,IAAI,IAAM,EAC/B,QAAQ,EACnC8C,MAAkB,KAClBC,EAAY,KAAK,OAAOD,EAAY,QAAA,EAAY,IAAI,KAAKA,EAAY,cAAe,EAAG,CAAC,EAAE,WAAa,KAAQ,EAG/GE,GADsBH,EAAWE,GAAa,IAAO,IACnB,GAGlCE,EAAY,CAAC,WAAY,kBAAmB,gBAAiB,iBAChD,YAAa,iBAAkB,eAAgB,iBAAA,EAAmBF,EAAY,CAAC,EAG5FR,EAAkB,CACtB,KAAQ,CAAC,UAAW,oBAAqB,cAAe,mBAAmB,EAC3E,MAAS,CAAC,wBAAyB,aAAc,aAAc,WAAW,EAC1E,IAAO,CAAC,eAAgB,WAAY,gBAAiB,eAAe,EACpE,MAAS,CAAC,qBAAsB,iBAAkB,eAAgB,mBAAmB,CACvF,EAGMW,EAAsB,IAAM,CAChC,GAAIF,EAAa,CACf,MAAMG,EAAa,CACjB,gDAAgDnD,EAAO,SAAS,MAAMuC,EAAgBI,CAAe,EAAE,CAAC,CAAC,QAAQJ,EAAgBK,CAAgB,EAAE,CAAC,CAAC,IACrJ,GAAGnC,EAAM,QAAQ,IAAI,mCAAmCT,EAAO,SAAS,cAAc2C,EAAgB,YAAA,CAAa,uBACnH,eAAeM,CAAS,2BAA2BjD,EAAO,SAAS,MAAMS,EAAM,SAAS,IAAI,qDAC5F,GAAGT,EAAO,SAAS,MAAM2C,CAAe,+EAC1C,EACO,OAAAQ,EAAWJ,EAAYI,EAAW,MAAM,CAAA,KAC1C,CACL,MAAMA,EAAa,CACjB,8CAA8CnD,EAAO,SAAS,cAAc2C,EAAgB,YAAa,CAAA,sBACzG,GAAG3C,EAAO,SAAS,MAAMS,EAAM,QAAQ,IAAI,wEAC3C,eAAewC,CAAS,+BAA+BjD,EAAO,SAAS,MAAMS,EAAM,SAAS,IAAI,cAChG,+BAA+BT,EAAO,SAAS,oDAAoD2C,CAAe,mBACpH,EACO,OAAAQ,EAAWJ,EAAYI,EAAW,MAAM,CAAA,CAEnD,EAGMC,EAAwB,IAAM,CAClC,MAAMC,EAAU,CAAC,EAGjB,OAAIV,IAAoB,QACdU,EAAA,KAAKL,EACT,+EACA,oDAAoD,EAChDK,EAAA,KAAKL,EACT,oFACA,qDAAqD,GAElDL,IAAoB,SACnBU,EAAA,KAAKL,EACT,4DACA,yDAAyD,EACrDK,EAAA,KAAKL,EACT,0DACA,gDAAgD,GAE7CL,IAAoB,OACnBU,EAAA,KAAKL,EACT,+CACA,2CAA2C,EACvCK,EAAA,KAAKL,EACT,6CACA,mDAAmD,GAEhDL,IAAoB,UACnBU,EAAA,KAAKL,EACT,+CACA,mCAAmC,EAC/BK,EAAA,KAAKL,EACT,yDACA,kDAAkD,GAIxDK,EAAQ,KAAKL,EACT,GAAGvC,EAAM,SAAS,IAAI,+CAA+C,CAAC,cAAe,kBAAmB,aAAc,YAAY,EAAEsC,EAAY,CAAC,CAAC,GAClJ,GAAGtC,EAAM,SAAS,IAAI,sCAAsC,CAAC,cAAe,kBAAmB,aAAc,YAAY,EAAEsC,EAAY,CAAC,CAAC,EAAE,EAExIM,CACT,EAGMC,EAAyB,IAAM,CACnC,MAAMC,EAAY,CAAC,QAAS,SAAU,SAAU,SAAU,MAAO,QAAS,QAAS,UAAW,cAAe,YAAa,WAAY,QAAQ,EACxIC,EAAiB,CACrB/C,EAAM,QAAQ,KACdA,EAAM,SAAS,KACf8C,GAAWA,EAAU,QAAQ9C,EAAM,QAAQ,IAAI,EAAI,GAAK,EAAE,EAC1D8C,GAAWA,EAAU,QAAQ9C,EAAM,QAAQ,IAAI,EAAI,GAAK,EAAE,CAC5D,EAGA,MAAO,WADqB+C,EAAeT,EAAYS,EAAe,MAAM,CACvC,KAAK,CAAC,QAAS,MAAO,MAAM,EAAET,EAAY,CAAC,CAAC,IAAI,CAAC,WAAY,WAAY,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,SAAS,EAAED,EAAY,SAAU,CAAA,CAAC,cACzO,EAEA,SACG,MAAI,CAAA,UAAU,yCACb,SAAC7C,EAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAC,MAAA,CACC,UAAW,sCACT8C,EAAc,eAAiB,eACjC,EAAA,CACD,EACD/C,EAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAC,EAAC,KAAG,CAAA,UAAU,2CACX,SAAA8C,EAAc,oBAAsB,qBACvC,EACC9C,EAAA,IAAA,CAAE,UAAU,qBAAsB,aAAsB,EAEzDD,EAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,yCAAyC,SAAoC,uCAAA,IAC1F,KAAG,CAAA,UAAU,2BACX,SAAAkD,EAAA,EAAwB,IAAI,CAACS,EAAQtC,MACnC,KAAe,CAAA,UAAU,wBAAyB,SAA1CsC,CAAA,EAAAtC,CAAiD,CAC3D,CACH,CAAA,CAAA,EACF,IAEC,MAAI,CAAA,UAAU,qCACb,SAACtB,EAAA,IAAA,CAAE,UAAU,sCAAsC,SAAA,CAAA,0BACzBqD,EAAuB,CAAA,CAAA,CACjD,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,ECpJMW,GAAoD,CAAC,CAAE,OAAAjE,EAAQ,OAAAkE,EAAS,SAAY,CAElF,MAAAC,EAAoBC,GAAsD,CAC9E,GAAIA,GAAU,KAAoC,MAAA,MAE9C,IAAAC,EAAM,OAAOD,GAAU,SAAWA,EAAQ,WAAW,OAAOA,CAAK,CAAC,EAClE,GAAA,MAAMC,CAAG,EAAU,MAAA,MAGvB,GAAIA,EAAM,GAAKA,EAAM,EAAUA,GAAA,YAEtBA,EAAM,GAAKA,EAAM,IAAY,MAAA,MAE/B,OAAAA,EAAI,QAAQ,CAAC,EAAI,GAC1B,EAGMC,EAAa,CAACF,EAA2CG,EAAmB,IAAc,CAC9F,GAAIH,GAAU,KAAoC,MAAA,MAE5C,MAAAC,EAAM,OAAOD,GAAU,SAAWA,EAAQ,WAAW,OAAOA,CAAK,CAAC,EACpE,OAAA,MAAMC,CAAG,EAAU,MAEhBE,IAAa,EAAIF,EAAI,iBAAmBA,EAAI,QAAQE,CAAQ,CACrE,EA0DE,OAAAtE,EAAC,UAAQ,CAAA,UAAU,yCACjB,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,kEAAkE,SAEhF,wBAAA,EACCgE,IAAW,MA1DbhE,EAAA,MAAA,CAAI,UAAU,kBACb,SAAAD,EAAC,QAAM,CAAA,UAAU,4CACf,SAAA,CAAAC,EAAC,QACC,CAAA,SAAAA,EAAC,KAAG,CAAA,UAAU,cACX,SAAA,CAAC,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EAAE,IAAKsE,GACzEtE,EAAA,KAAA,CAAgB,UAAU,YACxB,SADMsE,CAAA,EAAAA,CAET,CACD,CACH,CAAA,EACF,EACAtE,EAAC,QACC,CAAA,SAAAD,EAAC,KACC,CAAA,SAAA,CAAAC,EAAC,MAAG,UAAU,YAAa,WAAWF,EAAO,mBAAoB,CAAC,EAAE,IACnE,KAAG,CAAA,UAAU,YAAa,SAAWsE,EAAAtE,EAAO,sBAAsB,EAAE,IACpE,KAAG,CAAA,UAAU,YAAa,SAAWsE,EAAAtE,EAAO,qBAAqB,EAAE,IACnE,KAAG,CAAA,UAAU,YAAa,SAAWsE,EAAAtE,EAAO,uBAAuB,EAAE,IACrE,KAAG,CAAA,UAAU,YAAa,SAAWsE,EAAAtE,EAAO,sBAAsB,EAAE,IACpE,KAAG,CAAA,UAAU,YAAa,SAAWsE,EAAAtE,EAAO,qBAAqB,EAAE,IACnE,KAAG,CAAA,UAAU,YAAa,SAAWsE,EAAAtE,EAAO,qBAAqB,EAAE,IACnE,KAAG,CAAA,UAAU,YAAa,SAAiBmE,EAAAnE,EAAO,oBAAoB,EAAE,IACxE,KAAG,CAAA,UAAU,YAAa,SAAiBmE,EAAAnE,EAAO,qBAAqB,EAAE,IACzE,KAAG,CAAA,UAAU,YAAa,SAAiBmE,EAAAnE,EAAO,oBAAoB,CAAE,CAAA,CAAA,CAAA,CAC3E,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAKCE,EAAA,MAAA,CAAI,UAAU,kBACb,SAAAD,EAAC,QAAM,CAAA,UAAU,4CACf,SAAA,CAAAC,EAAC,QACC,CAAA,SAAAA,EAAC,KAAG,CAAA,UAAU,cACX,SAAA,CAAC,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EAAE,IAAKsE,GACzEtE,EAAA,KAAA,CAAgB,UAAU,YACxB,SADMsE,CAAA,EAAAA,CAET,CACD,CACH,CAAA,EACF,EACCtE,EAAA,QAAA,CACC,SAACA,EAAA,KAAA,CACC,SAACA,EAAA,KAAA,CAAG,QAAS,GAAI,UAAU,sCAAsC,SAEjE,yCAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAQ4D,EAC5D,CAEJ,ECpEMuE,GAA8E,CAClF,MAAO,CAAE,QAAS,OAAQ,SAAU,WAAY,SAAU,CAAC,YAAa,YAAY,CAAE,EACtF,OAAQ,CAAE,QAAS,QAAS,SAAU,QAAS,SAAU,CAAC,WAAY,SAAS,CAAE,EACjF,OAAQ,CAAE,QAAS,MAAO,SAAU,UAAW,SAAU,CAAC,gBAAiB,SAAS,CAAE,EACtF,OAAQ,CAAE,QAAS,QAAS,SAAU,WAAY,SAAU,CAAC,YAAa,YAAY,CAAE,EACxF,IAAK,CAAE,QAAS,OAAQ,SAAU,QAAS,SAAU,CAAC,cAAe,YAAY,CAAE,EACnF,MAAO,CAAE,QAAS,QAAS,SAAU,UAAW,SAAU,CAAC,aAAc,WAAW,CAAE,EACtF,MAAO,CAAE,QAAS,MAAO,SAAU,WAAY,SAAU,CAAC,aAAc,YAAY,CAAE,EACtF,QAAS,CAAE,QAAS,QAAS,SAAU,QAAS,SAAU,CAAC,UAAW,gBAAgB,CAAE,EACxF,YAAa,CAAE,QAAS,OAAQ,SAAU,UAAW,SAAU,CAAC,cAAe,YAAY,CAAE,EAC7F,UAAW,CAAE,QAAS,QAAS,SAAU,WAAY,SAAU,CAAC,cAAe,WAAW,CAAE,EAC5F,SAAU,CAAE,QAAS,MAAO,SAAU,QAAS,SAAU,CAAC,aAAc,cAAc,CAAE,EACxF,OAAQ,CAAE,QAAS,QAAS,SAAU,UAAW,SAAU,CAAC,gBAAiB,aAAa,CAAE,CAC9F,EAEMC,EAAwBC,GAAwC,CAC9D,MAAAC,EAAUH,GAAiBE,CAAQ,GAAK,CAAE,QAAS,UAAW,SAAU,UAAW,SAAU,EAAG,EAC/F,MAAA,CACL,KAAMA,EACN,GAAGC,CACL,CACF,EAEMC,GAA6B,IAAM,OACvC,KAAM,CAAE,OAAAC,EAAQ,SAAAC,CAAS,EAAIC,EAAgD,EAC5DC,EAAY,EAC7B,KAAM,CAACjF,EAAQkF,CAAS,EAAIC,EAAAA,SAAwB,IAAI,EAClD,CAAC1E,EAAO2E,CAAQ,EAAID,EAAAA,SAA2B,IAAI,EACnD,CAACE,EAASC,CAAU,EAAIH,EAAAA,SAAkB,EAAI,EAC9C,CAAC9D,EAAOkE,CAAQ,EAAIJ,EAAAA,SAAwB,IAAI,EAgKtD,OA9JAK,EAAAA,UAAU,IAAM,CAyJVT,IAxJc,SAAY,aAC5BO,EAAW,EAAI,EACfC,EAAS,IAAI,EAET,GAAA,CACF,GAAI,CAACR,EAAU,CACbQ,EAAS,wBAAwB,EACjCD,EAAW,EAAK,EAChB,MAAA,CAGM,QAAA,IAAI,mDAAmDP,CAAQ,EAAE,EACzE,MAAMU,EAAgB,MAAMC,EAAiBX,EAAU,KAAK,EAG5D,GAFQ,QAAA,IAAI,0CAA2CU,CAAa,EAEhE,CAACA,EACHF,EAAS,mBAAmB,EAC5BL,EAAU,IAAI,MACT,CACL,MAAMS,EAAYF,EACV,QAAA,IAAI,mBAAoBE,CAAS,EACzC,QAAQ,IAAI,oBAAqBA,EAAU,aAAc,QAAS,OAAOA,EAAU,YAAY,EAC/F,QAAQ,IAAI,gBAAiB,CAC3B,gBAAiBA,EAAU,gBAC3B,kBAAmBA,EAAU,kBAC7B,iBAAkBA,EAAU,iBAC5B,sBAAuBA,EAAU,sBACjC,wBAAyBA,EAAU,wBACnC,uBAAwBA,EAAU,sBAAA,CACnC,EAED,MAAMC,EAAiB,CAACxB,EAA2CyB,EAA0B,OAAwB,CACnH,GAAIzB,GAAU,KAAoC,OAAAyB,EAC5C,MAAAxB,EAAM,OAAOD,GAAU,SAAW,WAAWA,CAAK,EAAI,OAAOA,CAAK,EACjE,OAAA,MAAMC,CAAG,EAAIwB,EAAWxB,CACjC,EAGMyB,EAAiB,CAAClF,EACFmF,EACAF,EAA0B,OAAwB,CAChE,MAAAG,EAAWJ,EAAehF,EAAO,IAAI,EACrCqF,EAAWL,EAAeG,EAAO,CAAC,EACxC,OAAIC,IAAa,MAAQC,IAAa,MAAQA,IAAa,EAAUJ,EAC9DG,EAAWC,CACpB,EAGMC,EAAgB,CAACC,EACHC,EACAP,EAA0B,OAAwB,CAC9D,MAAAQ,EAAUT,EAAeO,EAAM,CAAC,EAChCG,EAAeV,EAAeQ,EAAW,CAAC,EAC5C,OAAAE,IAAiB,EAAUT,EACxBQ,EAAUC,CACnB,EAGMC,EAA0B,CAC9B,KAAInG,EAAAuF,EAAU,KAAV,YAAAvF,EAAc,aAAc,GAChC,UAAWuF,EAAU,sBAAsBa,EAAAb,EAAU,KAAV,YAAAa,EAAc,aAAc,GACvE,UAAW,GAAGb,EAAU,YAAc,EAAE,IAAIA,EAAU,WAAa,EAAE,GAAG,KAAK,EAC7E,SAAUA,EAAU,kBAAoB,MACxC,aAAcA,EAAU,WAAaA,EAAU,2BAA6B,OAC5E,WAAYA,EAAU,YAAcA,EAAU,mBAAqB,OACnE,OAAQA,EAAU,eAAiBA,EAAU,sBAAwB,OACrE,UAAWA,EAAU,mBAAqBA,EAAU,kCAAoC,OACxF,eAAgBA,EAAU,YAAcA,EAAU,kBAC9C,GAAGA,EAAU,YAAcA,EAAU,iBAAiB,GAAGA,EAAU,eAAiBA,EAAU,qBAAuB,KAAKA,EAAU,eAAiBA,EAAU,oBAAoB,GAAK,EAAE,GAC1L,OACJ,OAAQ,MAGR,aAAcC,EAAeD,EAAU,aAAcC,EAAeD,EAAU,sBAAuB,IAAI,CAAC,EAC1G,sBAAuBC,EAAeD,EAAU,sBAAuB,IAAI,EAC3E,gBAAiBC,EAAeD,EAAU,gBAAiB,IAAI,EAG/D,mBAAoBC,EAAeD,EAAU,aAAcC,EAAeD,EAAU,cAAe,IAAI,CAAC,EACxG,uBAAwBC,EAAeD,EAAU,gBAAgB,GAC3CG,EAAeH,EAAU,eAAgBA,EAAU,aAAc,IAAI,EAG3F,sBAAuBC,EAAeD,EAAU,eAAe,GAC1CG,EAAeH,EAAU,OAAQA,EAAU,aAAc,IAAI,EAGlF,wBAAyBC,EAAeD,EAAU,iBAAiB,GAC5CG,EAAeH,EAAU,SAAUA,EAAU,aAAc,IAAI,EACtF,kCAAmCC,EAAeD,EAAU,2BAA2B,GACvDG,EAAeH,EAAU,mBAAoBA,EAAU,aAAc,IAAI,EACzG,kCAAmCC,EAAeD,EAAU,2BAA2B,GACvDG,EAAeH,EAAU,mBAAoBA,EAAU,aAAc,IAAI,EAGzG,uBAAwBC,EAAeD,EAAU,gBAAgB,GAC3CG,EAAeH,EAAU,QAASA,EAAU,aAAc,IAAI,EACpF,sBAAuBC,EAAeD,EAAU,eAAe,GAC1CG,EAAeH,EAAU,OAAQA,EAAU,aAAc,IAAI,EAClF,sBAAuBC,EAAeD,EAAU,eAAe,GAC1CG,EAAeH,EAAU,OAAQA,EAAU,aAAc,IAAI,EAClF,yBAA0BC,EAAeD,EAAU,kBAAkB,GAC7CG,EAAeH,EAAU,UAAWA,EAAU,aAAc,IAAI,EAGxF,qBAAsBC,EAAeD,EAAU,cAAc,GACzCO,EAAcP,EAAU,iBAAkBA,EAAU,sBAAuB,IAAI,EACnG,sBAAuBC,EAAeD,EAAU,eAAe,GAC1CO,EAAcP,EAAU,iBAAkBA,EAAU,sBAAuB,IAAI,EACpG,qBAAsBC,EAAeD,EAAU,cAAc,GACzCO,EAAcP,EAAU,iBAAkBA,EAAU,sBAAuB,IAAI,EAGnG,iBAAkBC,EAAeD,EAAU,WAAY,IAAI,EAC3D,qBAAsBC,EAAeD,EAAU,eAAgB,IAAI,EACnE,qBAAsBC,EAAeD,EAAU,eAAgB,IAAI,EACnE,qBAAsBC,EAAeD,EAAU,eAAgB,IAAI,CACrE,EAGI,GAFJT,EAAUqB,CAAe,EAErBA,EAAgB,YAAcA,EAAgB,eAAgB,CAC1D,MAAAE,EAA2CF,EAAgB,eAAiB,CAChF,MAAMG,EAAAH,EAAgB,eAAe,MAAM,GAAG,EAAE,CAAC,IAA3C,YAAAG,EAA8C,OACpD,UAASC,EAAAJ,EAAgB,eAAe,MAAM,GAAG,EAAE,CAAC,IAA3C,YAAAI,EAA8C,SAAU,KAC/D,EAAA,OAEA,GAAA,CACF,MAAMC,EAAe,MAAMC,EAAaN,EAAgB,WAAYE,CAAa,EAC3EK,EAAiC,CACrC,QAASpC,EAAqBkC,EAAa,QAAQ,IAAI,IAAkB,EACzE,SAAUlC,EAAqBkC,EAAa,QAAQ,KAAK,IAAkB,EAC3E,UAAWlC,EAAqBkC,EAAa,SAAuB,EACpE,eAAgB,OAChB,cAAe,MACjB,EACAxB,EAAS0B,CAAmB,EACpB,QAAA,IAAI,2CAA4CA,CAAmB,QACpEC,EAAY,CACX,QAAA,MAAM,sCAAuCA,CAAU,CAAA,CACjE,MAEA3B,EAAS,IAAI,CACf,QAEK4B,EAAK,CACJ,QAAA,MAAM,8BAA+BA,CAAG,EAChDzB,EAAS,+BAA+ByB,aAAe,MAAQA,EAAI,QAAU,eAAe,EAAE,CAAA,QAC9F,CACA1B,EAAW,EAAK,CAAA,CAEpB,GAGY,CACZ,EACC,CAACP,CAAQ,CAAC,EAETM,EAEAnF,EAAC,MAAI,CAAA,UAAU,uDACb,SAAAA,EAAC,QAAK,UAAU,iGAAiG,aAAW,qBAAA,CAAsB,CACpJ,CAAA,EAIAmB,IAEC,MAAI,CAAA,UAAU,sFACb,SAACpB,EAAA,MAAA,CAAI,UAAU,gDACb,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,uCAAuC,SAAK,QAAA,EAC1DA,EAAC,KAAG,SAAMmB,CAAA,CAAA,IACT,IAAE,CAAA,KAAK,aAAa,UAAU,+GAA+G,SAE9I,qBAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAICrB,GAeL,QAAQ,IAAI,iCAAkC,CAC5C,aAAc,CAAC,CAACA,EAChB,SAAUA,GAAA,YAAAA,EAAQ,GAClB,aAAcA,GAAA,YAAAA,EAAQ,OACtB,eAAeA,GAAA,YAAAA,EAAQ,UAAW,MAClC,UAAWqF,EACX,MAAAhE,CAAA,CACD,EAGIrB,IAWF,MAAI,CAAA,UAAU,kDACb,SAACC,EAAA,OAAA,CAAK,UAAU,kDAEd,SAAA,CAAAC,EAACH,GAAa,OAAAC,EAAgB,EAG9BE,EAACgC,EAAoB,CAAA,OAAAlC,EAAgB,MAAAS,CAAc,CAAA,EAGlDA,GAASP,EAAC8D,GAAsB,CAAA,OAAAhE,EAAgB,MAAAS,CAAc,CAAA,EAG9DA,GAASP,EAACuC,EAAa,CAAA,OAAAzC,EAAgB,MAAAS,CAAc,CAAA,EAGrDP,EAAA+D,GAAA,CAAiB,OAAAjE,EAAgB,OAAQA,EAAO,OAAQ,EAExDA,EAAO,SAAW,OAChBC,EAAA,UAAA,CAAQ,UAAU,yCACjB,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,kEAAkE,SAAqB,wBAAA,EAGrGD,EAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAACA,EAAA,MAAA,CAAI,UAAU,mEACb,SAAA,CAACC,EAAA,IAAA,CAAE,UAAU,sCAAsC,SAAG,MAAA,EACrDA,EAAA,IAAA,CAAE,UAAU,mCACV,SAAOF,EAAA,wBAA0B,MAAQA,EAAO,wBAA0B,OACtE,OAAOA,EAAO,uBAA0B,SACrCA,EAAO,sBAAsB,QAAQ,CAAC,EACtC,WAAW,OAAOA,EAAO,qBAAqB,CAAC,EAAE,QAAQ,CAAC,EAC9D,KACN,CAAA,CAAA,EACF,EACAC,EAAC,MAAI,CAAA,UAAU,+DACb,SAAA,CAACC,EAAA,IAAA,CAAE,UAAU,oCAAoC,SAAG,MAAA,EACnDA,EAAA,IAAA,CAAE,UAAU,mCACV,SAAOF,EAAA,0BAA4B,MAAQA,EAAO,0BAA4B,OAC1E,OAAOA,EAAO,yBAA4B,SACvCA,EAAO,wBAAwB,QAAQ,CAAC,EACxC,WAAW,OAAOA,EAAO,uBAAuB,CAAC,EAAE,QAAQ,CAAC,EAChE,KACN,CAAA,CAAA,EACF,EACAC,EAAC,MAAI,CAAA,UAAU,iEACb,SAAA,CAACC,EAAA,IAAA,CAAE,UAAU,qCAAqC,SAAG,MAAA,EACpDA,EAAA,IAAA,CAAE,UAAU,mCACV,SAAOF,EAAA,yBAA2B,MAAQA,EAAO,yBAA2B,OACxE,OAAOA,EAAO,wBAA2B,SACtCA,EAAO,uBAAuB,QAAQ,CAAC,EACvC,WAAW,OAAOA,EAAO,sBAAsB,CAAC,EAAE,QAAQ,CAAC,EAC/D,KACN,CAAA,CAAA,EACF,EACAC,EAAC,MAAI,CAAA,UAAU,mEACb,SAAA,CAACC,EAAA,IAAA,CAAE,UAAU,sCAAsC,SAAG,MAAA,EACrDA,EAAA,IAAA,CAAE,UAAU,mCACV,SAAOF,EAAA,uBAAyB,MAAQA,EAAO,uBAAyB,QACpE,OAAOA,EAAO,sBAAyB,UACnCA,EAAO,qBAAuB,KAAK,QAAQ,CAAC,GAC5C,WAAW,OAAOA,EAAO,oBAAoB,CAAC,EAAI,KAAK,QAAQ,CAAC,GAAK,IAC1E,MACN,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAC,EAAC,MAAI,CAAA,UAAU,wCAEb,SAAA,CAAAA,EAAC,MACC,CAAA,SAAA,CAACA,EAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACC,EAAA,MAAA,CAAI,UAAU,2EACb,SAACA,EAAA,MAAA,CAAI,MAAM,6BAA6B,UAAU,0BAA0B,KAAK,OAAO,QAAQ,YAAY,OAAO,eACjH,SAAAA,EAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,4BAA6B,CAAA,CACpG,CAAA,EACF,EACCA,EAAA,KAAA,CAAG,UAAU,kCAAkC,SAAoB,sBAAA,CAAA,CAAA,EACtE,IACC,MAAI,CAAA,UAAU,uEACb,SAACD,EAAA,QAAA,CAAM,UAAU,sCACf,SAAA,CAAAC,EAAC,QAAM,CAAA,UAAU,aACf,SAAAD,EAAC,KACC,CAAA,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,iFAAiF,SAAS,YAAA,EACvGA,EAAA,KAAA,CAAG,UAAU,kFAAkF,SAAK,OAAA,CAAA,CAAA,CAAA,CACvG,CACF,CAAA,EACAD,EAAC,QAAM,CAAA,UAAU,oCACf,SAAA,CAACA,EAAA,KAAA,CAAG,UAAU,mBACZ,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,gEAAgE,SAAe,kBAAA,IAC5F,KAAG,CAAA,UAAU,yEACX,SAAAF,EAAO,uBAAyB,KACnC,CAAA,CAAA,EACF,EACAC,EAAC,KAAG,CAAA,UAAU,mBACZ,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,gEAAgE,SAAY,eAAA,EACzFA,EAAA,KAAA,CAAG,UAAU,yEACX,WAAO,sBAAwB,WAAWF,EAAO,oBAAoB,EAAI,KAAK,QAAQ,CAAC,EAAI,IAAM,KACpG,CAAA,CAAA,EACF,EACAC,EAAC,KAAG,CAAA,UAAU,mBACZ,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,gEAAgE,SAAS,YAAA,EACtFA,EAAA,KAAA,CAAG,UAAU,yEACX,WAAO,uBAAyB,WAAWF,EAAO,qBAAqB,EAAI,KAAK,QAAQ,CAAC,EAAI,IAAM,KACtG,CAAA,CAAA,EACF,EACAC,EAAC,KAAG,CAAA,UAAU,mBACZ,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,gEAAgE,SAAY,eAAA,EACzFA,EAAA,KAAA,CAAG,UAAU,yEACX,WAAO,sBAAwB,WAAWF,EAAO,oBAAoB,EAAI,KAAK,QAAQ,CAAC,EAAI,IAAM,KACpG,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,IAGC,MACC,CAAA,SAAA,CAACC,EAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACC,EAAA,MAAA,CAAI,UAAU,0EACb,SAACA,EAAA,MAAA,CAAI,MAAM,6BAA6B,UAAU,yBAAyB,KAAK,OAAO,QAAQ,YAAY,OAAO,eAChH,SAAAA,EAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,oLAAqL,CAAA,CAC5P,CAAA,EACF,EACCA,EAAA,KAAA,CAAG,UAAU,kCAAkC,SAAuB,yBAAA,CAAA,CAAA,EACzE,IACC,MAAI,CAAA,UAAU,uEACb,SAACD,EAAA,QAAA,CAAM,UAAU,sCACf,SAAA,CAAAC,EAAC,QAAM,CAAA,UAAU,aACf,SAAAD,EAAC,KACC,CAAA,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,iFAAiF,SAAS,YAAA,EACvGA,EAAA,KAAA,CAAG,UAAU,kFAAkF,SAAK,OAAA,CAAA,CAAA,CAAA,CACvG,CACF,CAAA,EACAD,EAAC,QAAM,CAAA,UAAU,oCACf,SAAA,CAACA,EAAA,KAAA,CAAG,UAAU,mBACZ,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,gEAAgE,SAAiB,oBAAA,IAC9F,KAAG,CAAA,UAAU,yEACX,SAAAF,EAAO,yBAA2B,KACrC,CAAA,CAAA,EACF,EACAC,EAAC,KAAG,CAAA,UAAU,mBACZ,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,gEAAgE,SAAgB,mBAAA,IAC7F,KAAG,CAAA,UAAU,yEACX,SAAAF,EAAO,wBAA0B,KACpC,CAAA,CAAA,EACF,EACAC,EAAC,KAAG,CAAA,UAAU,mBACZ,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,gEAAgE,SAAe,kBAAA,IAC5F,KAAG,CAAA,UAAU,yEACX,SAAAF,EAAO,uBAAyB,KACnC,CAAA,CAAA,EACF,EACAC,EAAC,KAAG,CAAA,UAAU,mBACZ,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,gEAAgE,SAAe,kBAAA,IAC5F,KAAG,CAAA,UAAU,yEACX,SAAAF,EAAO,uBAAyB,KACnC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAC,EAAC,MAAI,CAAA,UAAU,wDACb,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,2CAA2C,SAAiB,oBAAA,EAC1EA,EAAC,OAAI,UAAU,oFACb,WAAC,IAAE,CAAA,UAAU,gBAAgB,SAAA,yDAAuD,CAAA,CACtF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAIDO,GACCR,EAAC,UAAQ,CAAA,UAAU,yCACjB,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,sDAAsD,SAAmB,sBAAA,EACtFA,EAAA,MAAA,CAAI,UAAU,YACZ,SAAuB4B,EAAArB,IAAOL,EAAAJ,GAAA,YAAAA,EAAQ,YAAR,YAAAI,EAAmB,MAAM,KAAK,KAAM,OAAO,EAAE,IAAK6G,GAC9EhH,EAAA,MAAA,CAA4B,UAAU,uCAAuC,MAAO,CAAE,YAAauB,EAAgByF,EAAU,OAAO,GACnI,SAAA,CAAChH,EAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAA,KAAA,CAAG,UAAU,8BAA+B,SAAA,CAAUgH,EAAA,QAAQ,KAAGA,EAAU,WAAW,GAAA,EAAC,EACvF/G,EAAA,OAAA,CAAK,UAAU,wBAAyB,WAAU,QAAS,CAAA,CAAA,EAC9D,EACCA,EAAA,IAAA,CAAE,UAAU,wBAAyB,WAAU,WAAY,CAAA,CAAA,GALpD+G,EAAU,OAMpB,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,EAvME/G,EAAC,MAAI,CAAA,UAAU,uDACb,SAAAA,EAAC,QAAK,UAAU,iGAAiG,aAAW,qBAAA,CAAsB,CACpJ,CAAA,KA3BC,MAAI,CAAA,UAAU,sFACb,SAACD,EAAA,MAAA,CAAI,UAAU,gDACb,SAAA,CAACC,EAAA,KAAA,CAAG,UAAU,0CAA0C,SAAgB,mBAAA,EACxEA,EAAC,KAAE,SAAwC,0CAAA,CAAA,IAC1C,IAAE,CAAA,KAAK,aAAa,UAAU,+GAA+G,SAE9I,qBAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CA0NN"}