{"version":3,"file":"GameCard-Cu4jeEUe.js","sources":["../../src/components/GameCard.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Link } from 'react-router-dom';\nimport type { Game, Team } from '@/types';\n\n// Type definitions for color handling\ntype ColorValue = string | { hex?: string; r?: number; g?: number; b?: number } | undefined;\ntype RGB = { r: number; g: number; b: number };\n\n// Extended Team type with required properties for GameCard\ninterface GameTeam extends Omit<Team, 'abbreviation' | 'sport'> {\n  primary_color?: string;\n  secondary_color?: string;\n  logo_url?: string;\n  logo?: string;\n  city?: string;\n  name: string;\n  record?: string;\n  // These are required in the base Team interface but we make them optional here\n  // to avoid conflicts with DEFAULT_TEAM\n  abbreviation: string;\n  sport: string;\n}\n\ninterface GameCardProps {\n  game: Partial<Game> & { id: string; start_time?: string };\n  homeTeam?: Partial<GameTeam>;\n  awayTeam?: Partial<GameTeam>;\n  defaultLogo?: string;\n}\n\n// Default team data when team is not provided\nconst DEFAULT_TEAM: GameTeam = {\n  id: 'unknown',\n  name: 'Team',\n  abbreviation: 'TBD',\n  sport: 'basketball_nba',\n  record: '0-0',\n  primary_color: '#1E40AF',\n  secondary_color: '#FFFFFF',\n  logo_url: '',\n};\n\n// Converts various color formats to RGB\nconst parseColor = (color: ColorValue): RGB | null => {\n  if (!color) return null;\n\n  // Handle hex colors (string starting with #)\n  if (typeof color === 'string' && color.startsWith('#')) {\n    const hex = color.replace('#', '');\n    const bigint = parseInt(hex, 16);\n    return {\n      r: (bigint >> 16) & 255,\n      g: (bigint >> 8) & 255,\n      b: bigint & 255\n    };\n  }\n\n  // Handle RGB object\n  if (typeof color === 'object' && 'r' in color && 'g' in color && 'b' in color) {\n    return {\n      r: color.r ?? 0,\n      g: color.g ?? 0,\n      b: color.b ?? 0\n    };\n  }\n\n  // Handle hex in object\n  if (typeof color === 'object' && 'hex' in color && color.hex) {\n    return parseColor(color.hex);\n  }\n\n  return null;\n};\n\n// Calculates brightness of a color (0-255)\nconst getBrightness = (r: number, g: number, b: number): number => {\n  return (r * 299 + g * 587 + b * 114) / 1000;\n};\n\n// Determines if text should be light or dark based on background color\nconst getTextColor = (bgColor: ColorValue): string => {\n  const rgb = parseColor(bgColor);\n  if (!rgb) return '#FFFFFF';\n  \n  const brightness = getBrightness(rgb.r, rgb.g, rgb.b);\n  return brightness > 128 ? '#000000' : '#FFFFFF';\n};\n\n// Generates a box shadow based on team color\nconst getBoxShadow = (color: ColorValue): string => {\n  const defaultShadow = '0 4px 12px -2px rgba(30, 64, 175, 0.2)';\n  const rgb = parseColor(color);\n  \n  if (!rgb) return defaultShadow;\n  \n  return `0 4px 12px -2px rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.2)`;\n};\n\n// Helper function to format game time\nconst formatGameTime = (dateString?: string): string => {\n  try {\n    if (!dateString) return 'TBD';\n    \n    // Handle malformed date strings with duplicated ISO strings\n    if (dateString.length > 30 && dateString.includes('T') && dateString.lastIndexOf('T') > 20) {\n      dateString = dateString.substring(0, 25);\n    }\n    \n    const date = new Date(dateString);\n    \n    // Validate the parsed date\n    if (isNaN(date.getTime())) {\n      throw new Error(`Invalid date: ${dateString}`);\n    }\n    \n    return date.toLocaleTimeString([], { \n      hour: '2-digit', \n      minute: '2-digit',\n      timeZone: 'UTC' \n    });\n  } catch (e) {\n    console.error('Error formatting date:', e, 'Input:', dateString);\n    return 'TBD';\n  }\n};\n\nconst GameCard: React.FC<GameCardProps> = ({\n  game,\n  homeTeam: propHomeTeam = {},\n  awayTeam: propAwayTeam = {},\n  defaultLogo = ''\n}) => {\n  // Ensure we have valid team objects with defaults\n  const homeTeam: GameTeam = { ...DEFAULT_TEAM, ...propHomeTeam };\n  const awayTeam: GameTeam = { ...DEFAULT_TEAM, ...propAwayTeam };\n  \n  // Set default logo if not provided\n  if (!homeTeam.logo_url && !homeTeam.logo) homeTeam.logo_url = defaultLogo;\n  if (!awayTeam.logo_url && !awayTeam.logo) awayTeam.logo_url = defaultLogo;\n\n  // Create display names with fallbacks\n  const homeTeamName = homeTeam.city \n    ? `${homeTeam.city} ${homeTeam.name}`.trim()\n    : homeTeam.name;\n    \n  const awayTeamName = awayTeam.city \n    ? `${awayTeam.city} ${awayTeam.name}`.trim()\n    : awayTeam.name;\n    \n  // Get box shadow colors with fallbacks\n  const homeBoxShadow = getBoxShadow(homeTeam.primary_color);\n  const awayBoxShadow = getBoxShadow(awayTeam.primary_color);\n\n  // Get team colors with fallbacks\n  const homeTeamColor = homeTeam.primary_color || DEFAULT_TEAM.primary_color!;\n  const awayTeamColor = awayTeam.primary_color || DEFAULT_TEAM.primary_color!;\n  const homeTextColor = getTextColor(homeTeamColor);\n  const awayTextColor = getTextColor(awayTeamColor);\n  \n  // Format game time\n  const gameTime = formatGameTime(game.start_time);\n  \n  // Debug log for team data (only in development)\n  if (process.env.NODE_ENV === 'development') {\n    console.debug('GameCard rendering:', {\n      gameId: game?.id || 'unknown',\n      homeTeam: {\n        id: homeTeam.id,\n        name: homeTeam.name,\n        logo: homeTeam.logo_url || homeTeam.logo,\n        colors: {\n          primary: homeTeam.primary_color,\n          secondary: homeTeam.secondary_color,\n          text: homeTextColor\n        }\n      },\n      awayTeam: {\n        id: awayTeam.id,\n        name: awayTeam.name,\n        logo: awayTeam.logo_url || awayTeam.logo,\n        colors: {\n          primary: awayTeam.primary_color,\n          secondary: awayTeam.secondary_color,\n          text: awayTextColor\n        }\n      },\n      gameTime: (() => {\n        try {\n          return game?.start_time ? new Date(game.start_time).toISOString() : 'TBD';\n        } catch (e) {\n          console.error('Invalid date format:', game?.start_time, e);\n          return 'TBD';\n        }\n      })()\n    });\n  }\n\n  return (\n    <Link to={`/game/${game.id}`} className=\"block\">\n      <Card className=\"overflow-hidden transition-all duration-200 hover:shadow-lg dark:hover:shadow-gray-800/30 h-full flex flex-col\">\n        <CardContent className=\"p-0 flex-1 flex flex-col\">\n          <div className=\"p-2 sm:p-3 md:p-4 flex-1 flex flex-col\">\n            {/* Home Team */}\n            {homeTeam ? (\n              <div \n                className=\"flex justify-between items-center mb-2 sm:mb-3\"\n              >\n                <div className=\"flex items-center min-w-0\">\n                  <div \n                    className=\"w-6 h-6 sm:w-7 sm:h-7 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center mr-1.5 sm:mr-2 flex-shrink-0\"\n                  >\n                    <img \n                      src={homeTeam.logo_url || defaultLogo} \n                      alt={homeTeam.name} \n                      className=\"w-4 h-4 sm:w-5 sm:h-5 object-contain\"\n                      onError={(e) => {\n                        const target = e.target as HTMLImageElement;\n                        target.src = defaultLogo;\n                      }}\n                    />\n                  </div>\n                  <div className=\"min-w-0\">\n                    <h3 className=\"font-medium text-xs sm:text-sm truncate text-gray-900 dark:text-white\">\n                      {homeTeam.name}\n                    </h3>\n                    <p className=\"text-[10px] sm:text-xs text-gray-500\">{homeTeam.record || '0-0'}</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center gap-1 sm:gap-2\">\n                  <span className=\"px-1.5 py-0.5 sm:px-2 sm:py-1 text-[10px] sm:text-xs font-medium rounded-full bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-200 whitespace-nowrap\">\n                    Home\n                  </span>\n                  {game.home_score !== undefined && (\n                    <span className=\"text-base sm:text-lg font-bold text-gray-900 dark:text-white\">\n                      {game.home_score}\n                    </span>\n                  )}\n                </div>\n              </div>\n            ) : (\n              <div className=\"p-3 rounded-lg bg-gray-100 dark:bg-gray-800/50 border border-gray-200/50 dark:border-gray-700/30 text-center text-gray-500\">\n                Home team information not available\n              </div>\n            )}\n\n            {/* VS Divider */}\n            <div className=\"relative flex justify-center\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-100 dark:border-gray-800\"></div>\n              </div>\n              <div className=\"relative px-2 bg-white dark:bg-gray-900 text-xs font-medium text-gray-500 dark:text-gray-400\">\n                VS\n              </div>\n            </div>\n\n            {/* Away Team */}\n            {awayTeam ? (\n              <div \n                className=\"flex justify-between items-center mt-2 sm:mt-3\"\n              >\n                <div className=\"flex items-center min-w-0\">\n                  <div \n                    className=\"w-6 h-6 sm:w-7 sm:h-7 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center mr-1.5 sm:mr-2 flex-shrink-0\"\n                  >\n                    <img \n                      src={awayTeam.logo_url || defaultLogo} \n                      alt={awayTeam.name} \n                      className=\"w-4 h-4 sm:w-5 sm:h-5 object-contain\"\n                      onError={(e) => {\n                        const target = e.target as HTMLImageElement;\n                        target.src = defaultLogo;\n                      }}\n                    />\n                  </div>\n                  <div className=\"min-w-0\">\n                    <h3 className=\"font-medium text-xs sm:text-sm truncate text-gray-900 dark:text-white\">\n                      {awayTeam.name}\n                    </h3>\n                    <p className=\"text-[10px] sm:text-xs text-gray-500\">{awayTeam.record || '0-0'}</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center gap-1 sm:gap-2\">\n                  <span className=\"px-1.5 py-0.5 sm:px-2 sm:py-1 text-[10px] sm:text-xs font-medium rounded-full bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-200 whitespace-nowrap\">\n                    Away\n                  </span>\n                  {game.away_score !== undefined && (\n                    <span className=\"text-base sm:text-lg font-bold text-gray-900 dark:text-white\">\n                      {game.away_score}\n                    </span>\n                  )}\n                </div>\n              </div>\n            ) : (\n              <div className=\"p-3 rounded-lg bg-gray-100 dark:bg-gray-800/50 border border-gray-200/50 dark:border-gray-700/30 text-center text-gray-500\">\n                Away team information not available\n              </div>\n            )}\n            {/* Game Info */}\n            <div className=\"mt-2 sm:mt-3 pt-2 sm:pt-3 border-t border-gray-100 dark:border-gray-800\">\n              <div className=\"flex justify-between items-center text-[10px] sm:text-xs text-gray-500 dark:text-gray-400\">\n                <span>Start</span>\n                <span className=\"font-medium\">{formatGameTime(game.start_time)}</span>\n              </div>\n              \n              {/* Game Status */}\n              <div className=\"mt-2 sm:mt-3 pt-2 sm:pt-3 border-t border-gray-100 dark:border-gray-800\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-[10px] sm:text-xs text-gray-500 dark:text-gray-400\">Status</span>\n                  <span className=\"font-medium text-green-600 dark:text-green-400 text-[10px] sm:text-xs\">\n                    {game.status === 'scheduled' ? 'Upcoming' : \n                     game.status === 'in_progress' ? 'Live' : \n                     game.status === 'final' ? 'Final' : \n                     game.status?.replace('_', ' ').toLowerCase() || 'Scheduled'}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </Link>\n  );\n};\n\n// Prop type validation - using any type for game prop to avoid TypeScript conflicts\n// with the complex Game type from @/types\nGameCard.propTypes = {\n  game: PropTypes.any.isRequired, // eslint-disable-line @typescript-eslint/no-explicit-any\n  homeTeam: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    city: PropTypes.string,\n    logo_url: PropTypes.string,\n    logo: PropTypes.string,\n    primary_color: PropTypes.string,\n    secondary_color: PropTypes.string,\n    record: PropTypes.string,\n    abbreviation: PropTypes.string,\n    sport: PropTypes.string,\n  }),\n  awayTeam: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    city: PropTypes.string,\n    logo_url: PropTypes.string,\n    logo: PropTypes.string,\n    primary_color: PropTypes.string,\n    secondary_color: PropTypes.string,\n    record: PropTypes.string,\n    abbreviation: PropTypes.string,\n    sport: PropTypes.string,\n  }),\n  defaultLogo: PropTypes.string,\n};\n\n// Default props\nGameCard.defaultProps = {\n  defaultLogo: '',\n  homeTeam: {\n    abbreviation: 'TBD',\n    sport: 'basketball_nba',\n    name: 'Team',\n    id: 'unknown',\n  },\n  awayTeam: {\n    abbreviation: 'TBD',\n    sport: 'basketball_nba',\n    name: 'Team',\n    id: 'unknown',\n  },\n};\n\nexport default React.memo(GameCard);\n"],"names":["DEFAULT_TEAM","parseColor","color","hex","bigint","getBrightness","r","g","b","getTextColor","bgColor","rgb","getBoxShadow","defaultShadow","formatGameTime","dateString","date","e","GameCard","game","propHomeTeam","propAwayTeam","defaultLogo","homeTeam","awayTeam","homeTeamColor","awayTeamColor","jsx","Link","Card","CardContent","jsxs","target","_a","PropTypes","GameCard$1","React"],"mappings":"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"}