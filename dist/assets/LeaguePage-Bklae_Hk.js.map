{"version":3,"mappings":"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","names":["House","createLucideIcon","Settings","sports","SportNavigation","className","isHeader","location","useLocation","isDashboard","jsx","sport","isActive","jsxs","Link","e","MobileBottomNav","isTeamsPage","isGamesPage","isProfile","Home","Calendar","Users","DashboardLayout","children","searchQuery","setSearchQuery","handleSearch","useSearch","LEAGUE_ID_MAP","LEAGUE_NAMES","LeaguePage","leagueIdParam","useParams","leagueId","dbLeagueId","teams","setTeams","useState","upcomingGames","setUpcomingGames","loading","setLoading","error","setError","retryCount","setRetryCount","useEffect","loadData","teamsResult","nbaTeams","__vitePreload","fetchNbaTeams","nbaErr","supabase","upcomingGamesResult","transformedTeams","team","transformedTeam","mappedGames","dbGame","sportKeyValue","_a","_b","_c","_d","err","handleRetry","prev","Skeleton","i","Alert","AlertDescription","Button","motion","Card","game","idx","homeTeam","t","awayTeam","toGameCardTeam","GameCard","CardContent","Badge"],"ignoreList":[0,1],"sources":["../../node_modules/lucide-react/dist/esm/icons/house.js","../../node_modules/lucide-react/dist/esm/icons/settings.js","../../src/components/navigation/SportNavigation.tsx","../../src/components/navigation/MobileBottomNav.tsx","../../src/components/layout/DashboardLayout.tsx","../../src/pages/LeaguePage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst House = createLucideIcon(\"House\", [\n  [\"path\", { d: \"M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8\", key: \"5wwlr5\" }],\n  [\n    \"path\",\n    {\n      d: \"M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\",\n      key: \"1d0kgt\"\n    }\n  ]\n]);\n\nexport { House as default };\n//# sourceMappingURL=house.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Settings = createLucideIcon(\"Settings\", [\n  [\n    \"path\",\n    {\n      d: \"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\",\n      key: \"1qme2f\"\n    }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"3\", key: \"1v7zrd\" }]\n]);\n\nexport { Settings as default };\n//# sourceMappingURL=settings.js.map\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Sport } from '@/types';\n\ninterface SportNavigationProps {\n  className?: string;\n  isHeader?: boolean;\n}\n\nconst sports: { id: Sport; name: string; icon: string; comingSoon?: boolean }[] = [\n  { id: 'nba', name: 'NBA', icon: '🏀' },\n  { id: 'mlb', name: 'MLB', icon: '⚾' },\n  { id: 'nfl', name: 'NFL', icon: '🏈', comingSoon: true },\n  { id: 'boxing', name: 'Boxing', icon: '🥊', comingSoon: true },\n  { id: 'soccer', name: 'Soccer', icon: '⚽', comingSoon: true },\n  { id: 'ncaa', name: 'NCAA FB', icon: '🏈', comingSoon: true },\n  { id: 'nhl', name: 'NHL', icon: '🏒', comingSoon: true },\n];\n\nconst SportNavigation: React.FC<SportNavigationProps> = ({ className = '', isHeader = false }) => {\n  const location = useLocation();\n  const isDashboard = location.pathname === '/dashboard';\n\n  return (\n    <nav className={`${className} ${isHeader ? 'hidden md:flex' : ''}`}>\n      <ul className={`flex ${isHeader ? 'space-x-6' : 'flex-wrap justify-center gap-4'}`}>\n        {sports.map((sport) => {\n          const isActive = isDashboard && new URLSearchParams(location.search).get('sport') === sport.id;\n          \n          return (\n            <li key={sport.id}>\n              <Link\n                to={`/dashboard?sport=${sport.id}`}\n                className={`relative flex items-center space-x-2 px-3 py-2 rounded-md transition-colors ${\n                  isActive\n                    ? 'bg-primary text-primary-foreground font-medium'\n                    : 'text-foreground/70 hover:bg-accent hover:text-accent-foreground'\n                } ${sport.comingSoon ? 'opacity-60' : ''}`}\n                onClick={(e) => {\n                  if (sport.comingSoon) {\n                    e.preventDefault();\n                  }\n                }}\n              >\n                <span className=\"text-lg\">{sport.icon}</span>\n                {isHeader && (\n                  <div className=\"flex items-center\">\n                    <span>{sport.name}</span>\n                    {sport.comingSoon && (\n                      <span className=\"ml-1.5 text-[10px] bg-amber-100 text-amber-800 px-1.5 py-0.5 rounded-full\">\n                        Soon\n                      </span>\n                    )}\n                  </div>\n                )}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport default SportNavigation;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Home, Calendar, Users, Settings } from 'lucide-react';\n\nconst MobileBottomNav: React.FC = () => {\n  const location = useLocation();\n  const isDashboard = location.pathname === '/dashboard';\n  const isTeamsPage = location.pathname === '/teams';\n  const isGamesPage = location.pathname.includes('/upcoming-games');\n  const isProfile = location.pathname.includes('/profile');\n\n  return (\n    <div className=\"fixed bottom-0 left-0 right-0 bg-background border-t border-border z-40 md:hidden\">\n      <nav className=\"flex items-center justify-around h-16\">\n        <Link \n          to=\"/dashboard\" \n          className={`flex flex-col items-center justify-center w-full h-full ${isDashboard ? 'text-primary' : 'text-muted-foreground'}`}\n        >\n          <Home className={`h-5 w-5 ${isDashboard ? 'text-primary' : ''}`} />\n          <span className=\"text-xs mt-1\">Home</span>\n        </Link>\n        \n        <Link \n          to=\"/upcoming-games\" \n          className={`flex flex-col items-center justify-center w-full h-full ${isGamesPage ? 'text-primary' : 'text-muted-foreground'}`}\n        >\n          <Calendar className={`h-5 w-5 ${isGamesPage ? 'text-primary' : ''}`} />\n          <span className=\"text-xs mt-1\">Games</span>\n        </Link>\n        \n        <Link \n          to=\"/teams\" \n          className={`flex flex-col items-center justify-center w-full h-full ${isTeamsPage ? 'text-primary' : 'text-muted-foreground'}`}\n        >\n          <Users className={`h-5 w-5 ${isTeamsPage ? 'text-primary' : ''}`} />\n          <span className=\"text-xs mt-1\">Teams</span>\n        </Link>\n        \n        <Link \n          to=\"/profile\" \n          className={`flex flex-col items-center justify-center w-full h-full ${isProfile ? 'text-primary' : 'text-muted-foreground'}`}\n        >\n          <Settings className={`h-5 w-5 ${isProfile ? 'text-primary' : ''}`} />\n          <span className=\"text-xs mt-1\">Profile</span>\n        </Link>\n      </nav>\n    </div>\n  );\n};\n\nexport default MobileBottomNav;\n","import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Search, CalendarDays } from \"lucide-react\";\nimport { useSearch } from \"@/context/SearchContext\";\nimport SportNavigation from \"@/components/navigation/SportNavigation\";\nimport MobileNav from \"@/components/navigation/MobileNav\";\nimport MobileBottomNav from \"@/components/navigation/MobileBottomNav\";\nimport { Link } from \"react-router-dom\";\n\ninterface DashboardLayoutProps {\n  children: React.ReactNode;\n}\n\nconst DashboardLayout: React.FC<DashboardLayoutProps> = ({ children }) => {\n  const { searchQuery, setSearchQuery, handleSearch } = useSearch();\n\n  const handleSearchSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (searchQuery.trim()) {\n      handleSearch(searchQuery);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleClearSearch = () => {\n    setSearchQuery(\"\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white flex flex-col\">\n      {/* Main Content */}\n      <main className=\"flex-1 container py-4 md:py-6 mt-16 bg-white\">\n        {children}\n      </main>\n\n      {/* Mobile Bottom Navigation */}\n      <MobileBottomNav />\n\n      {/* Footer */}\n      <footer className=\"border-t border-gray-200 py-6 md:py-8 bg-white mt-8\">\n        <div className=\"container\">\n          {/* Sports Navigation */}\n          <div className=\"mb-6 hidden md:block\">\n            <h3 className=\"text-center text-lg font-semibold mb-4\">\n              Popular Sports\n            </h3>\n            <SportNavigation />\n          </div>\n\n          <div className=\"pt-4 md:pt-6 border-t border-gray-200 text-center text-sm text-gray-600\">\n            <p>\n              © {new Date().getFullYear()} Venusian Labs. All rights reserved.\n            </p>\n            <p className=\"text-xs mt-1\">\n              Powered by The Odds API, Sports Game Odds API, and Swiss Ephemeris\n            </p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Calendar, Users, Trophy, ChevronRight, Info, Star } from 'lucide-react';\nimport { supabase } from '@/lib/supabase';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { motion } from 'framer-motion';\nimport DashboardLayout from '@/components/layout/DashboardLayout';\nimport { Separator } from '@/components/ui/separator';\nimport GameCard from '@/components/GameCard'; // Import the GameCard component\nimport { Game, Team as TeamType, Sport } from '@/types'; // Import our main types\n\n// Define a simplified Team interface that matches our data structure\ninterface Team {\n  id: string;\n  external_id?: string | number;\n  external_team_id?: string;\n  name: string;\n  abbreviation: string;\n  logo_url?: string;\n  city: string;\n  sport: Sport;\n  is_active?: boolean | null;\n  last_updated?: string | null;\n  league_id?: string;\n  full_name?: string | null;\n  venue_name?: string | null;\n  venue_city?: string | null;\n  venue_state?: string | null;\n  venue_capacity?: number | null;\n  venue_surface?: string | null;\n  venue_zip?: string | null;\n  venue_latitude?: number | null;\n  venue_longitude?: number | null;\n  conference?: string | null;\n  division?: string | null;\n  // Add any other fields that might be used in the component\n  [key: string]: any;\n}\n\n// Helper type to avoid deep type instantiation\ntype SimpleTeam = Omit<Team, 'sport'> & { sport: string };\nimport { Database } from '@/types/database.types'; // For raw DB types if needed\n\n// League ID mapping for database queries\nconst LEAGUE_ID_MAP: Record<string, string> = {\n  mlb: '6b78d3c9-d104-4f15-a985-4e9953258c3b', // MLB UUID from the database\n  nba: '8d91bd64-4609-47cf-abc1-17a2057a612d', // NBA UUID from the database\n  nfl: '5eb41c0c-d9c4-4ea3-9254-c60bddac1777', // NFL UUID from the database\n  nhl: '7fc9bf67-39e2-4b59-aaf1-0dcb53ca75e2', // NHL UUID from the database\n};\n\n// League display names\nconst LEAGUE_NAMES: Record<string, string> = {\n  nba: 'NBA', \n  mlb: 'MLB', \n  nfl: 'NFL', \n  nhl: 'NHL', \n  soccer: 'Soccer', \n  tennis: 'Tennis', \n  mma: 'MMA', \n  ncaa: 'NCAA', \n  ncaab: 'NCAA Basketball', \n  ncaaf: 'NCAA Football', \n  golf: 'Golf', \n  esports: 'eSports', \n  cfl: 'CFL', \n  boxing: 'Boxing'\n};\n\n// League emojis for visual representation\nconst LEAGUE_EMOJIS: Record<string, string> = {\n  nba: '🏀', \n  mlb: '⚾', \n  nfl: '🏈', \n  nhl: '🏒', \n  soccer: '⚽', \n  tennis: '🎾', \n  mma: '🥋', \n  ncaa: '🏈', \n  ncaab: '🏀', \n  ncaaf: '🏈', \n  golf: '⛳', \n  esports: '🎮', \n  cfl: '🏈', \n  boxing: '🥊'\n};\n\nconst LeaguePage: React.FC = () => {\n  const { leagueId: leagueIdParam } = useParams<{ leagueId: string }>();\n  \n  // Ensure leagueId is a valid value or default to 'nba'\n  const leagueId = (leagueIdParam && Object.keys(LEAGUE_NAMES).includes(leagueIdParam)) \n    ? leagueIdParam \n    : 'nba';\n  \n  // Get the database league ID from the mapping\n  const dbLeagueId = LEAGUE_ID_MAP[leagueId];\n  \n  const [teams, setTeams] = useState<Team[]>([]);\n  const [upcomingGames, setUpcomingGames] = useState<Game[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [retryCount, setRetryCount] = useState(0);\n\n  useEffect(() => {\n    async function loadData() {\n  // Debug log for troubleshooting\n  console.log('[LeaguePage] leagueId:', leagueId, 'dbLeagueId:', dbLeagueId);\n\n      // Defensive: Only fetch if dbLeagueId is valid\n      if (!dbLeagueId) {\n        setTeams([]);\n        setError('Invalid or unsupported league selected.');\n        setLoading(false);\n        return;\n      }\n      try {\n        setLoading(true);\n        setError(null);\n               let teamsResult;\n        let nbaTeams: any[] = [];\n        if (leagueId === 'nba') {\n          // Use the NBA helper for NBA league\n          try {\n            nbaTeams = await (await import('../lib/supabase')).fetchNbaTeams();\n            teamsResult = { data: nbaTeams, error: null };\n            console.log('[LeaguePage] NBA teams fetched from nba_teams:', nbaTeams);\n          } catch (nbaErr) {\n            teamsResult = { data: null, error: nbaErr };\n            console.error('[LeaguePage] Error fetching NBA teams:', nbaErr);\n          }\n        } else {\n          // Fetch teams from database with all required fields\n          teamsResult = await supabase\n            .from('teams')\n            .select(`\n              id, name, abbreviation, logo_url, city, \n              primary_color, secondary_color, full_name, \n              external_id, is_active, last_updated, league_id,\n              venue_name, venue_city, venue_state, venue_capacity,\n              venue_surface, venue_zip, venue_latitude, venue_longitude\n            `)\n            .eq('league_id', dbLeagueId);\n          console.log('[LeaguePage] teams query result:', teamsResult);\n        }\n        \n        // Fetch upcoming games from database\n        const upcomingGamesResult = await supabase\n          .from('games')\n          .select(`\n            id, external_id, league_id, home_team_id, away_team_id, venue_id, game_date, game_time_utc, status, home_score, away_score, home_odds, away_odds, spread, over_under, created_at, updated_at,\n            leagues:league_id(name, key),\n            home_team:home_team_id(*),\n            away_team:away_team_id(*)\n          `)\n          .gt('game_date', new Date().toISOString()) // Changed from game_time to game_date\n          .order('game_date', { ascending: true }) // Changed from game_time to game_date\n          .limit(10);\n        \n        // Process database data\n        if (teamsResult.error) {\n          console.error('Error fetching teams:', teamsResult.error);\n          setError(teamsResult.error.message);\n        } else if (teamsResult.data) {\n          // Log the raw data for debugging\n          console.log('[LeaguePage] Raw team data:', teamsResult.data);\n          \n          // Transform team data to match the Team interface\n          const transformedTeams = teamsResult.data.map(team => {\n            // For NBA teams, make sure to preserve external_team_id\n            const transformedTeam = {\n              id: String(team.id), // Convert number to string for consistent Team interface\n              name: team.name,\n              abbreviation: team.abbreviation,\n              logo_url: team.logo_url || null,\n              city: team.city,\n              primary_color: team.primary_color || null,\n              secondary_color: team.secondary_color || null,\n              sport: leagueId as Sport, // Use the current league as the sport\n              external_id: team.external_id,\n              external_team_id: team.external_team_id, // Preserve this field for NBA teams\n              is_active: team.is_active ?? true,\n              last_updated: team.last_updated || null,\n              league_id: team.league_id,\n              full_name: team.full_name || team.name,\n              venue_name: team.venue_name || null,\n              venue_city: team.venue_city || null,\n              venue_state: team.venue_state || null,\n              venue_capacity: team.venue_capacity || null,\n              venue_surface: team.venue_surface || null,\n              venue_zip: team.venue_zip || null,\n              venue_latitude: team.venue_latitude || null,\n              venue_longitude: team.venue_longitude || null\n            };\n            \n            // Log each transformed team (especially external_team_id)\n            if (leagueId === 'nba') {\n              console.log(`[LeaguePage] NBA Team ${team.name} - external_team_id:`, team.external_team_id);\n            }\n            \n            return transformedTeam;\n          });\n          \n          setTeams(transformedTeams);\n        }\n        \n        if (upcomingGamesResult.error) {\n          console.error('Error fetching games:', upcomingGamesResult.error);\n          if (!error) {\n            setError(upcomingGamesResult.error.message);\n          }\n        } else if (upcomingGamesResult.data) {\n          const mappedGames = upcomingGamesResult.data.map((dbGame: any): Game => {\n            // Assuming dbGame.home_team and dbGame.away_team are populated by the query\n            // And dbGame.leagues is also populated\n            // Derive sport from league key\n            const sportKeyValue = dbGame.leagues?.key || 'other';\n            let sport: Sport = sportKeyValue as Sport;\n            \n            // Map league key to sport if needed\n            if (sportKeyValue === 'mlb' || sportKeyValue === '4424') sport = 'mlb';\n            else if (sportKeyValue === 'nba' || sportKeyValue === '4387') sport = 'nba';\n            else if (sportKeyValue === 'nfl' || sportKeyValue === '4391') sport = 'nfl';\n            else if (sportKeyValue === 'nhl' || sportKeyValue === '4380') sport = 'nhl';\n            else if (sportKeyValue?.toLowerCase().includes('soccer')) sport = 'soccer';\n\n            return {\n              id: dbGame.id,\n              external_id: dbGame.external_id,\n              league_id: dbGame.league_id,\n              home_team_id: dbGame.home_team_id,\n              away_team_id: dbGame.away_team_id,\n              venue_id: dbGame.venue_id,\n              game_date: dbGame.game_date,\n              game_time_utc: dbGame.game_time_utc,\n              status: dbGame.status,\n              home_score: dbGame.home_score,\n              away_score: dbGame.away_score,\n              home_odds: dbGame.home_odds,\n              away_odds: dbGame.away_odds,\n              spread: dbGame.spread,\n              over_under: dbGame.over_under,\n              // Create odds array for backward compatibility\n              odds: [\n                dbGame.home_odds ? {\n                  market: 'Moneyline',\n                  outcome: 'Home',\n                  price: dbGame.home_odds\n                } : null,\n                dbGame.away_odds ? {\n                  market: 'Moneyline',\n                  outcome: 'Away',\n                  price: dbGame.away_odds\n                } : null,\n                dbGame.spread ? {\n                  market: 'Spread',\n                  outcome: 'Home',\n                  price: dbGame.spread\n                } : null,\n                dbGame.over_under ? {\n                  market: 'Total',\n                  outcome: 'Over',\n                  price: dbGame.over_under\n                } : null\n              ].filter(Boolean),\n              // the_sports_db_id removed as it doesn't exist in the database schema\n              // sport_type removed as it doesn't exist in the database schema\n              created_at: dbGame.created_at,\n              updated_at: dbGame.updated_at,\n              sport: sport,\n              start_time: (dbGame.game_date && dbGame.game_time_utc) \n                            ? `${dbGame.game_date}T${dbGame.game_time_utc}` \n                            : dbGame.updated_at || new Date().toISOString(),\n              league_name: dbGame.leagues?.name || undefined,\n              home_team_name: dbGame.home_team?.name || undefined,\n              away_team_name: dbGame.away_team?.name || undefined,\n              // Astro fields are not fetched here, GameCard handles undefined\n            };\n          });\n          setUpcomingGames(mappedGames);\n        }\n      } catch (err) {\n        console.error('Error loading data:', err);\n        setError('Failed to load league data. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    \n    loadData();\n  }, [dbLeagueId, retryCount]);\n  \n  const handleRetry = () => {\n    setRetryCount(prev => prev + 1);\n  };\n\n  const renderContent = () => {\n    // Show loading skeleton\n    if (loading) {\n      return (\n        <div className=\"space-y-8\">\n          <div className=\"flex items-center mb-8\">\n            <Skeleton className=\"h-12 w-12 rounded-full mr-4\" />\n            <div className=\"space-y-2\">\n              <Skeleton className=\"h-6 w-48\" />\n              <Skeleton className=\"h-4 w-64\" />\n            </div>\n          </div>\n          \n          <div className=\"mb-12\">\n            <Skeleton className=\"h-8 w-48 mb-6\" />\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n              {[1, 2, 3, 4].map(i => (\n                <Skeleton key={i} className=\"h-40 w-full rounded-lg\" />\n              ))}\n            </div>\n          </div>\n          \n          <div>\n            <Skeleton className=\"h-8 w-48 mb-6\" />\n            <div className=\"grid gap-4 grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5\">\n              {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(i => (\n                <Skeleton key={i} className=\"h-32 w-full rounded-lg\" />\n              ))}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    // Show error state\n    if (error) {\n      return (\n        <div className=\"max-w-2xl mx-auto py-8\">\n          <Alert variant=\"destructive\">\n            <AlertDescription>{error}</AlertDescription>\n            <Button \n              onClick={handleRetry}\n              variant=\"outline\"\n              className=\"mt-4 w-fit\"\n            >\n              Retry\n            </Button>\n          </Alert>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"space-y-6 sm:space-y-8\">\n        {/* League Header */}\n        <motion.div \n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"w-full\"\n        >\n          <Card className=\"border-0 shadow-lg bg-gradient-to-br from-slate-50 to-slate-100 dark:from-slate-800 dark:to-slate-900 overflow-hidden relative group\">\n            <div className=\"absolute inset-0 bg-gradient-to-r from-indigo-500/5 to-purple-600/5 dark:from-indigo-500/10 dark:to-purple-600/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500\"></div>\n            <div className=\"relative z-10 p-6 md:p-8\">\n              <div className=\"flex flex-col items-start\">\n                <div className=\"inline-flex items-center mb-2\">\n                  <span className=\"bg-gradient-to-r from-indigo-600 to-purple-600 text-white text-sm font-semibold px-3 py-1 rounded-full\">\n                    {LEAGUE_NAMES[leagueId] || 'LEAGUE'}\n                  </span>\n                </div>\n                \n                <h1 className=\"text-3xl md:text-4xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-slate-900 to-slate-700 dark:from-white dark:to-slate-200 mb-2\">\n                  {LEAGUE_NAMES[leagueId] || 'League'}\n                </h1>\n                \n                <div className=\"flex items-center space-x-4 text-sm text-slate-600 dark:text-slate-300 mb-4\">\n                  <span className=\"flex items-center\">\n                    <Users className=\"h-4 w-4 mr-1.5\" />\n                    {teams.length} Teams\n                  </span>\n                  <span className=\"h-1 w-1 rounded-full bg-slate-300 dark:bg-slate-600\"></span>\n                  <span className=\"flex items-center\">\n                    <Calendar className=\"h-4 w-4 mr-1.5\" />\n                    {upcomingGames.length} Upcoming Games\n                  </span>\n                </div>\n                \n                <p className=\"text-slate-600 dark:text-slate-300 text-base max-w-2xl\">\n                  View team details, schedules, and performance metrics for the {LEAGUE_NAMES[leagueId]?.toLowerCase() || 'league'}. Get insights, stats, and analysis to stay ahead of the game.\n                </p>\n              </div>\n            </div>\n          </Card>\n        </motion.div>\n\n        {/* Upcoming Games - Only show if we have games */}\n        {upcomingGames.length > 0 && (\n          <div className=\"mb-8 sm:mb-12\">\n            <h2 className=\"text-xl sm:text-2xl font-bold text-white mb-4 sm:mb-6 flex items-center\">\n              <Calendar className=\"mr-2 h-5 w-5 sm:h-6 sm:w-6\" />\n              Upcoming Games\n            </h2>\n            \n            <div className=\"grid gap-3 sm:gap-4 grid-cols-2 md:grid-cols-2 lg:grid-cols-3\">\n              {upcomingGames\n                .map((game, idx) => {\n                  // For NBA, match on external_team_id or external_id (nba_teams), otherwise match on id\n                  const homeTeam = leagueId === 'nba'\n                    ? teams.find(t => \n                        t.external_team_id === game.home_team_id || \n                        String(t.external_id) === String(game.home_team_id) || \n                        t.id === game.home_team_id\n                      )\n                    : teams.find(t => t.id === game.home_team_id);\n                  \n                  const awayTeam = leagueId === 'nba'\n                    ? teams.find(t => \n                        t.external_team_id === game.away_team_id || \n                        String(t.external_id) === String(game.away_team_id) || \n                        t.id === game.away_team_id\n                      )\n                    : teams.find(t => t.id === game.away_team_id);\n                  \n                  // Debug: Log the game and team info for the first few cards\n                  if (idx < 5) {\n                    console.log('GameCard', {\n                      idx,\n                      gameId: game.id,\n                      homeTeamId: game.home_team_id,\n                      awayTeamId: game.away_team_id,\n                      homeTeam,\n                      awayTeam\n                    });\n                  }\n                  // Skip rendering if we don't have both teams\n                  if (!homeTeam || !awayTeam) {\n                    console.warn(`Missing team data for game ${game.id}`);\n                    return null;\n                  }\n                  // Convert team types to be compatible with GameCard\n                  const toGameCardTeam = (team: Team) => ({\n                    ...team,\n                    external_id: String(team.external_id),\n                    primary_color: team.primary_color || undefined,\n                    secondary_color: team.secondary_color || undefined,\n                    // Ensure all required TeamType properties are included\n                    id: team.id,\n                    name: team.name,\n                    abbreviation: team.abbreviation,\n                    logo_url: team.logo_url || undefined,\n                    city: team.city,\n                    sport: team.sport\n                  } as TeamType & { primary_color?: string; secondary_color?: string });\n                  return (\n                    <GameCard \n                      key={game.id} \n                      game={game} \n                      homeTeam={toGameCardTeam(homeTeam)}\n                      awayTeam={toGameCardTeam(awayTeam)}\n                      defaultLogo=\"/placeholder-team.png\"\n                    />\n                  );\n                })\n                // Filter out any null entries from skipped games\n                .filter(Boolean)}\n            </div>\n          </div>\n        )}\n\n        {/* Teams - Only show if we have teams */}\n        {teams.length > 0 && (\n          <div>\n            <h2 className=\"text-xl sm:text-2xl font-bold text-white mb-4 sm:mb-6 flex items-center\">\n              <Users className=\"mr-2 h-5 w-5 sm:h-6 sm:w-6\" />\n              Teams\n            </h2>\n            \n            <div className=\"grid gap-3 sm:gap-4 grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6\">\n              {teams.map((team) => (\n                <Link \n                  key={team.id} \n                  to={`/teams/${team.id}`}\n                  className=\"block h-full group-hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1 active:scale-95\"\n                >\n                  <motion.div\n                    initial={{ opacity: 0, y: 10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.2 }}\n                    className=\"h-full flex flex-col\"\n                  >\n                    <Card className=\"h-full border border-slate-200 dark:border-slate-700 shadow-sm bg-gradient-to-br from-white to-slate-50 dark:from-slate-700 dark:to-slate-800/90 group hover:border-primary/30 dark:hover:border-primary/50 transition-colors duration-300 overflow-hidden\">\n                      <CardContent className=\"p-2 sm:p-3 md:p-4 flex flex-col items-center h-full\">\n                        <div className=\"relative mb-2 sm:mb-3 flex-1 flex items-center justify-center w-full\">\n                          <div className=\"relative bg-white/80 dark:bg-slate-600/50 p-1.5 sm:p-2 rounded-full shadow-sm\">\n                            <img \n                              src={team.logo_url || '/placeholder-team.png'} \n                              alt={team.name}\n                              className=\"h-12 w-12 sm:h-14 sm:w-14 md:h-16 md:w-16 object-contain transition-transform duration-300 group-hover:scale-110\"\n                              onError={(e) => {\n                                (e.target as HTMLImageElement).src = '/placeholder-team.png';\n                              }}\n                              loading=\"lazy\"\n                              draggable=\"false\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"w-full text-center\">\n                          <p className=\"text-slate-800 dark:text-white font-medium text-xs sm:text-sm line-clamp-1\">\n                            {team.name}\n                          </p>\n                          {team.venue_city && (\n                            <div className=\"mt-1\">\n                              <Badge \n                                variant=\"outline\" \n                                className=\"text-[10px] sm:text-xs bg-white/50 dark:bg-slate-700/50 border-slate-300 dark:border-slate-600 text-slate-700 dark:text-slate-200\"\n                              >\n                                {team.venue_city}\n                              </Badge>\n                            </div>\n                          )}\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                </Link>\n              ))}\n            </div>\n          </div>\n        )}\n        \n        {teams.length === 0 && !loading && (\n          <div className=\"text-center py-12\">\n            <p className=\"text-gray-400 mb-4\">No teams found for this league</p>\n            <Button \n              variant=\"outline\" \n              onClick={handleRetry}\n              className=\"mt-2\"\n            >\n              Retry Loading Teams\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"pb-16 md:pb-0\">\n      <DashboardLayout>\n        <div className=\"px-3 sm:px-4 md:px-6 lg:px-8 py-4\">\n          {renderContent()}\n        </div>\n      </DashboardLayout>\n    </div>\n  );\n};\n\nexport default LeaguePage;\n"],"file":"assets/LeaguePage-Bklae_Hk.js"}