{"version":3,"file":"PlayerDetailPage-Cp_ecLrm.js","sources":["../../src/components/BattingStats.tsx","../../src/pages/PlayerDetailPage.tsx"],"sourcesContent":["import React from 'react';\n\ninterface BattingStatsProps {\n  stats: {\n    atBats?: number;\n    runs?: number;\n    hits?: number;\n    secondBaseHits?: number;\n    thirdBaseHits?: number;\n    homeruns?: number;\n    runsBattedIn?: number;\n    stolenBases?: number;\n    caughtBaseSteals?: number;\n    battingAvg?: number;\n    batterOnBasePct?: number;\n    batterSluggingPct?: number;\n    batterOnBasePlusSluggingPct?: number;\n    batterWalks?: number;\n    batterStrikeouts?: number;\n    hitByPitch?: number;\n    batterSacrificeBunts?: number;\n    batterSacrificeFlies?: number;\n    batterIntentionalWalks?: number;\n    totalBases?: number;\n    extraBaseHits?: number;\n    batterGroundBalls?: number;\n    batterFlyBalls?: number;\n    batterLineDrives?: number;\n    batterDoublePlays?: number;\n    leftOnBase?: number;\n    pitchesFaced?: number;\n    batterSwings?: number;\n    batterStrikesMiss?: number;\n  };\n}\n\nconst formatPercentage = (value?: number) => {\n  if (value === undefined || value === null) return '.000';\n  return value.toFixed(3).replace('0.', '.');\n};\n\nconst formatStatValue = (value: any) => {\n  if (value === undefined || value === null) return 'N/A';\n  return value;\n};\n\nconst BattingStats: React.FC<BattingStatsProps> = ({ stats }) => {\n  const statGroups = [\n    {\n      title: 'Basic Stats',\n      stats: [\n        { label: 'At Bats', key: 'atBats', value: stats.atBats },\n        { label: 'Runs', key: 'runs', value: stats.runs },\n        { label: 'Hits', key: 'hits', value: stats.hits },\n        { label: 'Doubles', key: 'secondBaseHits', value: stats.secondBaseHits },\n        { label: 'Triples', key: 'thirdBaseHits', value: stats.thirdBaseHits },\n        { label: 'Home Runs', key: 'homeruns', value: stats.homeruns },\n        { label: 'Runs Batted In', key: 'runsBattedIn', value: stats.runsBattedIn },\n        { label: 'Stolen Bases', key: 'stolenBases', value: `${stats.stolenBases || 0}/${(stats.stolenBases || 0) + (stats.caughtBaseSteals || 0)}` },\n      ]\n    },\n    {\n      title: 'Averages',\n      stats: [\n        { label: 'Batting Average', key: 'battingAvg', value: formatPercentage(stats.battingAvg) },\n        { label: 'On-Base %', key: 'batterOnBasePct', value: formatPercentage(stats.batterOnBasePct) },\n        { label: 'Slugging %', key: 'batterSluggingPct', value: formatPercentage(stats.batterSluggingPct) },\n        { label: 'OPS', key: 'batterOnBasePlusSluggingPct', value: formatPercentage(stats.batterOnBasePlusSluggingPct) },\n      ]\n    },\n    {\n      title: 'Plate Discipline',\n      stats: [\n        { label: 'Walks', key: 'batterWalks', value: stats.batterWalks },\n        { label: 'Strikeouts', key: 'batterStrikeouts', value: stats.batterStrikeouts },\n        { label: 'Hit By Pitch', key: 'hitByPitch', value: stats.hitByPitch },\n        { label: 'Intentional Walks', key: 'batterIntentionalWalks', value: stats.batterIntentionalWalks },\n        { \n          label: 'Swing %', \n          key: 'swingPercentage', \n          value: stats.pitchesFaced ? `${((stats.batterSwings || 0) / stats.pitchesFaced * 100).toFixed(1)}%` : '0.0%' \n        },\n        { \n          label: 'Whiff %', \n          key: 'whiffPercentage', \n          value: stats.batterSwings ? `${((stats.batterStrikesMiss || 0) / stats.batterSwings * 100).toFixed(1)}%` : '0.0%' \n        },\n      ]\n    },\n    {\n      title: 'Situational',\n      stats: [\n        { label: 'Sacrifice Bunts', key: 'batterSacrificeBunts', value: stats.batterSacrificeBunts },\n        { label: 'Sacrifice Flies', key: 'batterSacrificeFlies', value: stats.batterSacrificeFlies },\n        { label: 'Double Plays', key: 'batterDoublePlays', value: stats.batterDoublePlays },\n        { label: 'Left On Base', key: 'leftOnBase', value: stats.leftOnBase },\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"overflow-x-auto bg-white border border-gray-200 rounded-lg shadow-sm\">\n      <table className=\"min-w-full divide-y divide-gray-200\">\n        <thead className=\"bg-gray-50\">\n          <tr>\n            <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statistic</th>\n            <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Value</th>\n          </tr>\n        </thead>\n        <tbody className=\"bg-white divide-y divide-gray-200\">\n          {statGroups.map((group, groupIndex) => (\n            <React.Fragment key={groupIndex}>\n              <tr className=\"bg-gray-50\">\n                <td colSpan={2} className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100\">\n                  {group.title}\n                </td>\n              </tr>\n              {group.stats.map((stat, statIndex) => (\n                <tr key={`${groupIndex}-${statIndex}`} className=\"hover:bg-gray-50\">\n                  <td className=\"px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-700\">\n                    {stat.label}\n                  </td>\n                  <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-700 text-right font-mono\">\n                    {formatStatValue(stat.value)}\n                  </td>\n                </tr>\n              ))}\n            </React.Fragment>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default BattingStats;\n","// src/pages/PlayerDetailPage.tsx\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { getPlayerByApiId } from '../lib/supabase';\nimport { generatePlayerAstroData as getAstroData, BirthLocation } from '../lib/playerAstroService';\nimport { AstroData, AstroSignInfo, ZodiacSign, FieldingStats, Player as BasePlayer, BattingStats } from '../types/app.types';\nimport { getZodiacIllustration } from '../utils/zodiacIllustrations';\nimport BattingStatsComponent from '../components/BattingStats';\nimport CircularProgress from '../components/CircularProgress';\nimport AstroPeakDay from './AstroPeakDay';\nimport BigThreeAstroCards from './BigThreeAstroCards';\n\n// Extend the base Player type with additional fields\ninterface Player extends Omit<BasePlayer, 'id'> {\n  id: string;\n  player_id: string;\n  full_name: string | null;\n  position: string | null;\n  number?: string | number | null;\n  headshot_url: string | null;\n  team_name?: string | null;\n  impact_score?: string | number | null;\n  birth_date: string | null;\n  birth_location?: string | null;\n  astro_influence_score?: number | null;\n  league?: 'NBA' | 'MLB' | string; // Added for clarity and type safety\n  // Map database fields to component props for backward compatibility\n  astro_influence?: number | null;\n  // Add all the missing fields from the original Player type\n  [key: string]: any; // Temporary solution for missing fields\n}\n\ninterface ElementComposition {\n  name: string;\n  percentage: number;\n}\n\ninterface ElementInfluence {\n  element: string;\n  percentage: number;\n  strength: string;\n  description: string;\n}\n\nconst getElementForSign = (sign: string): string => {\n  const elementMap: Record<string, string> = {\n    'Aries': 'Fire',\n    'Taurus': 'Earth',\n    'Gemini': 'Air',\n    'Cancer': 'Water',\n    'Leo': 'Fire',\n    'Virgo': 'Earth',\n    'Libra': 'Air',\n    'Scorpio': 'Water',\n    'Sagittarius': 'Fire',\n    'Capricorn': 'Earth',\n    'Aquarius': 'Air',\n    'Pisces': 'Water'\n  };\n  return elementMap[sign] || 'Earth'; // Default to Earth if sign not found\n};\n\nconst calculateElementalComposition = (astro: AstroData): ElementComposition[] => {\n  const elements = ['Fire', 'Earth', 'Air', 'Water'];\n  const elementCounts: Record<string, number> = {\n    'Fire': 0,\n    'Earth': 0,\n    'Air': 0,\n    'Water': 0\n  };\n\n  // Count elements from sun, moon, and ascendant signs\n  elementCounts[getElementForSign(astro.sunSign.sign)] += 1.5; // Sun has more weight\n  elementCounts[getElementForSign(astro.moonSign.sign)] += 1.2; // Moon has medium weight\n  elementCounts[getElementForSign(astro.ascendant.sign)] += 1.0; // Ascendant has base weight\n\n  // Calculate percentages\n  const total = Object.values(elementCounts).reduce((sum, count) => sum + count, 0);\n  \n  return elements.map(element => ({\n    name: element,\n    percentage: Math.round((elementCounts[element] / total) * 100)\n  }));\n};\n\nconst getElementColor = (element: string): string => {\n  const colors: Record<string, string> = {\n    'Fire': '#ef4444',    // Red\n    'Earth': '#22c55e',   // Green\n    'Air': '#3b82f6',     // Blue\n    'Water': '#8b5cf6'    // Purple\n  };\n  return colors[element] || '#6b7280'; // Default to gray\n};\n\nconst getElementColorClass = (element: string): string => {\n  const classes: Record<string, string> = {\n    'Fire': 'bg-red-500',\n    'Earth': 'bg-green-500',\n    'Air': 'bg-blue-500',\n    'Water': 'bg-purple-500'\n  };\n  return classes[element] || 'bg-gray-400';\n};\n\nconst getElementEmoji = (element: string): string => {\n  const emojis: Record<string, string> = {\n    'Fire': '🔥',\n    'Earth': '🌍',\n    'Air': '💨',\n    'Water': '💧'\n  };\n  return emojis[element] || '✨';\n};\n\nconst getElementStrength = (percentage: number): string => {\n  if (percentage >= 35) return 'Strong Influence';\n  if (percentage >= 20) return 'Moderate Influence';\n  return 'Minimal Influence';\n};\n\nconst getElementDescription = (element: string, percentage: number, playerName: string): string => {\n  const descriptions: Record<string, Record<string, string>> = {\n    'Fire': {\n      strong: `${playerName} has a powerful Fire presence (${percentage}%), bringing intense energy, passion, and competitive drive to the game. This makes ${playerName} a natural leader with a strong will to win.`,\n      moderate: `A balanced Fire presence (${percentage}%) gives ${playerName} good energy and motivation, though they may need to be mindful of maintaining consistency.`,\n      minimal: `With minimal Fire (${percentage}%), ${playerName} may need to work on bringing more energy and assertiveness to their game.`\n    },\n    'Earth': {\n      strong: `A strong Earth presence (${percentage}%) gives ${playerName} exceptional reliability, consistency, and practical skills. They're the rock of the team, always delivering solid performances.`,\n      moderate: `A balanced Earth presence (${percentage}%) helps ${playerName} stay grounded and focused, though they may need to work on being more adaptable.`,\n      minimal: `With minimal Earth (${percentage}%), ${playerName} may need to focus on developing more consistency and reliability in their performance.`\n    },\n    'Air': {\n      strong: `A dominant Air presence (${percentage}%) gives ${playerName} excellent mental agility, communication skills, and the ability to understand complex plays and strategies.`,\n      moderate: `A good balance of Air (${percentage}%) gives ${playerName} solid mental agility and the ability to understand complex plays.`,\n      minimal: `With minimal Air (${percentage}%), ${playerName} may need to work on their strategic thinking and communication on the field.`\n    },\n    'Water': {\n      strong: `A strong Water presence (${percentage}%) gives ${playerName} exceptional emotional intelligence, intuition, and team chemistry. They're able to read the game and their teammates with ease.`,\n      moderate: `A balanced Water presence (${percentage}%) helps ${playerName} connect with teammates and understand the flow of the game.`,\n      minimal: `Minimal Water (${percentage}%) suggests ${playerName} may need to work on emotional awareness and team chemistry.`\n    }\n  };\n\n  const strength = percentage >= 35 ? 'strong' : percentage >= 20 ? 'moderate' : 'minimal';\n  return descriptions[element]?.[strength] || `${playerName}'s ${element} influence is ${strength}.`;\n};\n\nconst getInfluenceStrength = (score: number): string => {\n  if (score >= 90) return 'exceptionally influenced';\n  if (score >= 70) return 'strongly influenced';\n  if (score >= 50) return 'moderately influenced';\n  if (score >= 30) return 'slightly influenced';\n  return 'minimally influenced';\n};\n\nconst getElementalInfluences = (astro: AstroData, playerName: string): ElementInfluence[] => {\n  const elements = calculateElementalComposition(astro);\n  \n  return elements.map(element => ({\n    element: element.name,\n    percentage: element.percentage,\n    strength: getElementStrength(element.percentage),\n    description: getElementDescription(element.name, element.percentage, playerName)\n  }));\n};\n\n// Helper to get detailed sign information (element, modality, keywords)\n// This is a simplified version. In a real app, this might come from a more robust service or data source.\nconst zodiacDetailsMap: Record<ZodiacSign, Omit<AstroSignInfo, 'sign' | 'house'>> = {\n  Aries: { element: 'Fire', modality: 'Cardinal', keywords: ['energetic', 'pioneering'] },\n  Taurus: { element: 'Earth', modality: 'Fixed', keywords: ['grounded', 'sensual'] },\n  Gemini: { element: 'Air', modality: 'Mutable', keywords: ['communicative', 'curious'] },\n  Cancer: { element: 'Water', modality: 'Cardinal', keywords: ['nurturing', 'protective'] },\n  Leo: { element: 'Fire', modality: 'Fixed', keywords: ['charismatic', 'expressive'] },\n  Virgo: { element: 'Earth', modality: 'Mutable', keywords: ['analytical', 'practical'] },\n  Libra: { element: 'Air', modality: 'Cardinal', keywords: ['harmonious', 'diplomatic'] },\n  Scorpio: { element: 'Water', modality: 'Fixed', keywords: ['intense', 'transformative'] },\n  Sagittarius: { element: 'Fire', modality: 'Mutable', keywords: ['adventurous', 'optimistic'] },\n  Capricorn: { element: 'Earth', modality: 'Cardinal', keywords: ['disciplined', 'ambitious'] },\n  Aquarius: { element: 'Air', modality: 'Fixed', keywords: ['innovative', 'humanitarian'] },\n  Pisces: { element: 'Water', modality: 'Mutable', keywords: ['compassionate', 'imaginative'] },\n};\n\nconst getFullAstroSignInfo = (signName: ZodiacSign): AstroSignInfo => {\n  const details = zodiacDetailsMap[signName] || { element: 'Unknown', modality: 'Unknown', keywords: [] };\n  return {\n    sign: signName,\n    ...details,\n  };\n};\n\nconst PlayerDetailPage: React.FC = () => {\n  const { teamId, playerId } = useParams<{ teamId: string; playerId: string }>();\n  const location = useLocation();\n  const [player, setPlayer] = useState<Player | null>(null); // Player type from app.types.ts should align with data structure\n  const [astro, setAstro] = useState<AstroData | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [sport, setSport] = useState<'mlb' | 'nba'>('mlb'); // Default to MLB\n\n  // Determine the sport based on URL path\n  useEffect(() => {\n    // Check if the URL path contains 'nba' to determine the sport\n    const isNba = location.pathname.includes('/nba/') || \n                  location.pathname.includes('/NBA/') || \n                  (teamId && teamId.toLowerCase().includes('nba'));\n    setSport(isNba ? 'nba' : 'mlb');\n    console.log(`[PlayerDetailPage] Sport determined from URL path: ${isNba ? 'NBA' : 'MLB'}`);\n  }, [location.pathname, teamId]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        if (!playerId) {\n          setError('No player ID provided.');\n          setLoading(false);\n          return;\n        }\n\n        console.log(`[PlayerDetailPage] Fetching player with ID: ${playerId}, sport: ${sport}`);\n        const fetchedPlayer = await getPlayerByApiId(playerId, sport);\n        console.log('[PlayerDetailPage] Fetched player data:', fetchedPlayer);\n\n        if (!fetchedPlayer) {\n          setError('Player not found.');\n          setPlayer(null);\n        } else {\n          let formattedPlayer: Player;\n\n          if (sport === 'nba') {\n            const nbaPlayer = fetchedPlayer as any;\n            console.log('NBA Player Data:', nbaPlayer);\n            console.log('Impact Score Raw:', nbaPlayer.impact_score, 'Type:', typeof nbaPlayer.impact_score);\n            formattedPlayer = {\n              id: nbaPlayer.id?.toString() || '',\n              player_id: nbaPlayer.external_player_id || nbaPlayer.id?.toString() || '',\n              full_name: `${nbaPlayer.first_name || ''} ${nbaPlayer.last_name || ''}`.trim(),\n              position: nbaPlayer.primary_position || 'N/A',\n              headshot_url: nbaPlayer.photo_url || undefined,\n              birth_date: nbaPlayer.birth_date || undefined,\n\n              number: nbaPlayer.jersey_number ? String(nbaPlayer.jersey_number) : undefined,\n              team_name: nbaPlayer.team_abbreviation || undefined,\n              birth_location: nbaPlayer.birth_city ? `${nbaPlayer.birth_city}${nbaPlayer.birth_country ? `, ${nbaPlayer.birth_country}` : ''}` : undefined,\n              impact_score: nbaPlayer.impact_score !== null && nbaPlayer.impact_score !== undefined\n                ? (typeof nbaPlayer.impact_score === 'string'\n                    ? parseFloat(nbaPlayer.impact_score)\n                    : nbaPlayer.impact_score)\n                : (nbaPlayer.astro_influence_score !== null && nbaPlayer.astro_influence_score !== undefined\n                    ? (typeof nbaPlayer.astro_influence_score === 'string'\n                        ? parseFloat(nbaPlayer.astro_influence_score)\n                        : nbaPlayer.astro_influence_score)\n                    : undefined),\n              astro_influence_score: nbaPlayer.astro_influence ?? undefined,\n              astro_influence: nbaPlayer.astro_influence ?? undefined,\n\n              stats_points_per_game: nbaPlayer.stats_points_per_game ?? undefined,\n              stats_rebounds_per_game: nbaPlayer.stats_rebounds_per_game ?? undefined,\n              stats_assists_per_game: nbaPlayer.stats_assists_per_game ?? undefined,\n              stats_steals_per_game: nbaPlayer.stats_steals_per_game ?? undefined,\n              stats_blocks_per_game: nbaPlayer.stats_blocks_per_game ?? undefined,\n              stats_field_goal_pct: nbaPlayer.stats_field_goal_pct ?? undefined,\n              stats_three_point_pct: nbaPlayer.stats_three_point_pct ?? undefined,\n              stats_free_throw_pct: nbaPlayer.stats_free_throw_pct ?? undefined,\n              stats_minutes_per_game: nbaPlayer.stats_minutes_per_game ?? undefined,\n              stats_games_played: nbaPlayer.stats_games_played ?? undefined,\n              stats_plus_minus: nbaPlayer.stats_plus_minus ?? undefined,\n              league: fetchedPlayer.league, // Use league from the fetched data\n            };\n          } else {\n            const mlbPlayer = fetchedPlayer as any;\n            formattedPlayer = {\n              id: mlbPlayer.player_id || '',\n              player_id: mlbPlayer.player_id || '',\n              full_name: mlbPlayer.player_full_name || `${mlbPlayer.player_first_name || ''} ${mlbPlayer.player_last_name || ''}`.trim(),\n              position: mlbPlayer.player_primary_position || 'N/A',\n              headshot_url: mlbPlayer.player_official_image_src || undefined,\n              birth_date: mlbPlayer.player_birth_date || undefined,\n\n              number: mlbPlayer.player_jersey_number ? String(mlbPlayer.player_jersey_number) : undefined,\n              team_name: mlbPlayer.player_current_team_abbreviation || undefined,\n              birth_location: mlbPlayer.player_birth_city ? `${mlbPlayer.player_birth_city}${mlbPlayer.player_birth_country ? `, ${mlbPlayer.player_birth_country}` : ''}` : undefined,\n              impact_score: mlbPlayer.impact_score ? String(mlbPlayer.impact_score) : undefined,\n              astro_influence_score: mlbPlayer.astro_influence_score ?? undefined,\n              astro_influence: mlbPlayer.astro_influence_score ?? undefined,\n\n              stats_batting_at_bats: mlbPlayer.stats_batting_at_bats ?? undefined,\n              stats_batting_runs: mlbPlayer.stats_batting_runs ?? undefined,\n              stats_batting_hits: mlbPlayer.stats_batting_hits ?? undefined,\n              stats_batting_rbi: mlbPlayer.stats_batting_runs_batted_in ?? undefined,\n              stats_batting_home_runs: mlbPlayer.stats_batting_homeruns ?? undefined,\n              stats_batting_strikeouts: mlbPlayer.stats_batting_strikeouts ?? undefined,\n              stats_batting_walks: mlbPlayer.stats_batting_walks ?? undefined,\n              stats_batting_avg: mlbPlayer.stats_batting_batting_avg ?? undefined,\n              stats_batting_obp: mlbPlayer.stats_batting_on_base_pct ?? undefined,\n              stats_batting_slg: mlbPlayer.stats_batting_slugging_pct ?? undefined,\n              stats_batting_ops: mlbPlayer.stats_batting_on_base_plus_slugging_pct ?? undefined,\n              league: fetchedPlayer.league, // Use league from the fetched data\n            };\n          }\n          // Always set league for safety\n          if (!formattedPlayer.league) {\n            formattedPlayer.league = sport === 'nba' ? 'NBA' : 'MLB';\n          }\n          setPlayer(formattedPlayer);\n\n          console.log('[PlayerDetailPage] Mapped player data:', formattedPlayer);\n\n          if (formattedPlayer.birth_date) {\n            try {\n              const birthLocation: BirthLocation | undefined = formattedPlayer.birth_location ? {\n                city: formattedPlayer.birth_location.split(',')[0]?.trim(),\n                country: formattedPlayer.birth_location.split(',')[1]?.trim() || 'USA'\n              } : undefined;\n\n              const rawAstroData = await getAstroData(formattedPlayer.birth_date, birthLocation);\n              \n              // Transform raw astro data to match AstroData type\n              const structuredAstroData: AstroData = {\n                sunSign: getFullAstroSignInfo(rawAstroData.planets.sun.sign as ZodiacSign),\n                moonSign: getFullAstroSignInfo(rawAstroData.planets.moon.sign as ZodiacSign),\n                ascendant: getFullAstroSignInfo(rawAstroData.ascendant as ZodiacSign),\n                // Optional fields\n                interpretation: undefined,\n                chineseZodiac: undefined\n              };\n              \n              setAstro(structuredAstroData);\n              console.log('[PlayerDetailPage] Generated astro data:', structuredAstroData);\n            } catch (astroError) {\n              console.error('Error generating astrological data:', astroError);\n            }\n          } else {\n            setAstro(null);\n          }\n        }\n      } catch (err) {\n        console.error('Error fetching player data:', err);\n        setError(`Failed to load player data: ${err instanceof Error ? err.message : 'Unknown error'}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (playerId && sport) {\n      fetchData();\n    }\n  }, [playerId, sport]);\n\n  useEffect(() => {\n    // Enhanced sport detection logic\n    const isNba = \n      location.pathname.includes('/nba/') || \n      location.pathname.includes('/NBA/') || \n      (teamId && teamId.toLowerCase().includes('nba')) ||\n      // Check for specific NBA team IDs that we know about\n      (teamId === 'a27df587-8432-4a6a-9b9c-0d0e17dbdff0'); // This is an NBA team ID\n      \n    setSport(isNba ? 'nba' : 'mlb');\n    console.log(`[PlayerDetailPage] Sport determined from URL path: ${isNba ? 'NBA' : 'MLB'}`);\n    console.log(`[PlayerDetailPage] Team ID: ${teamId}, Player ID: ${playerId}`);\n  }, [location.pathname, teamId, playerId]);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-screen bg-gray-50\">\n        <span className=\"inline-block w-12 h-12 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\" aria-label=\"Loading player data\"></span>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 text-gray-800 flex flex-col items-center justify-center p-4\">\n        <div className=\"bg-white p-8 rounded-lg shadow-xl text-center\">\n          <h2 className=\"text-2xl font-bold text-red-600 mb-4\">Error</h2>\n          <p>{error}</p>\n          <a href=\"/dashboard\" className=\"mt-6 inline-block bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded transition-colors\">\n            Return to Dashboard\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  if (!player) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 text-gray-800 flex flex-col items-center justify-center p-4\">\n        <div className=\"bg-white p-8 rounded-lg shadow-xl text-center\">\n          <h2 className=\"text-2xl font-bold text-yellow-600 mb-4\">Player Not Found</h2>\n          <p>The requested player could not be found.</p>\n          <a href=\"/dashboard\" className=\"mt-6 inline-block bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded transition-colors\">\n            Return to Dashboard\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  // Diagnostic log to observe state before rendering\n  console.log('PlayerDetailPage Render State:', {\n    playerExists: !!player,\n    playerId: player?.id,\n    playerLeague: player?.league,\n    isNBAExpected: player?.league === 'NBA',\n    isLoading: loading,\n    error: error\n  });\n\n  // Map player stats to BattingStats interface\n  const battingStats: BattingStats = {\n    // Basic Stats\n    atBats: player.stats_batting_at_bats || 0,\n    runs: player.stats_batting_runs || 0,\n    hits: player.stats_batting_hits || 0,\n    runsBattedIn: player.stats_batting_rbi || 0,\n    homeruns: player.stats_batting_home_runs || 0,\n    \n    // Averages\n    battingAvg: typeof player.stats_batting_avg === 'string' \n      ? parseFloat(player.stats_batting_avg) \n      : player.stats_batting_avg || 0,\n    batterOnBasePct: typeof player.stats_batting_obp === 'string' \n      ? parseFloat(player.stats_batting_obp) \n      : player.stats_batting_obp || 0,\n    batterSluggingPct: typeof player.stats_batting_slg === 'string' \n      ? parseFloat(player.stats_batting_slg) \n      : player.stats_batting_slg || 0,\n    batterOnBasePlusSluggingPct: typeof player.stats_batting_ops === 'string' \n      ? parseFloat(player.stats_batting_ops) \n      : player.stats_batting_ops || 0,\n    \n    // Legacy fields for backward compatibility\n    at_bats: player.stats_batting_at_bats,\n    rbi: player.stats_batting_rbi,\n    home_runs: player.stats_batting_home_runs,\n    strikeouts: player.stats_batting_strikeouts,\n    walks: player.stats_batting_walks,\n    avg: player.stats_batting_avg,\n    obp: player.stats_batting_obp,\n    slg: player.stats_batting_slg,\n    ops: player.stats_batting_ops,\n  };\n\n  const fieldingStats: FieldingStats = {\n    inningsPlayed: player.stats_fielding_innings_played,\n    totalChances: player.stats_fielding_total_chances,\n    fielderTagOuts: player.stats_fielding_fielder_tag_outs,\n    fielderForceOuts: player.stats_fielding_fielder_force_outs,\n    fielderPutOuts: player.stats_fielding_fielder_put_outs,\n    outsFaced: player.stats_fielding_outs_faced,\n    assists: player.stats_fielding_assists,\n    errors: player.stats_fielding_errors,\n    fielderDoublePlays: player.stats_fielding_fielder_double_plays,\n    fielderTriplePlays: player.stats_fielding_fielder_triple_plays,\n    fielderStolenBasesAllowed: player.stats_fielding_fielder_stolen_bases_allowed,\n    fielderCaughtStealing: player.stats_fielding_fielder_caught_stealing,\n    fielderStolenBasePct: player.stats_fielding_fielder_stolen_base_pct,\n    passedBalls: player.stats_fielding_passed_balls,\n    fielderWildPitches: player.stats_fielding_fielder_wild_pitches,\n    fieldingPct: player.stats_fielding_fielding_pct,\n    rangeFactor: player.stats_fielding_range_factor\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 text-gray-800 font-sans\">\n      <main className=\"container mx-auto px-4 py-8 flex flex-col gap-8\">\n        {/* Header Section */}\n        <section className=\"flex flex-col items-center text-center gap-4 bg-white p-8 rounded-lg shadow-md\">\n          <div className=\"w-32 h-32 rounded-full overflow-hidden border-4 border-blue-600 bg-gray-100 flex items-center justify-center\">\n            {player.headshot_url ? (\n              <img \n                src={player.headshot_url}\n                alt={`${player.full_name} headshot`}\n                className=\"w-full h-full object-cover\"\n                onError={(e) => {\n                  // Fallback to placeholder if image fails to load\n                  (e.target as HTMLImageElement).src = 'https://via.placeholder.com/150/cccccc/666666?text=No+Image';\n                }}\n                loading=\"lazy\"\n              />\n            ) : (\n              <div className=\"w-full h-full flex items-center justify-center bg-blue-100 text-blue-800 text-xl font-bold\">\n                {player.full_name.split(' ').map(n => n[0]).join('')}\n              </div>\n            )}\n          </div>\n          <h1 className=\"text-4xl font-bold text-gray-800\">{player.full_name}</h1>\n          <div className=\"flex items-center gap-2\">\n            <span className=\"px-3 py-1 bg-blue-100 text-blue-800 rounded-full font-semibold\">#{player.number || 'N/A'}</span>\n            <span className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full font-semibold\">{player.position || 'N/A'}</span>\n            {player.team_name && <span className=\"px-3 py-1 bg-purple-100 text-purple-800 rounded-full font-semibold\">{player.team_name}</span>}\n          </div>\n          {player.birth_date && (\n            <p className=\"text-gray-600 mt-2\">Born: {new Date(player.birth_date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</p>\n          )}\n          {player.birth_location && (\n            <p className=\"text-gray-600\">From: {player.birth_location}</p>\n          )}\n        </section>\n\n        {/* Influence and Impact Scores */}\n        <section className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"bg-white p-6 rounded-lg shadow-md\">\n            <h2 className=\"text-2xl font-semibold mb-6 text-gray-800 border-b pb-2\">Astrological Influence</h2>\n            <div className=\"flex flex-col items-center\">\n            <div className=\"flex flex-col items-center\">\n              {player.astro_influence !== undefined && player.astro_influence !== null ? (\n                <>\n                  <CircularProgress \n                    value={player.astro_influence} \n                    size={160}\n                    strokeWidth={12}\n                    showDescription={true}\n                  >\n                    <span className=\"text-3xl font-bold\">\n                      {Math.round(player.astro_influence)}%\n                    </span>\n                    <span className=\"text-sm text-gray-500 mt-1\">Astro Influence</span>\n                  </CircularProgress>\n                  <p className=\"mt-2 text-sm text-gray-600 max-w-xs text-center\">\n                    {player.full_name?.split(' ')[0]}'s performance may be {getInfluenceStrength(player.astro_influence)} by today's celestial alignments.\n                  </p>\n                </>\n              ) : (\n                <div className=\"text-center p-4 bg-yellow-50 rounded-lg border border-yellow-200\">\n                  <p className=\"text-yellow-700\">Astrological influence data not available</p>\n                </div>\n              )}\n            </div>\n            </div>\n          </div>\n          <div className=\"bg-white p-6 rounded-lg shadow-md border-l-4 border-blue-500\">\n            <h2 className=\"text-2xl font-semibold mb-3 text-gray-800\">Player Impact</h2>\n            <div className=\"flex flex-col\">\n              <div className=\"flex items-center justify-between\">\n                <p className=\"text-lg\">Overall Impact:</p>\n                {player.impact_score !== undefined && player.impact_score !== null ? (\n                  <span className=\"font-bold text-blue-600 text-xl\">\n                    {typeof player.impact_score === 'number' ? player.impact_score.toFixed(1) : player.impact_score}\n                  </span>\n                ) : (\n                  <span className=\"text-gray-500\">N/A</span>\n                )}\n              </div>\n              {player.impact_score !== undefined && player.impact_score !== null && (\n                <div className=\"w-full bg-gray-200 rounded-full h-2.5 mt-2\">\n                  <div \n                    className=\"bg-blue-600 h-2.5 rounded-full\" \n                    style={{ \n                      width: `${Math.min(\n                        (typeof player.impact_score === 'number' \n                          ? player.impact_score \n                          : parseFloat(player.impact_score) || 0) * 10, \n                        100\n                      )}%` \n                    }}\n                  ></div>\n                </div>\n              )}\n              <p className=\"mt-4 text-sm text-gray-600\">\n                Impact score represents the player's overall contribution based on statistical performance and astrological alignment.\n              </p>\n\n              {/* Elemental Composition Section */}\n              {astro && (\n                <div className=\"mt-8 pt-6 border-t border-gray-100\">\n                  <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Elemental Composition</h3>\n                  <div className=\"relative h-6 rounded-full bg-gray-100 shadow-inner overflow-hidden\">\n                    <div className=\"absolute inset-0 flex\">\n                      {calculateElementalComposition(astro).map((element, index, array) => (\n                        <div \n                          key={element.name}\n                          className={`h-full relative ${getElementColorClass(element.name)}`}\n                          style={{\n                            width: `${element.percentage}%`,\n                            marginLeft: index === 0 ? '0' : '-1px',\n                            zIndex: array.length - index\n                          }}\n                        >\n                          <div className=\"absolute inset-0 bg-gradient-to-b from-white/20 to-transparent\"></div>\n                          {element.percentage > 12 && (\n                            <span className=\"absolute inset-0 flex items-center justify-center text-xs font-medium text-white mix-blend-overlay\">\n                              {element.percentage}% {element.name}\n                            </span>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Legend */}\n                  <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-3 mt-4\">\n                    {calculateElementalComposition(astro).map(element => (\n                      <div key={element.name} className=\"flex items-center\">\n                        <div \n                          className=\"w-3 h-3 rounded-sm mr-2 shadow-sm\"\n                          style={{ backgroundColor: getElementColor(element.name) }}\n                        />\n                        <span className=\"text-xs font-medium text-gray-700\">\n                          {element.name} <span className=\"text-gray-500\">{element.percentage}%</span>\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </section>\n\n        {/* Performance Prediction Card */}\n        {astro && (() => {\n          // Get elemental composition for prediction basis\n          const elementalComposition = calculateElementalComposition(astro);\n          \n          // Sort elements by percentage to find dominant elements\n          const sortedElements = [...elementalComposition].sort((a, b) => b.percentage - a.percentage);\n          const dominantElement = sortedElements[0].name;\n          const secondaryElement = sortedElements[1].name;\n          \n          // Calculate overall favorability based on planetary alignments\n          // For a more deterministic result, use birthdate and current date\n          const playerBirthDate = new Date(player.birth_date || new Date());\n          const birthDay = playerBirthDate.getDate();\n          const currentDate = new Date();\n          const dayOfYear = Math.floor((currentDate.getTime() - new Date(currentDate.getFullYear(), 0, 0).getTime()) / 86400000);\n          \n          // Create a semi-deterministic value based on birthdate and current date\n          const favorabilityValue = ((birthDay + dayOfYear) % 100) / 100;\n          const isFavorable = favorabilityValue > 0.4; // Slightly bias toward favorable predictions\n          \n          // Get moon phase information\n          const moonPhase = ['New Moon', 'Waxing Crescent', 'First Quarter', 'Waxing Gibbous', 'Full Moon', 'Waning Gibbous', 'Last Quarter', 'Waning Crescent'][dayOfYear % 8];\n          \n          // Baseball skills affected by elements\n          const elementalSkills = {\n            'Fire': ['power hitting', 'aggressive base running', 'fastball velocity', 'competitive drive'],\n            'Earth': ['defensive consistency', 'plate discipline', 'ground ball pitching', 'endurance'],\n            'Air': ['pitch recognition', 'bat speed', 'breaking ball movement', 'strategic thinking'],\n            'Water': ['adaptability', 'clutch performance', 'changeup effectiveness', 'team chemistry']\n          };\n          \n          // Generate prediction statement based on planetary status\n          const getOutlookStatement = () => {\n            if (isFavorable) {\n              const statements = [\n                `Planetary alignments are currently enhancing ${player.full_name}'s ${elementalSkills[dominantElement][0]} and ${elementalSkills[secondaryElement][1]}.`,\n                `${astro.sunSign.sign}'s energy is currently boosting ${player.full_name}'s natural ${dominantElement.toLowerCase()} element attributes.`,\n                `The current ${moonPhase} phase aligns well with ${player.full_name}'s ${astro.moonSign.sign} moon sign, suggesting peak performance potential.`,\n                `${player.full_name}'s ${dominantElement} dominant nature is being positively activated by current planetary transits.`\n              ];\n              return statements[dayOfYear % statements.length];\n            } else {\n              const statements = [\n                `Current planetary alignments may challenge ${player.full_name}'s natural ${dominantElement.toLowerCase()} element strengths.`,\n                `${player.full_name}'s ${astro.sunSign.sign} energy is currently experiencing resistance from planetary transits.`,\n                `The current ${moonPhase} phase creates tension with ${player.full_name}'s ${astro.moonSign.sign} moon sign.`,\n                `Planetary positions suggest ${player.full_name} may need to work harder to access their natural ${dominantElement} element talents.`\n              ];\n              return statements[dayOfYear % statements.length];\n            }\n          };\n          \n          // Generate specific performance impacts based on dominant element\n          const getPerformanceImpacts = () => {\n            const impacts = [];\n            \n            // Add element-specific impacts\n            if (dominantElement === 'Fire') {\n              impacts.push(isFavorable \n                ? `Strong power hitting potential, especially against ${['left-handed', 'right-handed'][dayOfYear % 2]} pitchers`\n                : `May struggle with timing on breaking balls, affecting power numbers`);\n              impacts.push(isFavorable\n                ? `Increased aggression on the basepaths could lead to extra bases`\n                : `Risk of overaggression could lead to baserunning errors`);\n            } \n            else if (dominantElement === 'Earth') {\n              impacts.push(isFavorable\n                ? `Exceptional defensive positioning and fielding consistency expected`\n                : `May play too conservatively in high-pressure defensive situations`);\n              impacts.push(isFavorable\n                ? `Excellent pitch selection and plate discipline likely`\n                : `Could be overly patient at the plate, missing hittable pitches`);\n            }\n            else if (dominantElement === 'Air') {\n              impacts.push(isFavorable\n                ? `Enhanced ability to read and react to complex pitch sequences`\n                : `May overthink at-bats, leading to mental fatigue late in games`);\n              impacts.push(isFavorable\n                ? `Quick adjustments to opposing pitchers' strategies`\n                : `Could struggle against pitchers with unpredictable patterns`);\n            }\n            else if (dominantElement === 'Water') {\n              impacts.push(isFavorable\n                ? `Exceptional performance in high-pressure, clutch situations`\n                : `Emotional fluctuations might affect consistency`);\n              impacts.push(isFavorable\n                ? `Adaptive approach allows quick recovery from slumps`\n                : `Might be overly influenced by team momentum swings`);\n            }\n            \n            // Add moon sign specific impact\n            impacts.push(isFavorable\n              ? `${astro.moonSign.sign} moon sign suggests peak performance during ${['night games', 'day games', 'home stands', 'road trips'][dayOfYear % 4]}`\n              : `${astro.moonSign.sign} moon sign suggests caution during ${['night games', 'day games', 'home stands', 'road trips'][dayOfYear % 4]}`);\n            \n            return impacts;\n          };\n          \n          // Get next favorable date based on moon sign\n          const getNextFavorablePeriod = () => {\n            const moonSigns = ['Aries', 'Taurus', 'Gemini', 'Cancer', 'Leo', 'Virgo', 'Libra', 'Scorpio', 'Sagittarius', 'Capricorn', 'Aquarius', 'Pisces'];\n            const favorableSigns = [\n              astro.sunSign.sign,\n              astro.moonSign.sign,\n              moonSigns[(moonSigns.indexOf(astro.sunSign.sign) + 4) % 12], // Trine aspect\n              moonSigns[(moonSigns.indexOf(astro.sunSign.sign) + 8) % 12]  // Trine aspect\n            ];\n            \n            const randomFavorableSign = favorableSigns[dayOfYear % favorableSigns.length];\n            return `Moon in ${randomFavorableSign} (${['early', 'mid', 'late'][dayOfYear % 3]} ${['June', 'July', 'August', 'September', 'October'][dayOfYear % 5]} is optimal)`;\n          };\n          \n          return (\n            <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\n              <div className=\"flex items-start\">\n                <div \n                  className={`flex-shrink-0 h-6 w-1 rounded-full ${\n                    isFavorable ? 'bg-green-500' : 'bg-yellow-500'\n                  }`}\n                ></div>\n                <div className=\"ml-4 w-full\">\n                  <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\n                    {isFavorable ? 'Favorable Outlook' : 'Challenging Period'}\n                  </h3>\n                  <p className=\"text-gray-700 mb-3\">{getOutlookStatement()}</p>\n                  \n                  <div className=\"mb-3\">\n                    <h4 className=\"text-md font-medium text-gray-700 mb-2\">Astrological Impacts on Performance:</h4>\n                    <ul className=\"list-disc pl-5 space-y-1\">\n                      {getPerformanceImpacts().map((impact, index) => (\n                        <li key={index} className=\"text-sm text-gray-600\">{impact}</li>\n                      ))}\n                    </ul>\n                  </div>\n                  \n                  <div className=\"mt-4 pt-3 border-t border-gray-100\">\n                    <p className=\"text-sm text-indigo-600 font-medium\">\n                      Next favorable period: {getNextFavorablePeriod()}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })()}\n\n        {/* Astrological Insights */}\n        {astro && (\n          <section className=\"bg-white p-6 rounded-lg shadow-md\">\n            <h2 className=\"text-2xl font-semibold mb-4 text-gray-800 border-b pb-2\">Astrological Profile</h2>\n            <div className=\"mt-4\">\n              <BigThreeAstroCards astro={astro} playerName={player.full_name || ''} />\n            </div>\n            \n            <div className=\"mt-6 p-4 bg-indigo-50 rounded-lg border border-indigo-100\">\n              <h3 className=\"font-semibold text-indigo-800 mb-2\">Astrological Interpretation</h3>\n              <AstroPeakDay\n                player={player}\n                astro={astro}\n              />\n            </div>\n            \n            <div className=\"mt-6\">\n              <div className=\"bg-orange-50 p-4 rounded-lg border border-orange-200\">\n                <h3 className=\"font-semibold text-orange-800 mb-2\">Compatibility</h3>\n                <p className=\"text-gray-700\">\n                  {(() => {\n                    // Determine compatible signs based on sun sign element\n                    const elementToCompatibles: Record<string, string[]> = {\n                      Fire: ['Aries', 'Leo', 'Sagittarius'],\n                      Earth: ['Taurus', 'Virgo', 'Capricorn'],\n                      Air: ['Gemini', 'Libra', 'Aquarius'],\n                      Water: ['Cancer', 'Scorpio', 'Pisces'],\n                    };\n                    const sunElement = astro.sunSign.element;\n                    const compatibleSigns = elementToCompatibles[sunElement] || [];\n                    return `${player.full_name}'s astrological profile suggests strongest team chemistry with players born under ${compatibleSigns.join(', ')} signs.`;\n                  })()}\n                </p>\n              </div>\n            </div>\n          </section>\n        )}\n\n        {/* Sports Statistics - Conditionally render based on sport */}\n        {player.league === 'NBA' ? (\n          <section className=\"mt-8 bg-white p-6 rounded-lg shadow-md\">\n            <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800 border-b pb-3\">Basketball Statistics</h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full text-sm border border-gray-200\">\n                <thead>\n                  <tr className=\"bg-gray-100\">\n                    <th className=\"px-3 py-2\">GP</th>\n                    <th className=\"px-3 py-2\">MIN</th>\n                    <th className=\"px-3 py-2\">PTS</th>\n                    <th className=\"px-3 py-2\">REB</th>\n                    <th className=\"px-3 py-2\">AST</th>\n                    <th className=\"px-3 py-2\">STL</th>\n                    <th className=\"px-3 py-2\">BLK</th>\n                    <th className=\"px-3 py-2\">FG%</th>\n                    <th className=\"px-3 py-2\">3P%</th>\n                    <th className=\"px-3 py-2\">FT%</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td className=\"px-3 py-2\">{player.stats_games_played ?? 'N/A'}</td>\n                    <td className=\"px-3 py-2\">{player.stats_minutes_per_game ?? 'N/A'}</td>\n                    <td className=\"px-3 py-2\">{player.stats_points_per_game ?? 'N/A'}</td>\n                    <td className=\"px-3 py-2\">{player.stats_rebounds_per_game ?? 'N/A'}</td>\n                    <td className=\"px-3 py-2\">{player.stats_assists_per_game ?? 'N/A'}</td>\n                    <td className=\"px-3 py-2\">{player.stats_steals_per_game ?? 'N/A'}</td>\n                    <td className=\"px-3 py-2\">{player.stats_blocks_per_game ?? 'N/A'}</td>\n                    <td className=\"px-3 py-2\">{player.stats_field_goal_pct !== undefined ? (parseFloat(player.stats_field_goal_pct) * 100).toFixed(1) + '%' : 'N/A'}</td>\n                    <td className=\"px-3 py-2\">{player.stats_three_point_pct !== undefined ? (parseFloat(player.stats_three_point_pct) * 100).toFixed(1) + '%' : 'N/A'}</td>\n                    <td className=\"px-3 py-2\">{player.stats_free_throw_pct !== undefined ? (parseFloat(player.stats_free_throw_pct) * 100).toFixed(1) + '%' : 'N/A'}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </section>\n        ) : (\n          <section className=\"mt-8 bg-white p-6 rounded-lg shadow-md\">\n            <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800 border-b pb-3\">Baseball Statistics</h2>\n            {/* Stats Summary Cards */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n              <div className=\"bg-blue-50 p-4 rounded-lg text-center border border-blue-100\">\n                <p className=\"text-sm text-blue-600 font-medium\">BATTING AVG</p>\n                <p className=\"text-2xl font-bold text-gray-800\">{battingStats?.avg || '.000'}</p>\n              </div>\n              <div className=\"bg-green-50 p-4 rounded-lg text-center border border-green-100\">\n                <p className=\"text-sm text-green-600 font-medium\">HOME RUNS</p>\n                <p className=\"text-2xl font-bold text-gray-800\">{battingStats?.home_runs || '0'}</p>\n              </div>\n              <div className=\"bg-purple-50 p-4 rounded-lg text-center border border-purple-100\">\n                <p className=\"text-sm text-purple-600 font-medium\">RBI</p>\n                <p className=\"text-2xl font-bold text-gray-800\">{battingStats?.rbi || '0'}</p>\n              </div>\n              <div className=\"bg-yellow-50 p-4 rounded-lg text-center border border-yellow-100\">\n                <p className=\"text-sm text-yellow-600 font-medium\">OPS</p>\n                <p className=\"text-2xl font-bold text-gray-800\">{battingStats?.ops || '.000'}</p>\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* Batting Stats */}\n              <div>\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-2\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-800\">Batting Statistics</h3>\n                </div>\n                {battingStats ? (\n                  <BattingStatsComponent stats={battingStats} />\n                ) : (\n                  <p className=\"text-center text-gray-500 dark:text-gray-400 py-4\">\n                    No batting statistics available for this player.\n                  </p>\n                )}\n              </div>\n\n              {/* Fielding Stats */}\n              <div>\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center mr-2\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 4a2 2 0 114 0v1a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-1a2 2 0 100 4h1a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-1a2 2 0 10-4 0v1a1 1 0 01-1 1H7a1 1 0 01-1-1v-3a1 1 0 00-1-1H4a2 2 0 110-4h1a1 1 0 001-1V7a1 1 0 011-1h3a1 1 0 001-1V4z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-800\">Fielding Statistics</h3>\n                </div>\n                {fieldingStats ? (\n                  <div className=\"overflow-x-auto bg-white border border-gray-200 rounded-lg shadow-sm\">\n                    <table className=\"min-w-full divide-y divide-gray-200\">\n                      <thead className=\"bg-gray-50\">\n                        <tr>\n                          <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Statistic</th>\n                          <th className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Value</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\n                        {Object.entries(fieldingStats).map(([key, value]) => (\n                          <tr key={key} className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-700\">\n                              {key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                            </td>\n                            <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-700 text-right font-mono\">\n                              {value !== null && value !== undefined ? value : 'N/A'}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                ) : (\n                  <p className=\"text-center text-gray-500 dark:text-gray-400 py-4\">\n                    No fielding statistics available for this player.\n                  </p>\n                )}\n              </div>\n            </div>\n            {/* Recent Performance Graph Placeholder */}\n            <div className=\"mt-8 p-4 bg-gray-50 rounded-lg border border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">Performance Trend</h3>\n              <div className=\"h-48 bg-white p-4 rounded border border-gray-200 flex items-center justify-center\">\n                <p className=\"text-gray-500\">Performance trend visualization will be available soon.</p>\n              </div>\n            </div>\n          </section>\n        )}\n        \n        {/* Elemental Influence Section */}\n        {astro && (\n          <section className=\"bg-white p-6 rounded-lg shadow-md mt-8\">\n            <h2 className=\"text-2xl font-bold mb-6 text-gray-800 border-b pb-3\">Elemental Influence</h2>\n            <div className=\"space-y-4\">\n              {getElementalInfluences(astro, player?.full_name?.split(' ')[0] || 'Their').map((influence) => (\n                <div key={influence.element} className=\"p-4 rounded-lg border-l-4 bg-gray-50\" style={{ borderColor: getElementColor(influence.element) }}>\n                  <div className=\"flex items-center justify-between mb-1\">\n                    <h4 className=\"font-semibold text-gray-800\">{influence.element}: {influence.percentage}%</h4>\n                    <span className=\"text-sm text-gray-500\">{influence.strength}</span>\n                  </div>\n                  <p className=\"text-gray-700 text-sm\">{influence.description}</p>\n                </div>\n              ))}\n            </div>\n          </section>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default PlayerDetailPage;\n"],"names":["formatPercentage","value","formatStatValue","BattingStats","stats","statGroups","jsxs","jsx","group","groupIndex","React","stat","statIndex","getElementForSign","sign","calculateElementalComposition","astro","elements","elementCounts","total","sum","count","element","getElementColor","getElementColorClass","getElementStrength","percentage","getElementDescription","playerName","descriptions","strength","_a","getInfluenceStrength","score","getElementalInfluences","zodiacDetailsMap","getFullAstroSignInfo","signName","details","PlayerDetailPage","teamId","playerId","useParams","location","useLocation","player","setPlayer","useState","setAstro","loading","setLoading","error","setError","sport","setSport","useEffect","isNba","fetchedPlayer","getPlayerByApiId","formattedPlayer","nbaPlayer","_b","mlbPlayer","birthLocation","_c","_d","rawAstroData","getAstroData","structuredAstroData","astroError","err","battingStats","fieldingStats","e","n","Fragment","CircularProgress","index","array","sortedElements","a","b","dominantElement","secondaryElement","birthDay","currentDate","dayOfYear","isFavorable","moonPhase","elementalSkills","getOutlookStatement","statements","getPerformanceImpacts","impacts","getNextFavorablePeriod","moonSigns","favorableSigns","impact","BigThreeAstroCards","AstroPeakDay","elementToCompatibles","sunElement","compatibleSigns","BattingStatsComponent","key","l","influence"],"mappings":"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"}